- 모두들 좋은 아침이에요Kub 201에 오신 것을 환영합니다.
AWS 기반 쿠버네티스의 미래.제 이름은 네이선 테이버이고 정말 기대됩니다.
오늘 아침에 이야기 나눠요.저도 조금 더 합류할 거예요
조금 후에 김형태 작가님.자, 특별 초청 연사님.저는 의 제품 책임자입니다.
AWS의 쿠버네티스와 레지스트리에 대해 알아보겠습니다.그래서, 우리가 여기 있는 이유는
우리가 컴퓨터를 사용하는 방식이 근본적으로 바뀌었습니다.그래서 메인프레임 이후로
통합 마이크로컴퓨터, 엔터프라이즈 컴퓨팅은
하드웨어 및 데이터 센터 공간에 상당한 투자가 필요했습니다.그리고 2006년에 아마존은 다음과 같이 소개했습니다.
아마존 S3와 아마존 EC2.그리고 이것이 첫 번째였습니다.
아마존 웹 서비스.그 이유 중 하나이기도 합니다.
우리 모두가 오늘 여기 있는 이유그리고 공개적으로 사용할 수 있는 표준형 제품이었죠.
스토리지 및 컴퓨팅 프리미티브의 표현식
amazon.com에서 실행하는 데 사용한 것은 무엇입니까? 당시에는 무엇이었으며
제 생각에 오늘날에도 여전히 가장 크고 가장 규모가 큰 곳 중 하나라고 생각합니다.
세계에서 트래픽이 많이 발생하는 웹사이트.이것이 바로 클라우드입니다. 모든 애플리케이션을 실행하는 데 사용할 수 있는 컴퓨팅 프리미티브의 집합입니다.
웹 사이트, 데이터 처리, 머신 러닝 모델까지.그리고 거의 20년에 걸쳐 AWS는 220개 이상의 서비스로 성장했고, 우리는 이를 탄생시켰습니다.
애플리케이션 및 인프라를 관리하는 데 사용되는 복잡한 도구를 비롯한 수많은 다른 클라우드.클라우드는 근본적으로
컴퓨팅 모델, 저장, 처리 방식을 변경했습니다.
정보를 검색할 수도 있죠.이제 몇 분 만에 애플리케이션을 작성하고 전 세계에 배포할 수 있습니다.불과 몇 년 만에 전체 데이터 센터를 인스턴스화하여 매우 복잡한 AI 모델을 트레이닝할 수 있습니다.
예전에는 수십억 달러가 필요했을 것입니다.
슈퍼컴퓨터 투자.몇 가지로 무엇이든 할 수 있습니다.
얼마 전까지만 해도 AWS 콘솔에서 클릭만 하면 계획, 투자 및 구축에 수년이 걸렸을 것입니다.클라우드는 우리가 애플리케이션 구축에 대해 생각하는 방식을 근본적으로 바꿔놓았습니다.하지만 정말 다양한 것들이 있기 때문이죠.
매우 다양한 장소에서 실행되는 애플리케이션,
사람들은 클라우드 내부 및 외부에서 운영하는 방법에 대한 일관된 모델을 찾는 데 어려움을 겪어 왔습니다.그리고 이건 새로운 문제가 아니죠?정말 많은 문제가 있었습니다.
사람들이 수년에 걸쳐 개발한 솔루션,
그것도 시도해 봤지만, 오늘날 최고의 클라우드는
운영 체제는 쿠버네티스이고, 쿠버네티스는
엄청난 인기를 누리고 있습니다.그러니까, 대다수가
현재 기업들은 프로덕션 환경에서 Kubernetes를 사용하고 있거나 시범 사용을 하고 있습니다.이는 주로 쿠버네티스가 실제로 유용하기 때문입니다. 그렇죠?정말 유용한 도구입니다.간단한 API 세트를 가지고 있습니다.
대규모 서버 그룹 관리 및 조정용
애플리케이션이 이러한 모든 서버에서 실행되는 방식간단히 말씀드리자면, 쿠버네티스는 약 55개의 핵심 리소스에 걸쳐 약 1,500개의 API 메서드 또는 함수를 가지고 있기 때문입니다. 이를 비교하면
AWS 파이썬 SDK를 위한 10,000개 이상의 API 함수가 있죠?비교적 단순하지만 단순성은 핵심 가치 중 하나일 뿐입니다.
쿠버네티스의 제안.(네이선이 목을 가다듬으며) 앤디 재시는 이렇게 말했습니다. “개발자를 믿으신다면
웹 서비스를 기본 구성 요소로 사용하고 그 다음에는 운영 체제를 사용하여 애플리케이션을 처음부터 새로 구축할 것입니다.
인터넷이 됩니다.”하지만 인터넷 내에는 여러 도메인이 있습니다. 그래서 인터넷 외의 장소도
인터넷도 존재합니다.Kubernetes가 빛을 발하는 지점입니다. 데이터 센터부터 모든 곳에서 작동하는 데 사용할 수 있는 기본 구성 요소 세트를 제공합니다.
AWS에서 F16 전투기까지, 그리고 네, 그들은 진지하게 해냈습니다.구글로 검색해 볼 수 있습니다.그들은 쿠버네티스를 실행했습니다.
F16 전투기에서 말이죠.그리고 마지막으로 쿠버네티스
믿거나 말거나 1500 때문에 확장이 가능합니다.
함수만으로는 클라우드를 구동하기에 충분하지 않습니다.그리고 이러한 확장성은
이를 통해 고객은 다양한 장소에서 Kubernetes를 사용할 수 있습니다.현재 195개가 있습니다.
클라우드 네이티브에서 관리되는 오픈소스 프로젝트
컴퓨팅 파운데이션에는 수백 개가 있습니다.
통합에서 실행되는 더 많은 조경 프로젝트
쿠버네티스를 사용하고 확장하세요.직접 프로젝트를 작성할 수도 있는데, 여기 계신 많은 분들이 그 프로젝트를 보셨거나
그 사람들이 직접 해봤어요.좋아요.요점을 말씀드리자면, 쿠버네티스는 대단합니다.사실 쿠버네티스를 사용하는 것은 정말 대단합니다.쿠버네티스는 놀라운 기능을 가지고 있습니다.
개발자 경험.쿠버네티스를 실행하는 것은 어려운 일이며, Kubectl Apply는 수백 라인의 YAML, 플러그인, 네트워크에 비해 어렵습니다.
구성, 클러스터 업그레이드, 쿠버네티스는 일반적으로
특히 대규모로 운영하기 어려운 시스템, 그리고
특히 여러 곳에서 말이죠.따라서 AWS에서는 관리형 쿠버네티스 출시 7년째를 맞았습니다.우리가 아마존 EKS를 발표했잖아요, 그렇죠?
2017년 여기 리인벤트에서 말이죠.그리고 지난 7년 동안 우리는 모든 것에 대해 깊이 연구했습니다.
우리가 생각하는 쿠버네티스 운영의 측면은
지구상에서 가장 큰 규모입니다.기본 매니지드 컨트롤 플레인을 도입하여 꾸준히 기능을 추가했습니다.
컴퓨팅 관리, 보조 소프트웨어, 보안,
확장성, 네트워킹, 관찰 가능성, 문제 해결 등 수십 개의 저서를 작성했습니다.
새로운 오픈소스 프로젝트, 그 중 일부를 클라우드 네이티브 컴퓨팅 재단에 넘겨 주었고, 근본적인 변화를 일으켰습니다.
쿠버네티스의 작동 방식에 맞게 전체 퍼블릭 제품군을 구축했습니다.
AWS와 Kubernetes를 하나로 묶는 데 도움이 되는 내부 통합도 제공합니다. 우리는 스스로를 대규모 및 쿠버네티스의 본거지라고 생각합니다.
현존하는 가장 정교한 애플리케이션 및 기계 학습 모델 중 Kubernetes를 기반으로 구축되었습니다.그리고 지금은 수십 개를 실행하고 있습니다.
매년 수백만 개의 클러스터를 고객에게 제공합니다.그리고 이 수치는 빠르게 증가하고 있습니다.엣지 케이스가 있다면
저희 팀이 봤어요.AWS에서는 압축이 필요 없다고 말하고 싶습니다.
경험을 위한 알고리즘.앞으로 45분 정도 시간을 내어 Kubernetes의 비전을 실현하는 데 도움이 되도록 AWS가 어떻게 혁신하고 있는지 말씀드리겠습니다.그리고 말씀드렸듯이, 우리는
오늘 김형태와 함께할 수 있어서 운이 좋네요.
스노우플레이크의 수석 소프트웨어 엔지니어.스노우플레이크는 엑사바이트 규모입니다.
AWS를 기반으로 구축된 데이터 플랫폼, 정말 기대됩니다.
Hyungtae로부터 그 방법에 대해 조금 후에 들어볼까요?
Snowflake는 EKS를 사용하여 머신 러닝을 확장하고 있습니다.
고객을 위한 것입니다.그래요, 그래요.그러니까, 네 목표는
비즈니스 가치를 제공하는 것이지 인프라 시스템을 운영하는 것이 아닙니다.고객이 원하는 것은 오직
만져야 할 물건을 만져야 할 때 만져보는 거죠.따라서 우리의 목표는 이러한 시스템을 운영하는 데 있어 차별화되지 않은 무거운 작업을 없애고 프로덕션에 바로 사용할 수 있는 Kubernetes 환경을 구축하는 데 필요한 기본 구성 요소를 제공하는 것입니다.그럼, 그게 무슨 뜻일까요?요즘 쿠버네티스 환경은 어떤 모습일까요?우리가 보는 시각은 이렇죠?스택에는 실제로 Kubernetes를 가져와 프로덕션에 적용하는 몇 가지 계층이 있습니다.맨 아래 레이어에 있죠?인프라는 있고, 인프라는 컴퓨팅, 네트워킹, 스토리지, 핵심 기반입니다.
AWS가 고객을 위해 대규모로 구축하고 실행하는 구성 요소.다음 계층에는
쿠버네티스 컨트롤 플레인.저희는 스케일을 다루고 있습니다.
관련 가용성, 통합 및 확장
쿠버네티스 API 서버, CD, 기타 모든 컨트롤 플레인 구성 요소그리고 그 외에도 다음이 필요합니다.
관리 도구 맞죠?에 대한 도구 및 구성 요소
배포, 관찰 가능성, 거버넌스, 트래픽 및 보안.그뿐만 아니라, 더 나아가 다음과 같은 것들을 위한 개발자 도구도 있습니다.
내부 개발자 플랫폼, 작업 관리, ML 워크플로 관리, 요즘 사람들이 ML ops라고 부르는 것들, 분석 플랫폼, 맞죠?그리고 애플리케이션, 코드, 데이터는 모두 컨테이너화되어 스택 아래까지 실행됩니다.물론 한편으로는 컨테이너 레지스트리도 있습니다. 왜냐하면 이 모든 것들이 있기 때문이죠.
컨테이너로 패키징된 후 이 인프라에서 실행됩니다.따라서 쿠버네티스의 목표는 고객이 애플리케이션과 데이터에서 벗어나 풀스택 Kubernetes 환경으로 쉽게 전환할 수 있도록 하는 것입니다.이에 대해 조금 이야기해 보도록 하겠습니다.레지스트리부터 시작해 볼까요?그럼 모든 것은 다음과 같이 시작됩니다.
컨테이너 레지스트리.코드와 데이터가 처음 저장되는 곳입니다.글쎄요, 데이터가 도착할 수도 있습니다.
RDS나 S3 같은 곳에서는 애플리케이션 코드가 패키징되고 클라이언트와 함께 구축되고 있습니다.
핀치, 도커 등 다양한 기능이 있습니다.
곧 추가될 도구들.그리고 아마존 ECR도 있고요.
이는 AWS의 관리형 OCI인 컨테이너 레지스트리입니다.
훌륭한 레지스트리 제품.사실 저희는 ECR을 운영하고 있습니다.
아마존 EKS보다 오래 걸렸죠.어떤 클라이언트에서든 빌드할 수 있고, 이미지를 ECR에 넣은 다음 배포할 수 있습니다.
AWS 클라우드 어디에서든 가능합니다.따라서 이를 배포할 수 있습니다.
EKS, ECS, Lambda 등 원하는 곳에 설치할 수 있습니다.그래서 우리는 계속 발전해 왔습니다.
지난 몇 년간 ECR은ECR은 매우 활발한 곳입니다.
우리에겐 투자죠.지난 한 해 동안 우리는
실제로 ECR에서의 이미지 스캐닝을 업그레이드했습니다. 왜냐하면 우리가 발견한 것은 고객에게 정말 중요하다는 것이었기 때문입니다.
이러한 이미지는 안전하며 이미지를 실행하고 싶을 때 사용할 수 있습니다.
스캔이 완료되고 프로덕션 환경에서 신뢰할 수 있는 코드를 실행하고 있다는 서명이 완료된 이미지그래서 예전에는
Claire라는 이미지 스캐닝 라이브러리가 있었는데 클레어는 훌륭했지만 그렇지 않았습니다.
고객이 요구했던 모든 라이브러리와 모든 취약점 데이터베이스.그래서 2024년에 우리는 통합을 했습니다.
아마존 인스펙터와 함께 ECR 베이직을 도입했습니다.
그리고 향상된 이미지 스캐닝.그래서 이미지 스캐닝이 향상되었습니다.
업그레이드 프로젝트입니다.기본 버전은 Inspector에서 실행되고 50개 이상의 취약성 데이터베이스와 12개 이상의 운영 체제를 제공하는 향상된 기능을 제공합니다.그리고 이 기능을 활성화할 수 있습니다.
모든 ECR 레지스트리 내에서 푸시 또는 기타 일정에 따라 이미지를 자동으로 스캔합니다.ECR에서 수행한 또 다른 기능은 고객이 더 쉽게 사용할 수 있도록 하는 것입니다.
이미지를 가져오기 전에 ECR에서 이미지 상태를 중앙 집중화하는 거죠.그래서 근본적으로 확립되었습니다.
컨테이너 이미지 전송 파이프라인, 모든 것
클러스터까지 내려가죠.이를 실현한 방법 중 하나는 인증된 풀스루 캐시인 ECR (풀스루 캐시) (PTC) 을 사용하는 것이었습니다.
스루 캐시를 사용하면 Docker 허브에서 가져온 업스트림 레지스트리를 동기화할 수 있습니다.
GitHub 컨테이너 레지스트리 또는 기타 공용 레지스트리 소스에서 가져온 다음 해당 이미지를 ECR로 동기화합니다.동기화를 설정하면 자동으로 생성됩니다.
ECR에 있는 프라이빗 리포지토리로 해당 이미지와 이미지의 다양한 변형을 모두 저장하며, 주기적으로 다음을 실행합니다.
업데이트된 이미지를 ECR로 가져오기 위한 동기화 프로세스.거기서 스캔한 다음 다음 자리에 앉을 수 있습니다.
가져와야 할 인프라에 말이죠.따라서 보안이 향상되고 이미지 풀 타임도 개선되어 애플리케이션을 더 빠르게 시작할 수 있습니다.다른 모든 것들과 마찬가지로
지금 바로 사용할 수 있습니다.그리고 ECR 관련 작업과 그 설치 공간 덕분에 Amazon ECR은 이제 20억 개 이상의 이미지를 보유하고 있습니다.
매일 이미지를 가져옵니다.그 이유는
고객이 컨테이너를 실행하는 모든 방식에 사용됩니다.
쿠버네티스도 포함해서요.자, 이것이 우리의 혁신과 우리가 지금까지 해왔던 것들 중 일부입니다.
컨테이너 레지스트리 쪽.이제 쿠버네티스 컨트롤 플레인에 대해 조금 이야기해 보겠습니다.가장 큰 난제 중 하나는
고객이 쿠버네티스를 사용하면서 직면한 문제는 다음과 같습니다.
컨트롤 플레인이 최신 상태입니다.그리고 아마존 EKS에는
우리의 성과가 좋아지던 시점이 있었습니다.
컨트롤 플레인을 최신 상태로 유지한다는 건 솔직히 말해서
조금은 형편없는 일이었죠.그래서 이 부분에 대한 저희의 하이 워터마크는
업스트림보다 243일 늦었죠.그리고 우리는 막대한 투자를 했습니다.
지난 2년간 자동화 분야에 종사하면서 적격한 신규 시장에서 한 걸음 더 나아갔습니다.
Kubernetes 버전은 몇 주 만에 완료되고 며칠 만에 정식 새 버전까지 단축됩니다.그래서 2023년에 우리는 이것을 내놓았습니다.
자동화를 실행에 옮겨 4개를 출시했습니다.
최신 상태를 유지하기 위한 Amazon EKS 버전그래서 지금은 그 속도를 늦췄습니다.저희는 이제 1년에 세 가지 버전을 출시하고 있는데, 이 버전과 보조를 맞춰 출시하고 있습니다.
쿠버네티스 업스트림 릴리스 주기.그리고 업스트림보다 약 40~35일 정도 성능이 일정하게 유지되었습니다.그렇게 될 것 같지는 않아요.
이것보다 훨씬 빨리 가세요.시간이 있겠지만 보통 우리는 새로운 마이너 버전이 나올 때까지 기다리곤 합니다.
쿠버네티스는 일반적으로 0.1 릴리스로 안정화될 것입니다.
그 내용을 내려서 Amazon EKS의 일부로 만들기 전에요.하지만 솔직히 말씀드리자면, 다음은 제 생각입니다.
올해에는 이 그래프를 보여주지 않을 수도 있습니다. 너무 지루해졌기 때문이죠. 그게 우리가 좋아하는 방식이에요.하지만 속도가 빨라지면서
이미지와 버전을 Amazon EKS로 훨씬 빠르게 도입하면서 고객은 또 다른 문제에 직면하게 되었습니다. 바로 이러한 문제를 해결하는 것입니다.
최신 버전 맞죠?그래서 쿠버네티스 업그레이드
정말 큰 골칫거리일 수 있습니다.그럼 우리 고객들은
작년에 말씀드렸듯이, 보세요, 시간이 좀 걸린다는 거예요.
저희는 14개월보다 조금 더 깁니다.
새 버전으로 전환하기 위한 일반적인 버전 출시 프로세스
쿠버네티스 버전.그래서 우리는 그 말에 귀를 기울였습니다.
그 고객 피드백과 저희가 소개한 것은
확장 버전 지원.Amazon EKS에 대한 확장 버전 지원을 통해 추가로 12개월 동안 AWS에 대한 전체 지원을 받을 수 있습니다.
모든 쿠버네티스 마이너 버전.따라서 커뮤니티 릴리즈 주기가 14개월이 지난 후에는 이에 대한 모든 지원이 이루어지게 됩니다.
버전이 만료되었습니다.따라서 문서는
웹 사이트에서 제거되고, 다운로드 가능한 바이너리는 제거되지만, 버그 티켓이나 버그는 제거되지 않습니다.
더 이상 작업되지 않았을 뿐더러 더 이상 받아들여지지 않습니다.그리고 이 버전은 정말 효과적이죠.
사라졌지만 Amazon EKS에서는
추가로 12개월 동안 계속 운영하기 위해 투자했습니다.그래서 우리 팀은 다음을 살펴볼 것입니다.
쿠버네티스의 새 버전과 새로운 CVE가 출시됩니다.적절한 패치를 선별하여 모든 패치를 패치할 예정입니다.
이전 버전의 Kubernetes를 실행하는 시스템은 보안을 유지하므로 이동을 계획하는 동안에도 계속 운영할 수 있습니다.
다음 버전으로.그럼 뭐가 정말 좋은가요?
확장 버전 지원의 경우 언제, 무엇을 선택할지 선택할 수 있다는 것입니다.
이걸 얼마나 사용하고 싶으세요?모든 마이너 버전에서 확장 버전 지원을 받을 수 있습니다.로 다시 업그레이드할 수 있습니다.
언제든지 표준 지원을 이용할 수 있습니다.전환하기 위해 특별한 버전의 Kubernetes를 선택할 필요가 없으며 전략을 계획할 필요도 없습니다.비즈니스 우선 순위에 따라 업그레이드 시기를 조정할 수 있습니다.또한 동시에 많은 고객들이 확장 버전을 사용하고 있었습니다.
지지자는 “잠깐, 여긴 개발 클러스터야”라고 말하더군요.사실 당신이라면 상관없어요.
얘들아 자동으로 업그레이드 해줘항상 표준 지원에서만 사용할 수 있도록 할 수 있나요?그래서 몇 달 전에 저희는
업그레이드 정책 및 업그레이드 정책을 발표했습니다.
컨트롤 플레인을 자동으로 업데이트하세요
표준 버전에서.따라서 업그레이드 정책을 설정할 수 있습니다.
모든 쿠버네티스 클러스터, 모든 EKS 클러스터 및
해당 정책을 설정하면 당사는 항상 해당 정책을 유지합니다.
컨트롤 플레인이 최신 표준으로 업데이트되었습니다.
쿠버네티스 버전.따라서 이것은 훌륭한 해결책입니다.
개발 및 테스트 클러스터, 또는 무엇을 보고 싶은지 알고 싶은 카나리아 스테이징 클러스터에 사용할 수 있습니다.
업그레이드가 미치는 영향이 크며, 업그레이드가 실패에 빠질까 걱정하지 않으셔도 됩니다.
확장 지원 모드.이제 사용할 수 있습니다.그래서 시간이 좀 더 남았으면 좋겠어요.
업그레이드는 이야기의 일부이지만, 업그레이드가 더 많은 것도 가능합니다.
업그레이드할 때의 자신감은 쿠버네티스 버전의 또 다른 이야기죠?저희 고객들도 마찬가지고요.
언제 어떤 일이 벌어질지 보고 싶었어요.
이 버전을 업그레이드하나요?그래서 소개해드렸죠.
작년에 Insights를 업그레이드했는데 Insights를 업그레이드하면 사실상 클러스터의 성적표와 같습니다.저희는 이를 지속적으로 실행하고 있습니다.
30일 분량의 데이터를 제공하고 API 서버에 어떤 API 호출이 들어오는지 살펴보고 있습니다.
실행하지 않는 쿠버네티스의 모든 향후 버전들.그래서 안타깝게도 저는 그렇게 하지 않았습니다.
제 목록을 버전별로 정렬해 봤는데, 보시다시피 저는
이 예시에서는 1.25 클러스터를 실행합니다.그리고 업그레이드 인사이트는
API 서버 및 다음과 같은 호출을 테스트합니다.
버전 1.32까지 계속 이에 대해 적용되고 있습니다.그래서 여러 버전을 건너뛰고 싶으면 사실 이렇게 말할 수 있습니다.
1.26이나 1.27로 가고 싶어요. 제 성적표를 확인할 수 있어요.
이 버전들과 비교해서 문제가 성공하고 있는지, 실패하고 있는지 확인해 보세요.그리고 어떻게 생겼는지,
높은 수준의 뷰가 나오는데 바로 들어가서 “좋아요, 어디서 그런 오류가 발생하는 걸까요?” 라고 물어볼 수 있습니다.지금 이 컨트롤 플레인을 업그레이드하면 무슨 문제가 생길까요?그래서 이 경우에는 v1 베타 1 포드를 사용하고 있습니다.
디스럽션 예산 책정, 그리고 1.25에서는 그 내용이 대체되었습니다.
v1 포드 중단 예산으로 말이죠.그래서 이 클러스터를 업그레이드하면
지금 당장은 Kub State Metrics를 1.24에서 1.25로 예상할 수 있는데, 이건 사실 제 것입니다.
애플리케이션 이름을 “App”이라고 지정했는데 그렇지 않다는 건 알지만
매우 창의적입니다 (웃음). 하지만 여기서 API 호출을 하는 것은 Kube State Metrics와 앱이 두 가지라는 것을 알 수 있습니다.바로 이런 것들이지요.
클러스터를 업그레이드하기 전에 가서 고쳐야 할 문제죠.그래서 저희가 정말 좋아하는 것은
Upgrade Insights는 이를 통해 다음을 수행할 수 있다는 것입니다.
세부 사항을 자세히 알아보고 팀에 권한을 부여하세요
무슨 일이 벌어지고 있는지 정확히 이해하려면
업그레이드하기 전에 클러스터를 만들어 안심하고 업그레이드 중 장애를 방지할 수 있습니다.다른 모든 것들과 마찬가지로
지금 바로 사용할 수 있습니다.이것은 모든 EKS 콘솔 내부에 있습니다.콘솔을 열면 화면에서 확인할 수 있습니다.
옵저버빌리티 대시보드.그리고 계속 실행되고 있습니다.
기본적으로 모든 클러스터가 있습니다.참고로 이 작업에는 비용이 들지 않습니다.이건 그냥 구할 수 있어요
모든 단일 클러스터에 적용됩니다.그러니까 분명히 관찰 가능성이죠.
업그레이드할 때 매우 유용하죠.
하지만 옵저버빌리티 또한 정말 중요한 부분입니다.
쿠버네티스와 같은 시스템을 매일 운영하는 것이죠.그리고 그 중 하나는
고객이 항상 해야 하는 일은 구성입니다.
클러스터의 옵저버빌리티.그래서 올해 저희가 원했던 것은
이 작업을 훨씬 쉽게 하기 위해 향상된 기능을 도입했습니다.
컨트롤 플레인 옵저버빌리티.이게 몇 달 전에 나왔는데 우리가 한 일은
크게 두 가지를 추가했습니다.먼저 클러스터, Kube 컨트롤러 관리자 및 Kube 스케줄러 메트릭에 대한 추가 메트릭을 추가했습니다.그리고 이것들을 긁어낼 수 있습니다.
새로운 Prometheus 엔드포인트에서 원하는 곳으로 내보낼 수 있습니다.
옵저버빌리티 시스템.또한 새로운 기능을 추가했습니다.
EKS 콘솔에 사전 구성된 대시보드는 다음과 같습니다.
클러스터 관리자에게 시각적 표현을 제공합니다.
빠르게 평가할 수 있는 이러한 주요 지표 중 컨트롤 플레인이 정상입니까?제대로 작동하고 있나요?
효과가 있을 것으로 예상되나요?그래서, 이것들이 정말 멋지죠.바로 여기에서 볼 수 있습니다. 미리 빌드되어 있고 CloudWatch에 있습니다.자세히 알아보실 수 있습니다.
이러한 대시보드 중 어느 것이든 가능합니다.그리고 그 일환으로 우리는 이걸 완전히 새로 만들었습니다.
EKS 내부의 옵저버빌리티 스위트입니다.클러스터 인사이트 탭이 오른쪽에 있는 것을 볼 수 있습니다.조금 작습니다.측정 기준도 있지만, 이 부분도 제가 가장 좋아하는 부분이에요.
우리는 CloudWatch 로그 인사이트와 긴밀하게 통합되었습니다.그래서 클라우드워치 로그 인사이트는
EKS에서 CloudWatch로 CloudWatch 로그 및 로그를 익스포트하는 것도 오랫동안 사용되어 왔습니다.
오래 전부터 사용했지만, 이 문제는 직접 해결해야 했고 알아내야 했습니다.
밖으로 나가 직접 도망쳐 보세요.이제 EKS 대시보드에는 로그 쿼리가 사전 구성되어 있습니다. 쿼리 실행 버튼을 누르면 다음과 같은 메시지가 나타납니다.
클러스터에서 살펴봐야 할 몇 가지 일반적인 사항에 대한 로그 쿼리 목록입니다.그래서 제가 가장 좋아하는 것 중 하나는
여기 탑 토커들이 있어요.이것이 의미하는 바는
클러스터에서 가장 많이 사용되는 서비스
API 서버를 사용하시나요?그래서 이것은 훌륭한 로그입니다.
예를 들어 쿼리를 실행해 보세요. 검색어가 몇 개 보이면
API 서버의 이상한 동작 이상 현상, 아마도
상황이 기대에 미치지 못해요.
그 지표가 보이시죠. 들어가서 실행해 볼 수 있습니다.
탑 토커 (Top Talkers) 쿼리를 통해 이렇게 말할 수 있습니다.
이게 뭐인 것 같죠?제 v1 베타 1 인그레스는 지난 30분 동안 API 서버에 대해 1,700회의 호출을 했습니다.
그래서 아마도 이런 것들을 좀 더 살펴봐야 할 것 같습니다.
여기 급등이 보이면 바로 내려갈 수 있을지도 몰라요
문제의 근본 원인을 살펴보죠.따라서 이러한 대시보드는 심층적인 옵저버빌리티 도구를 대체하기 위한 것이 아니라 옵저버빌리티의 출발점이 되기 위한 것입니다.
클러스터 관리를 수행할 때 빠르게 문제를 해결할 수 있습니다.그리고 지금 바로 사용할 수 있습니다.한 걸음 더 깊이 들어가 보면
CloudWatch는 실제로 엄청난 개선을 이루었습니다.
지난 한 해 동안 컨테이너를 더 쉽게 사용할 수 있도록 하기 위해
고객은 CloudWatch를 사용하고 있습니다.이제 가시성이 향상된 컨테이너 인사이트를 갖게 되었습니다.
아마존 EKS용입니다.그래서 우리는 이것의 일부를 넣었습니다.
EKS 콘솔에 있는 것들은 바로 사용할 수 있습니다.그리고 CloudWatch를 클릭하면 더 깊이 들어갈 수 있습니다.
하나 이상의 클러스터를 대상으로 성능 개요를 확인할 수 있습니다.경보를 제공할 수 있습니다.
사용률 상태는 데이터를 제공하므로 보다 사전 예방적인 조치를 취할 수 있습니다.
클러스터 및 시스템의 성능에 반하여
클러스터 애플리케이션.그리고 메트릭을 제공하고
클러스터 상태에 대한 가시성.최근에 GPU 뉴런을 추가했습니다.
그리고 이러한 컨테이너 인사이트에는 Windows 지원도 포함됩니다.정말 좋은 기능입니다.CloudWatch 팀이 수행한 작업에 깊은 인상을 받았습니다. 이제 이 기능을 다음과 같이 사용할 수 있습니다.
클라우드워치와 아마존 EKS.이번 주 ReInvent에서는 실제로 네트워크 트래픽에 대해 정말 멋진 작업을 수행했습니다.
CloudWatch도 마찬가지죠.그래서 우리는 CloudWatch VPC를 통해 오랫동안 VPC 흐름 로그를 가지고 있었고, CloudWatch는 방금 발표했습니다.
며칠 전 네트워크 흐름 모니터.이 기능은 가시성을 제공하는 정말 멋진 새 기능입니다.
AWS 데이터 센터의 박스 간 네트워크 트래픽 성능에 대해 살펴보겠습니다.따라서 특히 대규모로 실행하는 경우 고객이 네트워크 성능 저하를 경험하거나 시도하는 등의 문제를 겪는 경우가 많을 수 있습니다.
네트워킹 문제 해결 방법 및 CloudWatch 관련 사항
네트워크 흐름 모니터의 기능은 네트워크 경로에서 확인할 수 있는 정확한 데이터와 위치를 볼 수 있게 해줍니다.
성능 저하.Amazon EKS는 기본적으로 네트워크 흐름 모니터와 통합됩니다.자동으로 주석을 답니다.
EC2 인스턴스 간에 이동하는 메타데이터
클러스터 내부.그래서 클라우드워치에 들어가면
네트워크 흐름 모니터를 통해 상태를 이해할 수 있습니다.
클러스터에 바인딩된 네트워크 트래픽의 수와 해당 트래픽이 통신인지 여부
클러스터 노드 간 또는 클러스터 내부 및 외부로, 문제 해결이 더 쉽습니다.
네트워크 계층의 성능 저하.모든 것이 마음에 들어요.
지금 바로 사용할 수 있습니다.이번 런칭은 리인벤트에 새로 출시되었습니다.정말, 정말 기대됩니다.고객과 함께 관찰할 수 있도록 구축한 또 다른 요소 중 하나는 분할 비용 할당 데이터입니다.따라서 쿠버네티스로 이전할 때 가장 큰 문제 중 하나는 운영 경험이 있는 사람이 있다면 말이죠.
VM 세상에서요, 그렇죠?우리는 이런 모놀리식 애플리케이션을 만들었는데 VM당 하나의 애플리케이션을 만들었죠. 태깅도 정말 멋지고 멋질 거예요.
비용 및 사용량 대시보드는 관리자로서
모든 것을 실행하고 있고, 정말 잘 작동합니다.
finops 관리자가 되면 정말 멋진 보고서를 받게 되죠. 그러다가 어느 날 팀에서 이렇게 말하죠.
우리는 쿠버네티스로 이전할 예정입니다.그리고 쿠버네티스로 넘어가세요.
금융 측면에서는 모든 것이 블랙박스가 되죠?공유 클러스터와 멀티테넌트 마이크로서비스가 있기 때문인데 어떻게 이해하시나요?
물건의 정확한 비용은 얼마인가요?그래서 있었죠.
Kubecost를 비롯한 도구들은 수년 동안 Amazon EKS와 함께 실행할 수 있도록 지원해 왔습니다.하지만 고객들은 Amazon EKS에서 이 기능을 기본적으로 사용할 수 있기를 원한다고 말했습니다.그래서 우리는 다음과 파트너 관계를 맺었습니다.
AWS 비용 및 사용 팀에서 Split을 소개했고, (sneezes) 실례지만 분할 비용 할당 데이터를 소개해 드렸습니다.이것이 하는 일은
클러스터에서 포드 활용을 위한 데이터를 자동으로 수집하는 관리형 방식이 있다는 것입니다.우리는 이 모든 것을 종합하고 있습니다.
백엔드에서 EC2를 실행하는 데 드는 실제 비용을 고려하면
그리고 우리는 새로운 비용 및 사용 보고서를 작성하고 있습니다.
세밀한 보고를 할 수 있습니다.그리고 이런 보도는 틀릴 수 있습니다.
포드 수준 대비 하락, 배포 대비
수준, 작업 수준, 네임스페이스 및 클러스터.자동으로 인제스트합니다.
실제 EC2 비용에 대한 정보를 바탕으로 애플리케이션의 실제 비용을 이해하는 데 도움이 되는 보고서를 제공합니다.멋지네요.그래서 관찰성에 관한 부분이 많죠.또 다른 건
애드온으로 해본 것은 클러스터를 실행할 때 컨트롤만 실행하는 것입니다.
비행기로는 충분하지 않아요.종종 가져와야 할 때가 있습니다.
이러한 다양한 유형의 운영 도구를 모두 Amazon EKS에 통합할 수 있습니다.그리고 몇 년 전에 배터리가 포함된 클러스터를 생성할 수 있는 애드온을 출시했습니다.그리고 지난 한 해 동안 애드온 카탈로그를 확장했습니다.CloudWatch 컨테이너 인사이트, CSI 스냅샷 컨트롤러 등 Amazon EKS의 퍼스트 파티 애드온을 5~4개 추가했습니다.
포드 아이덴티티 에이전트와 노드 모니터링 에이전트.또한 핵심 네트워킹 애드온 없이 클러스터를 시작할 수 있게 되었습니다.일부 고객은 다음과 같은 이야기를 들려주었습니다.
예를 들어 VPC CNI 없이 클러스터를 시작하려고 했으므로 이제 구성할 수 있습니다.
클러스터를 시작할 때 애드온 API에서 말이죠.그리고 다시 출시하기도 했습니다.
현재까지 40개의 마켓플레이스 애드온이 있습니다.이제 퍼스트 파티가 생겼습니다.
AWS에서 가져온 애드온에 이어 다음을 추가했습니다.
마켓플레이스 통합: 실제로 40개 이상의 마켓플레이스 애드온을 사용할 수 있습니다. 어떤 애드온을 선택할지 선택할 수 있습니다.
클러스터에서 실행하고 싶으면 클릭 한 번으로 구독하고 실행할 수 있습니다.
여러분의 아마존 EKS 클러스터.그래서 정말 쉽게 만들었죠.
클릭 한 번으로 Datadog, Kubecost, 뉴렐릭, 스플렁크 등과 같은 도구를 클러스터에 가져올 수 있습니다.그리고 이러한 것들을 설치하면
고객이 클러스터에 애드온을 설치하도록 요청했습니다.
보안을 강화하고 클러스터의 전반적인 보안 상태를 개선하십시오.그래서 작년 ReInvent에서는 특정 포드에 IEM 역할을 할당할 수 있는 포드 아이덴티티티에 대해 많은 이야기를 나눴습니다.올해 우리는 포드 아이덴티티를 가져와 EKS 애드온과 통합했습니다.이제 클릭 한 번으로
애드온을 설정하면 만들고 연결할 수 있습니다.
해당 애드온의 특정 IEM 역할, 그래서
클러스터에 있는 모든 항목의 보안 범위가 축소되고 보안 폭발 범위가 개선되었습니다.그리고 이제 사용할 수 있습니다.보안 측면에서는
EKS 보안에 지속적으로 투자하고 있습니다.그래서 포드 아이덴티티는
포드 아이덴티티를 애드온에 적용하기 위해 우리는 수년 동안 클러스터 수준에서 시크릿을 암호화해 왔습니다.KMS 키를 EKS로 가져와 암호를 암호화할 수 있었습니다.저희는 그게 좋다고 생각했는데
하지만 그걸로는 충분하지 않았어요.그래서 올해부터
이제 기본적으로 제공하는 KMS v2 키로 클러스터의 모든 항목을 암호화합니다.이제 단순히 비밀만 암호화하는 것이 아니라 모든 단일 객체를 암호화합니다.자체 CMK를 가져와 KMS v2를 기반으로 암호화할 수도 있지만, 이제 기본적으로 모든 것이 가능합니다.
Amazon EKS 클러스터에서는 클러스터가 완전히 암호화됩니다.암호화 외에도
보안 제어 기능 외에도 액세스가 개선되었습니다.
쿠버네티스를 위한 제어.따라서 Cedar는 AWS에서 개발한 새로운 오픈 소스 언어인데, 이 언어를 사용하면 좀 더 표현력 있는 글을 쓸 수 있습니다.
액세스 제어를 위한 명시적 정책도 있습니다.그리고 최근에 KubeCon에서는
Cedar를 아마존 EKS와 쿠버네티스로 확장한다고 발표했습니다.따라서 Cedar를 사용하면 다른 기능을 사용할 수 있게 됩니다.
거부, 조건, 속성 및 레이블 기반 액세스 제어와 같은 쿠버네티스 RBAC에서 사용할 수 있습니다.그래서 새로운 오픈 소스인 Cedar가 정말 기대됩니다.
Cedar와 EKS를 하나로 모으기 위해 우리가 하고 있는 프로젝트인데, 이렇게 될 것이라고 생각합니다.
고객이 허용할 수 있는 정말 좋은 업그레이드가 될 것입니다.
클러스터 내부 및 외부에서의 액세스 제어가 개선되었습니다.또한 네트워킹 측면에서도 가장 큰 것 중 하나는
AWS의 푸시는 IPv6입니다.IPv6에 대한 논의가 많으신 것으로 알고 있습니다. 적어도 지난 20년 동안은 IPv6에 대해 이야기해 온 것 같습니다.그리고 그 중 하나는
EKS가 올해 해낸 성과는 이제 IPv6과 관련된 모든 사항에 체크했다는 것입니다.그래서 이전에는 단일 제품도 있었습니다.
스택 포드와 IPv6 클러스터.IPv6 관리 API도 있었습니다.그리고 몇 달 전까지만 해도 이제 IPv6 클러스터 엔드포인트가 생겼습니다.따라서 IPv6 전략이 있고 다음으로 이동하려는 경우
IPv6의 경우 EKS를 도입하면 클러스터의 모든 부분에서 완전한 IPv6을 지원할 수 있습니다.또한 네트워킹에서도
측면에서는 Amazon 애플리케이션과 통합했습니다.
복구 컨트롤러.그래서 루트 53이 출시되었습니다.
작년에 애플리케이션 복구 컨트롤러를 사용하면 복구 컨트롤러를 통해 장애 발생 시 AZ 간에 트래픽을 자동으로 이동할 수 있는 복원력이 뛰어난 설정을 할 수 있습니다.
회색 또는 검은색 AZ 장애.따라서 이러한 오류는 오류일 수 있습니다.
자동으로 감지해서 트래픽 이동을 대신해 드리죠. 아니면 이 버튼을 크게 눌러도 됩니다.
언제든지 빨간색 비상 정지 버튼을 누르면 교통이 전환됩니다.따라서 ARC는 Route를 통해 관리됩니다.
5.3이므로 중앙에서 관리되고 다른 여러 AWS에서도 관리됩니다.
서비스가 ARC와 통합되었습니다.이를 통해 트래픽을 안전하게 다른 곳으로 옮겼다가 다시 AZ로 되돌릴 수 있습니다.그 중 한 가지는
AZ 그레이 오류가 발생하죠. 맞아요.
구성 요소에 장애가 발생하여 성능이 저하될 수 있습니다.그리고 많은 트래픽이 발생합니다.
애리조나 밖으로 대피할 수도 있어요. 괜찮아요. 우린 갈게요.
사람들이 잠에서 깨고, 사람들이 전화를 받죠.
그 문제를 해결하기 시작하세요.하지만 AZ가 회복되기 시작하면서
우리가 흔히 볼 수 있는 것은 천둥 같은 무리라고 부르는데 모두가 이렇게 말하죠.
오, AZ가 회복되고 있어요. 제 모든 교통량을 다시 그곳으로 몰아넣을게요.그리고 보통 AZ 회복 단계에서는 문제가 생길 수 있습니다.
약간 섬세하죠.그리고 그 AZ에 부딪히면
트래픽을 바로 사용하면 추가적인 성능 저하 및 추가 페일오버가 발생할 수 있습니다.따라서 아주 작은 문제가 발생할 수 있습니다.
아주 긴 문제로 연쇄적으로 발전하고, 짧은 정전 시에도
연속적으로 중단이 길어질 수 있습니다.따라서 Amazon Application Recovery Controller는 AZ 정전 문제가 발생했을 때 트래픽을 줄이고 애플리케이션을 계속 실행하도록 도와줄 뿐만 아니라 작업 속도를 늦추는 데도 도움이 됩니다.
여러분의 트래픽이 AZ로 다시 유입되어 AZ가 다시 넘어지지 않도록 하고 완전히 복구할 수 있도록 하기 위함입니다.
사고 속도가 훨씬 빨라졌어요그리고 지금도 사용할 수 있습니다.AWS와의 통합의 일환으로, AWS와의 통합을 통해 고객이 다음을 수행할 수 있다는 점에 대해 이야기했습니다.
클라우드에 대한 전체 액세스.따라서 Kubernetes용 AWS 컨트롤러는 지난 몇 년 동안 구축해 온 프로젝트로, 이를 통해 다음을 수행할 수 있습니다.
클라우드 네이티브 제어 및 정의 AWS 리소스
쿠버네티스 API에서 직접지난 한 해 동안 우리는
조지아에서 20개의 새로운 서비스를 출시했습니다.파이프라인을 재구축했습니다.
Amazon SDK를 기반으로 서비스를 빠르게 구축하기 위해, 이제
이게 우리가 더 많이 보고 있는 일인 것 같아요.
그리고 더 많은 고객이 Kubernetes 리소스와 함께 AWS 리소스를 관리하기 위해 사용하고 있습니다.하지만 ACK의 인기가 높아지고 서비스 범위가 넓어지면서 고객들이 오케스트레이션하기가 정말 어렵다는 의견을 들었습니다.
이 모든 것들이 합쳐진 이유는 제가 단순히 원하는 것이 아닐 수도 있기 때문입니다.
예를 들어 단일 S3 버킷, 저는 다음과 같은 제품군을 원할 수 있습니다.
다양한 기능.그래서 최근에 소개한 바 있습니다.
Kube 리소스 오퍼레이터, 즉 KRO와 KRO를 사용하면 실제로 여러 개를 추상화할 수 있습니다.
쿠버네티스 리소스를 한데 모아 추상화를 작성하고
공통 표현식 언어 또는 CEL을 사용하여 클러스터에 게시하십시오.이건 정말 대단한 일이죠.
간단한 YAML 기반 언어로, AWS와 Kube 리소스 세트를 함께 정의한 다음 이를 다음과 같이 게시할 수 있습니다.
클러스터 및 프로그램에 대한 추상화
CRD를 사용한 추상화.따라서 예를 들어 쿠버네티스 배포가 어떤 모습인지 또는 웹 서비스가 무엇인지 정의할 수 있습니다.
회사에서 보이는 것처럼 KRO를 사용하여 컨트롤러로 클러스터에 넣은 다음 직접 개발할 수 있습니다.
팀은 이에 대항하여 프로그램을 짜요.정말 흥미로운 프로젝트로, 이제 GitHub와 Alpha에서 이용할 수 있습니다.이 프로젝트를 더 발전시킬 계획입니다.
내년에는 더 많은 기능이 추가될 예정입니다.좋아요, 그럼 한 가지
AWS는 우리가 전 세계에 있다는 것입니다.그리고 EKS에서 발표한 중요한 발표는 이제 우리가 다루고 있다는 것입니다.
전 세계 모든 지역에 진출해 있습니다.
모든 지리적 이유, 가용 영역, 로컬 영역.그리고 그 중 하나는
저희가 찾아낸 고객들은 계속 들어오고 있다는 겁니다.
이 모든 다양한 모드들이죠.에서 도망치고 있잖아
지역의 Amazon EKS, 로컬 영역까지
전초 기지까지, 어디에서든 EKS까지.그 중 하나는
이번 주 ReInvent에서 발표하게 되어 정말 기쁩니다. 바로 Amazon EKS 하이브리드 노드입니다.저희 고객들이 데이터 센터 어디서나 Amazon EKS를 운영하고 있었는데, 저희에게 이렇게 말하더군요.
그들은 좀 더 관리되는 무언가를 원했습니다.따라서 Amazon EKS 하이브리드 노드를 사용하면 이제 기존 온프레미스 또는 엣지 컴퓨팅을 사용하여 이를 Amazon EKS 컨트롤 플레인에 다시 연결할 수 있습니다.
이는 해당 지역에서 실행되며 모든 것을 일관되게 관리합니다.따라서 컨트롤 플레인을 데이터 센터까지 확장할 수 있고
엣지 컴퓨팅으로 전환하고 일관된 환경에서 관리하세요.그리고 모든 상위 수준
옵저버빌리티부터 애드온에 이르기까지 AWS의 통합은 하이브리드 노드와 원활하게 작동합니다.아키텍처도 마찬가지입니다.
약간 이렇게 생겼습니다.CLI 툴이 있는데
수동으로 설치하거나 모두 스크립트로 설치할 수 있습니다.
내 온프레미스 노드.그리고 해당 CLI가 설치되면
실행 중인 작은 에이전트가 있는데 에이전트는
Kubelet 및 기타 구성 요소를 해당 노드에 부트스트랩하고 최대 연결 대상 노드에 연결합니다.
아마존 EKS 클러스터.그리고 클라우드에서는
노드는 콘솔과 API 서버에 나타납니다.
다른 인스턴스와 같습니다.속성을 볼 수 있고 다음을 시작할 수 있습니다.
여기에 워크로드를 스케줄링하세요.그래서 하이브리드 노드라고 생각합니다.
기업에 종사하는 사람들에게 많이 채택될 것입니다.
현대화, 머신 러닝, 금융 서비스, 미디어 스트리밍, 제조, IT 앱 등
다양한 장소.하이브리드 노드가 어떻게 사용되고 있는지 정말 기대가 됩니다.그리고 지금까지 이야기를 나눴습니다.
일주일 내내 고객에게 하이브리드 노드 채택 계획에 대해 이야기했습니다.하지만 분명히 우리도 마찬가지입니다.
클라우드가 있잖아요, 그렇죠?그리고 가장 좋은 부분 중 하나는
AWS는 컴퓨팅의 폭과 깊이입니다.
옵션은 AWS에서 제공합니다.그리고 그 중 하나는
우리가 고객들을 위해 하고 싶었던 것은 더 쉽게 할 수 있도록 하는 것이었습니다.
클러스터 생성에서 애플리케이션 실행으로 넘어가세요.그래서 이번 주에 EKS Auto Mode의 출시를 발표하게 되어 정말 기쁩니다.자동 모드는 프로덕션 환경에서 바로 사용할 수 있는 방법을 획기적으로 발전시킨 것입니다.
클라우드에서의 쿠버네티스.또한 이는 성취이기도 합니다.
쿠버네티스가 어떻게 해야 하는지에 대한 우리의 비전에 대해
클라우드에서 운영하세요.따라서 자동 모드를 사용하여 프로비전할 수 있습니다.
모든 기능이 사전 구성된 애플리케이션 지원 클러스터
필요한 기능과 AWS의 모범 사례.자동 모드는 새 워크로드를 시작하는 데 걸리는 시간을 줄여줍니다.
신제품을 구입하거나 애플리케이션을 현대화할 수 있습니다.
더 빠르게 생산에 돌입할 수 있습니다.그래서 보통
고객이 언제 사용하는지 확인할 수 있었습니다.
자동 모드 이전의 쿠버네티스, 어떻게 할지 선택할 수 있었을까요?
예를 들어 인프라를 코드로 사용하여 클러스터를 생성하면 다음과 같이 할 수 있습니다.
그들이 필요로 하는 컴퓨팅 유형을 생각해 보십시오.
애플리케이션 실행.EC2 또는 Fargate를 사용하고 싶으신가요?어떤 인스턴스 유형을 사용해야 합니까?그러면 그들은 다음에 대해 생각할 것입니다.
클러스터링 기능, 그리고 그 안에 숫자가 생기겠죠.
플러그인과 이 모든 것들, 그리고 그것들이 필요하겠죠
이 모든 것들을 프로비전하고 이것들을 하나로 연결하세요.자동 모드를 사용하면
이 모든 것이 자동으로 관리됩니다.이제 관리형 컨트롤 플레인이 생겼습니다.클러스터를 자동 모드로 설정하면 자동으로 프로비저닝됩니다.
클러스터 내 컴퓨팅 기능을 관리하고,
네트워킹 및 스토리지.EC2가 관리되고 있습니다.
인스턴스는 계정에서 실행되는 안전한 자동 관리형 인스턴스이며 클러스터를 실행하는 데 필요한 모든 것을 자동으로 프로비저닝합니다.따라서 자동으로 인스턴스를 프로비저닝하고, 인스턴스를 최적화하고, 모든 내용을 최신 상태로 유지합니다.
건강에도 좋습니다.그리고 자동 모드를 사용하면
이제 Amazon EKS 콘솔과 CLI에서 클릭 한 번으로 클러스터를 생성할 수 있고 콘솔에서 클릭 한 번으로 쉽게 시작할 수 있습니다.다른 모든 것들과 마찬가지로
오늘 사용할 수 있습니다.정말 멋진 기능인데
자동 모드의 일부로 출시된 EKS Node입니다.
건강 및 자동 복구: 자동으로
노드, 특히 GPU 인스턴스의 상태를 살펴보고 복구 중입니다.
문제 해결 및 개선.그리고 이게 바로
이제 자동 모드에서 사용할 수 있습니다. 앞으로 살펴보도록 하겠습니다.
건강 및 자동차 수리를 향후 다른 기능으로 확장해 보세요.멋지네요.이제 자동 모드를 일반적으로 사용할 수 있습니다. 확인해 보는 것이 좋습니다.그래서 EKS가 하는 것 중 하나는
널리 채택된 분야는 대규모 언어를 이용한 머신 러닝입니다.
기본 모델 교육, 로보틱스 개발 및
대규모 AI 추론, 지금까지 많이 보아왔습니다.
고객은 Amazon EKS를 사용합니다.그리고 우리는 투자를 해왔습니다.
단순화하고 가속화하는 인프라 기능에
EKS를 사용한 머신 러닝.따라서 노드 상태 및 자동 복구부터 가속화된 AMI 세트에 이르기까지 우리는 최근에 이러한 추세에 동참하고 있습니다.
EC2 울트라 서버를 발표했습니다.EC2 울트라 서버 작동
Amazon EKS와 기본적으로 연동되며 긴밀하게 통합됩니다.
컴퓨팅 가용성을 위한 용량 블록 예약 포함.우리는 데이터 관리를 위한 통합에 투자해 왔습니다.
엘라스틱 패브릭 사용을 위한 S3 마운트포인트 CSI 드라이버와 EFA 쿠버네티스 디바이스 플러그인
GPU 인스턴스용 어댑터 네트워킹.또한 네이티브에 투자하여 Kubernetes의 머신 러닝을 간소화하는 데 도움을 주고 있습니다.
Ray와 같은 OSS 프레임워크 및 제공
컨테이너 인사이트에 대한 즉각적인 지원이 가속화되었습니다.EKS에서의 머신 러닝이 점점 더 발전하고 있는 것을 보고 그 방법에 대해 더 자세히 설명하게 되어 정말 기쁩니다.
그들은 머신러닝을 사용하고 있습니다. 환영하고 싶습니다.
스노우플레이크의 수석 소프트웨어 엔지니어로 무대에 오른 김형태 씨.(청중 박수) - 네, 감사합니다.여러분 안녕하세요.저는 김형태입니다.저는 엔지니어 중 한 명이에요.
Snowflake의 AI 앱 플랫폼 및 인프라 담당 책임자입니다.오늘 저희가 어떻게 AI를 강화하고 있는지 알려드리게 되어 기쁩니다.
대규모 혁신.잘 알고 계실 수도 있습니다.
제너레이티브 AI를 지원하는 Cortex AI와 같은 당사 제품
고객을 위한 기능이지만, 이 모든 것의 이면에 숨겨진 인프라 스토리, 특히 우리가 이를 활용하는 방법은 생소할 수 있습니다.
쿠버네티스는 EKS를 기반으로 견고한 기반을 구축합니다.
이러한 AI 서비스를 위해.이 섹션에서는 우리의 여정과 당면 과제를 공유하겠습니다.
그동안 직면한 문제와 우리가 구현한 솔루션
이 인프라 구축.스노우플레이크의 포괄적인 Gen AI 플랫폼인 Cortex AI를 소개해 드리겠습니다.Cortex가 특별한 이유는 모든 것을 처리할 수 있다는 것입니다.
모두 쿠버네티스로 구동되는 다양한 AI 워크로드
EKS로 구동되는 AWS에서도 가능합니다.추론 측면에서는 0건에서 수천 건의 동시 요청까지 확장할 수 있는 시스템을 구축했습니다.실행 중인지 여부
친숙한 SQL 인터페이스를 통한 대규모 배치 작업이나 1초 미만의 지연 시간이 필요한 실시간 채팅 애플리케이션을 지원하는 등 Cisco 인프라는 원활하게 조정됩니다.교육 인프라를 활용하면 단순히 실행만 하는 것이 아닙니다.
모델을 만들고 있습니다.우리의 북극 기반 모델 제품군은 요구 사항을 충족함으로써 AI 역량에 상당한 투자를 한 것으로 보입니다.검색부터 문서 이해에 이르기까지 엔터프라이즈 사용 사례에 맞는 모델을 보유하고 있으며, 이 모든 모델에는 집중적인 작업이 필요합니다.
EKS가 효율적으로 관리하는 데 도움이 되는 계산 리소스.기본 모델 외에도 정교한 모델을 지원합니다.
미세 조정 프레임워크.이것은 다음의 모든 것을 지원합니다.
LoRa와 같은 보다 효율적인 접근 방식에 이르기까지 전체 파라미터 미세 조정으로 고객 지원
유지 관리하면서 특정 요구 사항에 맞게 모델을 사용자 지정할 수 있습니다.
성능 및 안정성.Cortex 구축이 당면한 실제 과제 몇 가지를 말씀드리겠습니다. 아마도 그럴 수도 있기 때문입니다.
많은 분들의 의견을 들어보세요.우리는 두 명의 메이저를 만났습니다.
우리의 전통을 다시 생각하게 만든 주제들
인프라 접근 방식, 용량 관리 및 시스템 취약성.첫 번째는 용량입니다.우리 모두 알고 있는 GPU는
희소하고 비용이 많이 듭니다. 특히 고급 트레이닝은 더욱 그렇습니다.
NVIDIA H100과 같은 하드웨어, 하지만 놀라실 수도 있는 것은 희소성이 근본적으로 어떻게 작용하는가입니다.
운영 방식을 바꿀까요?클러스터 업그레이드를 예로 들어 보겠습니다. 기존의 청록색이죠.
배포 접근 방식에서는 일시적으로 다음을 수행해야 합니다.
GPU 용량을 두 배로 늘리세요.수백 개를 회전시키는 것을 상상해 보세요
P5가 업그레이드 용도로요비용이 많이 들 뿐만 아니라, 종종 불가능하기 때문입니다.
공급 제약 때문이죠.이로 인해 혁신이 필요했습니다.우리는 새로운 패턴을 개발해야 했습니다.
CPU 리소스에 효과적이면서도 더 흥미로웠던 단순한 스케일 업 사고방식에서 벗어나 용량 관리를 위한 것입니다.
문제는 취약성입니다.AI 워크로드, 특히
분산 교육에는 고유한 기능이 있거나
특징적인 것은 없습니다.코디를 한다고 상상해 보세요.
수천 개의 GPU에 분산된 트레이닝 작업이 있고, 단 하나의 GPU에서 장애가 발생할 경우
전체 작업이 제대로 작동하지 않습니다.문제를 더욱 악화시키는 것은 GPU와 그 특화입니다.
네트워킹 인프라는 실패율이 더 높습니다.
기존 하드웨어보다.아키텍처는 다음과 같습니다.
그게 코텍스에 힘을 실어주죠.우리는 이것을 AI 클러스터라고 부르는데, 방금 설명한 문제를 해결하도록 설계되었습니다.기본 아이디어는 간단합니다.
하나의 클러스터, 하나의 지역, 모든 AI 워크로드, 하지만
강력한 이유는 실시간 추론부터 다음과 같은 다양한 워크로드 유형에 걸쳐 리소스를 지능적으로 관리하는 방식입니다.
대규모 교육 작업.이를 가능하게 하는 주요 구성 요소를 안내해 드리겠습니다.정리해 두었습니다.
용량 관리와 탄력성이라는 두 가지 주요 범주로 나뉩니다.용량 관리를 위해 우리는 두뇌에 액세스할 수 있는 맞춤형 용량 컨트롤러를 구축했습니다.
우리의 리소스 배분.지능적이라고 생각하시면 됩니다.
어떤 리소스가 우선 순위인지 아는 트래픽 컨트롤러.예를 들어, 만약
실시간 추론 서비스는 더 많은 리소스를 필요로 하므로 지능적으로 선점할 수 있습니다.
우선 순위가 낮은 교육 작업.이를 오픈소스 스케줄러인 볼케이노 스케줄러와 함께 사용했습니다.
이는 조정에 매우 중요한 게인 스케줄링을 처리합니다.
분산된 교육 작업.레질리언스 측면에서는
세 가지 핵심 구성 요소를 개발했습니다.첫 번째는 노드 헬스 서비스입니다.사전 예방적 서비스라고 생각하시면 됩니다.
진단 시스템.집중적인 부하 검증을 실행하여 모든 노드가 정상인지 확인합니다.둘째, 포드 매니터가 있습니다.간단하게 들릴 수도 있지만, 자주 종료하면 쿠버네티스가 상당히 불편해질 수 있습니다.
워크로드가 노드 최상위에 위치하므로 깔끔한 종료와 지능적인 포드 재제출이 보장됩니다.마지막으로 Invariant Enforcer도 있습니다.네트워크 검색 및 분산 교육 기능과 같은 클러스터의 여러 속성을 적용합니다.다음으로 다음 중 하나에 대해 알아보겠습니다.
가장 중요한 구성 요소인 용량 컨트롤러입니다.두뇌라고 생각하시면 됩니다.
다양한 워크로드 유형에 걸쳐 GPU 리소스를 오케스트레이션합니다.화면에 보이는 내용
Cortex의 실제 용량 버킷 정의입니다.
추론 워크로드.왜 이것이 흥미로운지 설명해 보겠습니다.우선 순위가 높은 것으로 어떻게 표시되는지 확인해 보세요.즉, 이러한 추론이 있을 때를 의미합니다.
서비스에는 리소스가 필요합니다. 먼저 리소스를 확보합니다.진정한 마술은 이러한 용량 버킷을 구성하는 방식에서 일어납니다.각 워크로드 유형 (여부)
실시간 추론, 배치 프로세싱, 모델 트레이닝의 경우에는 명확한 경계가 있는 고유한 버킷이 있습니다.이 예제에서는 다음을 수행할 수 있습니다.
P5 인스턴스 유형과 P4 인스턴스 유형을 모두 지정했습니다.
최소 3개의 노드, 공유 서비스 안정성 및 확장 가능한 공간
필요한 경우 200개 노드.시스템을 만드는 요소
노드 간에 노드를 이동할 수 있는 이 기능은 강력한가요?
버킷을 지능적으로 활용하세요.수요에 따라 배송할 수 있는 동적 리소스 풀이라고 생각하면 됩니다. 하지만 우리가 처리할 때 무작위로 가져올 수는 없습니다.
수백 개의 GPU를 사용할 수 있는 분산형 교육 작업에는 수술이 필요합니다.
어떤 노드를 언제 사용할 것인지.다음으로 이야기를 나눠보죠.
가장 까다로운 과제 중 하나를 처리하는 방법에 대해
AI 인프라, 하드웨어 안정성에서요.GPU는 놀라울 정도로 강력하지만 시간이 지남에 따라 문제가 발생할 수 있는 민감한 하드웨어입니다.당사의 노드 헬스 서비스
당사의 모든 GPU를 보호하는 자동화된 가디언입니다.
플릿이 최적의 성능을 발휘하고 있습니다.다이어그램을 보면
시스템에서 노드의 라이프사이클을 볼 수 있습니다.새 노드가 클러스터에 합류하면 우리가 부르는 노드에서 시작됩니다.
수습 기간.있긴 하지만 안 할게요
아직 워크로드를 실행하도록 놔두세요.GPU, 네트워킹, 스토리지, 성능이라는 네 가지 핵심 영역을 포함하는 포괄적인 상태 점검을 통해 이 세트 노드를 시험 적용했습니다.시스템을 만드는 요소
다중 노드 시나리오를 처리하는 방식이 특히 영리합니다.문제가 생겼을 때
분산 작업 노드에서 문제 찾기
노드는 매우 어려울 수 있으므로 다음을 수행해야 합니다.
체계적인 접근법.우리는 다음과 같은 목적으로 쌍별 테스트를 사용합니다.
문제가 있는 노드를 찾아내세요.그리고 노드가 이 테스트에 실패하면 자동으로
AWS API를 통해 종료되었습니다.성공하면 액티브 플릿에 합류합니다.사후 검증, 만약
후속 워크로드가 잠재적 실패를 보고하면 다시 검증 단계로 전환됩니다.다음으로 EKS가 어떻게 AI 인프라를 가속화했는지 말씀드리겠습니다.낮은 수준에서 수렁에 빠지는 대신
복잡성 때문에 우리는 정말 중요한 일에 집중하여 혁신적인 AI 솔루션을 구축할 수 있었습니다.첫 번째는 성능입니다.AWS와의 긴밀한 협력을 통해 우리는
분산 교육에 중요한 엘라스틱 파이버 어댑터 네트워킹의 성능을 최적화하십시오.바로 사용할 수 있는 제품
시스템의 호환성도 중요합니다.가속화된 AMI가 등장합니다.
GPU와 네트워킹 모두에 호환되는 드라이버 포함.가속화된 AMI도 다음과 같습니다.
즉시 사용 가능한 최신 NVIDIA PyTorch 이미지와 호환됩니다.스토리지는 EKS가 운영을 단순화한 또 다른 영역이기도 합니다.계층형 접근 방식을 구현했습니다.우리는 FSx for Lustre를 사용하여 고성능을 제공합니다.
모델 체크포인트 및 학습 데이터를 위한 분산 스토리지.EBS와 EFS는 다른 기능을 제공합니다.
지속적인 유사성과 S3는 신뢰할 수 있는 역할을 합니다.
데이터 및 모델을 위한 아카이브.이러한 유연성 덕분에
각각의 특정 사용 사례에 맞게 성능과 비용을 최적화할 수 있습니다.마지막은 확장성과 운영입니다.앞서 말씀드린 GPU 용량 문제가 발생했을 때를 기억하시나요?AWS를 사용하면 유지 관리에 대해 걱정할 필요가 없습니다.
자체 성능 버퍼는 처리하지 않기 때문에
자동으로 수정.그리고 8톤과 같은 하위 계층 하드웨어의 경우 자동 기능을 사용할 수 있습니다.
EKS의 확장 기능을 통해 이러한 워크로드를 관리할 수 있습니다.본격적인 시장 진출
우리가 시작한 두 가지 중요한 과제는 바로 용량입니다.
관리 및 시스템 취약성, Snowflake AI 클러스터는 이러한 문제를 강점으로 전환했습니다.AI 워크로드가 일반적으로 기존 Kubernetes 패턴과 잘 어울리지 않는다는 점을 말씀드린 것을 기억하십니까?글쎄요, 우리는 그 이야기를 바꿨습니다.저희 온라인 추론 서비스에서는
이제 여느 때와 마찬가지로 수요에 따라 동적으로 확장할 수 있습니다.
다른 쿠버네티스 워크로드.이는 다음과 같은 이유로 가능합니다.
용량 컨트롤러는 필요할 때 우선 순위가 낮은 워크로드에서 지능적으로 리소스를 차용합니다.어려운 문제도 해결했습니다.
클러스터 업그레이드 문제.두 배로 늘릴 필요 없이
블루-그린 배포를 위한 값비싼 GPU 용량을 이제 오케스트레이션할 수 있습니다.
우선 순위에 따른 업그레이드.먼저 교육 워크로드로 시작한 다음 지연 시간에 민감한 추론 서비스를 원활하게 전환하여 가동 시간을 극대화하고
리소스 요구 사항 최소화.그리고 취약성 문제는
우리의 무의료 서비스는 이러한 문제를 획기적으로 줄였습니다.
하드웨어 고장으로 인한 영향고성능 하드웨어에서 여전히 문제가 발생하면 자동으로 감지되어 백그라운드에서 마이그레이션됩니다.Nate에 다시 전달하기 전에 몇 가지 사항을 말씀드리겠습니다.
이 인프라를 구축하는 AI 여정에서 얻은 교훈이 교훈은 우리가 처음 시작할 때 누군가가 말해줬으면 좋았을 텐데요.먼저, 불순물을 받아들이세요.
워크로드 설계에서우리는 때때로 어렵게 배웁니다.
장애를 버그가 아닌 기능으로 취급하면 상태와 Kubernetes를 작게 유지하고 이동하면서 다음과 같은 다른 기능에 오프로드함으로써 시스템의 탄력성을 높일 수 있습니다.
임시 저장소는 S3와 마찬가지로 장애 없이 처리할 수 있습니다.
용량이 넉넉합니다.이를 위해 최적화하는 것이 관건입니다.
복구 후 실패 예방.둘째, 전략적으로 행동하세요
하드웨어 관리에 대해.이러한 GPU 노드는 비용이 많이 듭니다.그리고 한 세트를 찾으면
좋은 것들이니, 꼭 챙기세요. 특히 예약이 되어 있는 경우에는 더욱 그렇습니다.엄격한 구현을 통해 수많은 디버깅 시간을 절약할 수 있습니다.
노드 획득에 대한 검증.품질 관리라고 생각하시면 됩니다.
인프라를 위해 말이죠.셋째, 자동화는 그렇지 않습니다.
선택 사항이며 필수입니다.쿠버네티스는 자주 접속할 때 흥미로운 상태에 빠질 수 있습니다.
활성 워크로드가 있는 인스턴스를 종료합니다.당사는 이러한 문제를 모니터링하고 해결하기 위한 자동화된 시스템을 구축하여 중단된 포드부터 캐시 동기화 문제까지 모든 문제를 처리합니다.마지막으로, 최소한 도움이 될 수 있는 실용적인 팁이 하나 있다.
단일 클러스터 재구축, 네트워크 계획
넉넉한 인프라.H 100 노드는 많은 IP를 사용합니다.지금은 8번째입니다.
불과 18개월 만에 AI 클러스터를 재구성했습니다.그리고 우리가 학습한 모든 반복 작업
규모에 관한 새로운 점.여기서 중요한 교훈은 AI 인프라를 살아 숨쉬는 시스템처럼 다루는 법을 배웠다는 것입니다.우리는 끊임없이 진화해야 하고, 잠재적인 문제를 찾아내고, 매번 이를 해결할 준비가 되어 있어야 합니다.그리고 그걸 가지고 네이트에게 돌려줄게요.(관객 박수) - 고마워요 형태.정말 좋았어요.뭐야, 형태와 팀은
스노우플레이크에서 한 일은 정말, 정말 인상적입니다.EKS를 사용하면서 속도가 빨라졌습니다.
스노우플레이크의 발전.그들은 핵심 시스템을 채택하여 세계 최고의 AI 교육 및 추론 시스템 중 하나로 발전시켰습니다.그리고 그들은 자신들의 일을 도왔습니다.
고객은 대규모 데이터를 훨씬 더 잘 관리할 수 있습니다.그래서 저는 다음 번에 쓰고 싶어요.
몇 분 동안 Amazon EKS의 미래에 대해 이야기해 보겠습니다.자, 이게 뭔가요?
AWS 전반에 걸쳐 정교한 고객들이 있는 모습입니다.
다음을 전담하는 엔지니어링 팀이 있습니다.
분산 시스템에서 가장 어려운 문제 해결
그리고 머신 러닝.그리고 이러한 기술 회사, 순수 기술 회사들은 해결해야 할 사명을 가지고 있습니다.
이런 어려운 문제들.하지만 비슷한 문제를 해결해야 하는 고객들도 있지만 그들에게는 매우 어려운 문제가 있습니다.
초점이 다르죠?쿠버네티스를 사용하여 핵심 비즈니스를 대신하여 혁신하기
고객을 위해그리고 이것은 이 모든 회사들이 가지고 있는 부작용입니다.
기술 회사, AWS나 쿠버네티스 같은 첨단 시스템이 되면 성공의 원동력이 될 수 있습니다.
조직 전체에서 말이죠.하지만 동시에
여러분의 임무가 이러한 시스템을 구축하는 것이 아니라면
하지만 기술 문제가 아닌 문제를 해결하는 것은 정말 어려울 수 있습니다.
이러한 시스템을 사용하기 위해서요.순수 기술 기업이 아닌 회사가 똑똑한 사람이 아니라는 게 아니라 그냥
그들은 초점이 다릅니다.그래서 ReInvent와 같은 기술 컨퍼런스에서는 모두가 그런 것처럼 보일 수 있습니다.
여기 한 기술 회사가 있습니다. 이것이 바로 우리가 만들고 있는 이유입니다.하지만 현실은
전 세계 대부분의 회사는 소프트웨어 기술 회사가 아닙니다.그리고 대부분의 사람들은 문제를 해결하고 있습니다.
다른 어려운 문제들, 그리고 그들은 그걸 이용하고 싶어하죠.
이 소프트웨어 기술에 대해서요.그래서 문제가 생깁니다. 왜냐하면 우리는 모든 회사가 첨단 기술을 사용해야 한다고 생각하기 때문이죠.
사명을 완수하고 비용을 절감하며 혁신을 가속화하기 위해 대부분의 기업이 순수 소프트웨어가 될 필요는 없습니다.
기술 기업은 이러한 혜택을 누릴 수 있습니다.그들은 할 수 있어야 합니다
전담 기술 회사 및 소프트웨어 커뮤니티에서 구축한 도구를 활용하여
혁신 가속화, 비용 절감, 개선
그들이 제공하는 상품 및 서비스의 품질
사회를 위해 생산합니다.그래서 우리 모두의 이유는
ReInvent와 같은 러브 컨퍼런스는 훌륭한 서비스를 제공하기 때문입니다.
미래를 엿볼 수 있고, 가질 수 있는 희망
이 놀라운 신제품이 바로 지금 여기에 있고, 마침내 실제로
사용할 수 있습니다.이게 두 번째 문제죠, 그렇죠?쿠버네티스 같은 시스템
우리는 미래로 보고 있지만 사용하기 어려울 수 있습니다.설치 및 작동에는 헌신적인 노력과 전문 지식이 필요합니다.마지막으로, 클라우드에서 이러한 작업을 실행하려면 많은 시간과 전문 지식이 필요할 수 있습니다.그리고 Open을 사용하는 경우
소스 기술은 때로는 더 그렇습니다. 따라서 OSS를 구축하고 적절하게 활용하려면 구축 방법을 이해하는 사람이 필요할 수 있습니다.
그리고 그 OSS를 활용하면 정말 빠르게 사라지게 되죠. 이봐, 정말 멋진 걸 찾았어요.
회사에서 설치해서 사용할 수 있는 도구이기도 하고, 이제 우리는 그 도구의 유지 관리자가 되었습니다.그리고 이제, 오, 우리가 주력 기업입니다.
그 도구의 관리자요.이제 우리는 그 도구를 소유하고 있는데, 그 도구를 소유할 생각은 전혀 없었어요. 왜냐하면 그게 우리의 비즈니스 초점이 아니기 때문이죠.그리고 저는 사람들이 어떤 식으로든 오픈소스 기술을 사용하는 것을 방해한다는 것을 말씀드리고 싶지는 않습니다.사실 오픈소스 기술은 놀라운 혁신이라고 생각합니다.오픈이라는 아이디어처럼
일반적인 소스 소프트웨어, 그리고 제 생각에는
AWS와 같은 모든 회사와 고객은 그래야 합니다.
OSS에 기여하고 있지만 발생할 수 있는 문제는 규모가 커지면 OSS가 비싸질 수 있다는 것입니다.그러니까 이건
저희는 고객에게 도움을 주고 좀 더 쉽게 만들고 싶습니다.이게 바로 균형이죠?어떻게 하면 제어력과 유연성을 모두 유지할 수 있을까요?
처음부터 확장까지?확장성과 제어력을 원하고 속도를 원하는 이 트릴레마 시스템의 균형을 어떻게 맞출 수 있을까요?
변화하고 확장성을 갖추었나요?보시다시피 이 트릴레마는
보통 이 세 가지 중에서 두 가지를 선택할 수 있습니다.그리고 우리는 이 모든 수준의 고객을 위해 최적화하고 싶습니다. 그렇죠?그래서 우리의 사명은
EKS는 이 삼각형을 조금 더 크게 만드는 데 도움을 주는 것입니다.아직 만드셔야 할 부분이 있습니다.
절충과 선택, 하지만 우리는 그걸 실현하고 싶어요
좀 더 최적화하고 이러한 절충점을 만들면
조금 덜 고통스럽죠?그래서 우리가 가진 목표는 더 빨리 달리는 것입니다.
여러분과 함께 더 멀리.AWS에서의 강점은 안전하고 복원력이 뛰어나며 확장 가능한 운영입니다.소프트웨어이든 상관 없습니다.
기술 회사이든, 귀사 대다수가 매우 중요한 일을 하는 회사에 속해 있든, 우리의 사명은 이를 돕는 것입니다.
전문가가 될 필요가 없는 복잡한 도구를 사용하여 가치 창출 시간을 단축하세요.
커뮤니티의 AWS 파트너인 AWS의 혁신을 대중화하고 스택의 모든 측면에서 CapEx를 OpEx로 전환하는 데 드는 진입 비용을 낮추십시오.그래서 몇 년 전에 이것과 정말 비슷한 슬라이드를 보여드렸죠?이것이 아마존 EKS를 향한 우리의 여정입니다.처음에는 호스팅된 컨트롤 플레인으로 시작해서 관리형 데이터 플레인과 자동 모드를 도입했죠?이제 관리 기능이 더욱 강화되고 있습니다.그리고 자동 모드의 일부인 운영 도구도 관리했습니다.그리고 그 사명은 바뀌지 않았지만 전반적인 전략은 바뀌지 않았습니다.
EKS에서는 변함이 없었지만 고객의 요구가 진화하고 있다는 것을 알게 되었죠?여러분 모두는 신성하게 불만족하고 있습니다.이제 조금 축소해 보죠. 더 많은 것들이 있습니다.
여기서 할 일이죠, 그렇죠?처음에 보여드린 것처럼 쿠버네티스는 클러스터 그 이상입니다.우선, 대부분의 사용자들은 그냥 실행만 하는 것이 아닙니다.
더 이상 단일 클러스터입니다.그들은 많은 클러스터를 실행합니다.제가 이야기를 나눈 사람들은
최소 다섯 명, 어쩌면 열 명, 때로는 수천 명이요
수백 개의 계정.그리고 그들은 그걸 짜고 싶어하죠.
이 클러스터들은 하나의 플랫폼으로 합쳐집니다.
중앙 집중식 관리, 관찰 가능성, 거버넌스, 액세스 제어, 비밀 관리 및 배포.그리고 그들은 이 모든 것을 끝내고 싶어하죠.
템플릿, 코드화된 모범 사례, 문서, 실행 책, 개발자와 데이터 과학자가 제공하는 모든 것이 포함된 아름다운 패키지에 담겨 있습니다.
애플리케이션을 가장 잘 실행되는 정확한 위치에 배포해야 합니다.그게 전면에 있든
클라우드의 액셀러레이티드 TRN2 또는 NVIDIA GPU 인스턴스 플릿, 수천 개의 엣지 로케이션, 또는 모두 관리하려는 기업
이 모든 것이 원활하죠, 그렇죠?그들은 그걸 감당하고 싶어하죠.
AWS의 도움으로 원활하게 이용할 수 있습니다.자, 이제 올해 하이브리드 통합을 염두에 두고 있는 부분을 미리 보여드리겠습니다. 어떻게 하면 이러한 플랫폼 구성 요소를 더 많이 도입할 수 있을까요?통합 솔루션을 도입하려면 어떻게 해야 할까요?
개발 경험이 있나요?이것이 향후 몇 년간 우리의 투자 우선 순위인 거죠?그리고 이것이 바로 이것입니다.
우리가 뭘 할 건데요.중요한 워크로드에 최적화된 경험을 제공할 것입니다.
모든 규모의 패턴.관리 및 효율성을 위한 AWS 통합 및 도구를 강화할 것입니다.그리고 우리의 목표는, 지금처럼
이는 현재 위치에서 워크로드를 충족하기 위함입니다.
이들은 클라우드, 여러 지역, 로컬 영역, 온프레미스 데이터에 있습니다.
센터 또는 엣지또한 플랫폼 구축을 간소화하고 싶습니다.쉽게 만들 수 있도록 하고 싶습니다.
AWS에 프로덕션 등급의 쿠버네티스 기반 플랫폼을 구축하십시오.마지막으로 커뮤니티에서 혁신의 플라이휠을 가속화하기 위해서죠?오픈소스는 그 엔진입니다.
우리가 하는 일의 많은 부분을 뒷받침합니다. 그리고 확실히 하고 싶습니다.
우리가 그 혁신에 힘을 실어줄 수 있다는 것,
그 일원이 되기 위해 새로운 혁신이 개발되어야 합니다.
그런 다음 이를 고객에게 제공하여 고객이
모든 구성 요소에 대해 깊이 있는 전문가가 될 필요 없이 정말 쉽게 사용할 수 있습니다.
그들이 뛰고 싶어한다는 거죠.따라서 고객의 경우 클러스터 내부 및 주변에서 더 많은 작업을 자동화하지 않기로 했습니다. 기본적으로 다음과 같은 기능을 제공합니다.
쿠버네티스를 통한 최신 AWS 혁신, 그리고
이 쿠버네티스를 구성하는 커뮤니티 프로젝트와의 호환성 및 지원을 보장합니다.
혁신적이고 강력합니다.그리고 파트너의 경우
여기엔 둘 중 한 명이라도 있는 파트너가 너무 많습니다.
오늘 또는 이 글을 보면서 EKS를 기반으로 더 쉽게 구축할 수 있도록 도와드리고자 합니다.
제품 및 서비스.EKS 고객을 유치하고 함께 판매할 수 있는 간단한 경로를 제공하고자 합니다.
AWS는 이러한 고객에게 지속적인 지침, 지원 및 비즈니스 개선을 위한 아이디어를 제공합니다.
파트너십에 포함된 제품.그래서, 이건 말하기 어려운 얘기죠?왜냐하면 이것은 미래이고 우리가 하고 있는 일에 대해 상세하게 말하기는 어렵지만, 또한 우리는 항상 다음에 무엇을 해야 할지 깊이 생각하고 있다는 것도 알아두세요.그래서 이 둘의 균형을 맞출 수 있는 거죠.
우리는 얼마나 많은 것을 공유하고, 또 그것이 변할 수 있다는 것을 알기에 얼마나 주저하고 있는가.왜 변할까요?우리의 로드맵과 계획이 전적으로 고객의 의견을 기반으로 하기 때문에 상황이 바뀔 수도 있겠죠?우리는 모든 것을 기반으로 구축합니다.
고객 피드백을 기반으로좋은 데이터가 없다면
고객들이 우리가 만들고 있는 것을 정말로 원한다는 것, 그리고
우리는 그것이 가치 있다고 생각하지만, 그냥 만들지는 않을 것입니다.그리고 무언가를 만들기 시작하면서 고객들과 이야기를 나눕니다. 그렇죠?실험을 하죠.고객이 실험하지 않는다면
가치가 있다고 생각하면 우리는 그것을 바꿉니다.멈추고 건설하러 갑니다.
고객이 우리에게 구축해 달라고 요구하는 것이죠.그래서 우리는 이 프레젠테이션의 전반부 전체를 새로 나온 모든 것들에 대해 이야기하면서 보냈습니다.이 모든 것은 고객의 질문에 의해 주도되었습니다.제가 보여드린 모든 슬라이드에는 다섯 개의 슬라이드가 더 있습니다.
그건 절대 성공하지 못했어요. 왜냐하면 그것들은 프로젝트들이기 때문이죠.
저희가 고민을 해봤지만 구축한 적은 없었어요. 왜냐하면 우리가 얘기한 대로
그들에 대해 알고 있던 고객들, 아마도
그냥 그렇게 유용하지 않았어요. 그래서 우리가 그걸 만들면 안 되는 거죠.요약하자면 EKS의 미래를 이해하려면 자신이
저희 이야기의 큰 부분을 차지하고 있는 만큼, 앞으로도
Kubernetes를 스택의 표준 부분으로 쉽게 만들 수 있도록 더 많은 작업을 계속 진행해 보세요.그리고 쿠버네티스는 그 방향을 바꿨습니다.
올해로 10년, 그리고 지금으로부터 10년 후, 우리의 사명은 쿠버네티스를 사라지게 하는 것입니다.그럼 도대체 어디에 있는 걸까요?
이거 영수증 맞죠?글쎄요, 우린
컨테이너 공개 로드맵.그리고 이곳은 우리가 무언가를 푸시하고 게시하는 곳입니다.
저희는 여러분이 할 수 있는 것을 고려하고 있거나 작업 중입니다.
오셔서 아이디어를 제출하고 팀과 직접 대화할 수 있습니다.제가 가서 이걸 세어봤어요. 싫었으니까요
여기에 슬라이드를 올려놓고 이 놀라운 것에 대해 이야기하면서 이렇게 말하세요. 음, 네, 하지만 아무도 사용하지 않아요. 지금까지 로드맵에 400개 이상의 EKS 아이템을 출시했습니다.
2018년에 시작했습니다.그리고 총 850개 이상의 아이템이 있습니다.
이 로드맵에 도달한 제품은 모두 배송되었습니다.
당사의 컨테이너 서비스.따라서 다음을 수행하시기 바랍니다.
이곳을 정기적으로 방문하세요.다른 사람들이 무슨 말을 하는지 볼 수 있습니다.보고 싶은 것들에 대해 찬성 투표를 하거나 댓글을 달 수 있습니다.
또는 더 나은 것을 할 수 있다고 생각되면 아이디어를 제출해 주세요.EKS 문제는 여기에 있습니다.
EKS로 태그가 지정되어 있지만, 방문해보면 다른 컨테이너 서비스의 문제도 확인할 수 있습니다.또한 아이디어를 제출하고 대화에 참여하시기 바랍니다.Amazon EKS에 대해 자세히 알아보려면 팀에서 개발한 훌륭한 리소스가 많이 있습니다.기계 학습의 모범 사례로 최근에 업데이트된 EKS 모범 사례 가이드가 있습니다.EKS 워크숍도 있습니다.여기 ReInvent에서 열리는 EKS 워크숍에 참석할 수 있었을 수도 있습니다.EKS 워크숍은 이러한 모든 워크숍과 행사를 위한 마스터 홈입니다.따라서 ReInvent에서 워크숍 세션을 진행하지 못하셨다면 적극 권장하며
팀원들이 이 내용을 확인해 보세요.그리고 EKS 블루프린트도 있어요. 최고의 청사진이죠.
전체 클러스터를 배포하고 이제는 Amazon EKS를 사용하는 플랫폼까지 배포할 수 있는 체계화된 예제를 연습해 보십시오.또한 Terraform과 AWS CDK 모두에 청사진이 있습니다.정말 감사합니다.
여러분 오늘 와주세요.그리고 지출해 주셔서 감사합니다
시간을 내어 EKS로 무엇을 하고 있는지 알아보세요.
저와 현태에게서 말이죠.고맙습니다.(관객들의 박수 갈채)