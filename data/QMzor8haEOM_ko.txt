- 세션에 오신 것을 환영합니다.“KUB310, 엣지 및 하이브리드 사용 사례를 위한 Amazon EKS”입니다.제 이름은 에릭 채프먼입니다.저는 시니어 프로덕트 매니저입니다.
Amazon EKS 팀에서는 하이브리드 및 엣지에 중점을 두고 있습니다.그리고 저는 오늘 저와 함께 이 자리에 섰습니다.
동료 고쿨 찬드라는 컨테이너 전문가입니다.
EKS를 도입하는 데 주력하는 솔루션스 아키텍트
통신 업계의 고객을 위한 하이브리드 및 엣지 솔루션오늘은 Amazon Elastic이 어떻게 사용되는지 자세히 살펴보겠습니다.
쿠버네티스 서비스 (EKS) 는 고객이 운영 중에 직면하는 몇 가지 문제를 완화하는 데 도움이 될 수 있습니다.
하이브리드 전략을 사용하면 엣지와 온프레미스에 워크로드를 배포하고 AWS에서 실행할 수 있습니다.먼저 운영 중인 고객이 직면하게 되는 몇 가지 일반적인 문제를 설명해 보겠습니다.
환경 전반에 걸쳐 말이죠.방법을 설명해 드리겠습니다.
표준화가 도움이 될 수 있으며, 고객이 점점 더 많아지는 이유
계속해서 Kubernetes를 표준 플랫폼으로 전환하기 위한 노력과 당면 과제
일단 그렇게 되면 살아남으세요.우리가 어떤 사람인지 설명해 볼게요
Amazon EKS 팀과 협력하여 더 간단하고 더 많은 작업을 진행하고 있습니다.
쿠버네티스를 더 효율적이고 일관되게 배포할 수 있습니다.
환경 전반에 걸쳐.아키텍처를 검토해 보겠습니다.
각 EKS 하이브리드 솔루션의 모범 사례도 살펴보겠습니다.마지막으로 그 방법에 대해 설명하겠습니다.
re:Invent 기간 및 그 이후에도 EKS에 대해 자세히 알아볼 수 있습니다.먼저 고객이 하이브리드 접근 방식을 선택하는 여러 가지 이유와 그에 따른 문제를 설명하는 시나리오부터 시작해 보겠습니다.
일단 한 번 시도하면 일어날 수 있습니다.여러분이 기업의 플랫폼 엔지니어링 관리자라고 가정해 봅시다.
여러 비즈니스 라인.클라우드를 표준화했습니다.
쿠버네티스 기반 운영, AWS에서 EKS 실행 및 많은 애플리케이션
클라우드 네이티브이며 네트워킹, 스토리지 및 데이터베이스를 위한 AWS 서비스와 통합됩니다.하지만 여전히 온프레미스에서 실행되고 계속 실행될 대규모 애플리케이션 제품군이 있습니다.
가까운 장래에 온프레미스로 사용할 수 있습니다.이들 중 일부는 레거시 기술과 긴밀하게 통합되어 있습니다.
이런 것들은 추출하여 클라우드로 가져오기가 어려울 것입니다.엔드 시스템과 물리적으로 가까운 곳에서 컴퓨팅을 실행해야 하거나 엣지에서 실행해야 하는 경우도 있습니다.
고성능 레이턴시에 적합합니다.여전히 매우 민감한 고객 데이터를 처리하며 엄격한 데이터를 처리하는 애플리케이션도 있습니다.
거주 요건.이러한 애플리케이션은 실행됩니다.
운영 모델이 다르고 기술 요구 사항이 서로 다른 여러 시스템에서 실행되어 확장성이 떨어짐
팀 전체에 분산되어 있습니다.에 집중하는 대신
플랫폼 성능을 개선하거나 도움이 될 수 있는 플랫폼 기능 추가
개발 팀은 혁신하고, 팀은 수동으로 패치하는 데 너무 많은 시간을 소비합니다.
플랫폼 유지보수를 위한 기본 시스템 유지 관리
안정성 및 비즈니스 연속성아시다시피, 차별화되지 않은 부분을 일부 오프로드할 수 있다면
팀이 하는 오버헤드 작업과 운영 업무만 있으면 팀을 해방시킬 수 있습니다.
개선에 도움이 되는 방식으로 혁신하는 데 집중하기
개발자 경험 및 궁극적으로는 경험 개선
최종 고객을 위해애플리케이션과 함께
다양한 통합 기능을 갖춘 여러 시스템에서 실행되기 때문에 지원해야 하는 기술 스택이 여러 개 있습니다.여러 기술 스택을 지원하므로 이러한 기술의 무분별한 확산으로 이어집니다.
몇 가지 다른 과제가 있습니다.우선, 그것은 당신을 방해합니다.
개발 팀을 위해 빠르게 혁신할 수 있는 능력이 있는데, 이는 개발팀의 ROI를 제한합니다.
한 기술 스택의 개선 사항이 다른 기술 스택에 상속되지 않기 때문에 각각의 개선 사항이 반영되지 않습니다.빠르게 변경하기가 어려운 것은 급증으로 인해 발생합니다.
수동 프로세스, 오래된 버전, 엄격한 결합
다른 종속성과 함께.또한 각 기술 스택에는 서로 다른 기술이 필요하지만 반드시 그런 것은 아닙니다.
환경을 넘나들며 번역 작업을 진행하다 보면, 단지 환경을 유지하기 위해 팀을 확장해야 했습니다.
플랫폼이 안정적입니다.단일 플랫폼에서 표준화할 수 있다면 팀의 성과를 높일 수 있을 거라고 생각하시겠죠?
혁신 능력.클라우드에서 Kubernetes의 인기와 인기가 폭발적으로 증가함에 따라 다양한 고객을 확보하고 있습니다.
Kubernetes를 기반으로 표준화된 온프레미스 및 클라우드 환경, 일관성 있는 통합
실행 장소에 구애받지 않고 도구를 사용할 수 있습니다.컨테이너 관리로 Kubernetes를 선택했다고 가정해 보겠습니다.
고가용성과 확장성을 보장하기 위한 클라우드 플랫폼
미션 크리티컬 애플리케이션.개방적이고 확장 가능한
쿠버네티스의 특성은 쿠버네티스의 개발을 자극했습니다.
팀에서 즉시 채택할 수 있는 GitOps와 같은 혁신적인 사례와 툴링의 건전한 에코시스템.쿠버네티스와 마찬가지로
오픈 소스 표준이므로 애플리케이션을 실행해야 하는 모든 환경에서 실행할 수 있습니다.실제로 많다고 가정해 보겠습니다.
온프레미스에서 운영하는 애플리케이션 팀 중
이미 쿠버네티스를 채택했습니다.이러한 표준화의 이점을 몇 가지 보았지만 운영 오버헤드는 팀의 혁신 능력을 계속 저해하고 있습니다.개발 리소스를 사용하는 동안
환경 전반에서 더 쉽게 사용할 수 있게 되었습니다.
이러한 표준화를 고려하면 쿠버네티스 클러스터를 관리하는 담당자들은 여전히 가파른 학습 과정을 거쳐야 합니다.쿠버네티스 관리의 복잡성을 과소평가했을 수도 있습니다.
컨트롤 플레인 자체, 클러스터 정상 유지, 적시에 인증서 교체, DHCP 확인
IP 임대는 만료되지 않습니다.또한 훨씬 더 어려웠습니다.
예상했던 것보다 지속적으로 규모를 확장하고
워크로드가 확장됨에 따라 컨트롤 플레인을 축소하세요.
클러스터 플릿 전체에서.클라우드에서 EKS를 선택하게 된 계기와 동일한 문제가 많으며, 그 이유는 여러 가지가 있습니다.
클라우드 전반을 운영하는 고객은 관리형 Kubernetes 솔루션을 선택합니다.EKS는 수천만 달러를 관리합니다.
연간 클러스터 수가 증가하고 있으며 관리되는 클러스터 수가 전년 대비 33% 증가하는 등 계속해서 빠르게 채택되고 있습니다.AWS Kubernetes 팀의 목표는 운영을 가능하게 하는 것입니다.
쿠버네티스 실행의 측면은 고객이 나중에 고려할 사항입니다.
실행이 필요한 곳 어디에서든 가능합니다.그리고 이 세상에 소개된 이후로
2019년에 AWS 아웃포스트에 EKS가 도입되었는데, EKS 팀이 중점을 두는 사항 중 하나는 우리가 어떤 이점을 제공할 수 있는가입니다.
EKS를 하이브리드 환경에 도입하여 이점을 제공합니다.
매니지드 서비스 및 다음을 구축할 수 있도록 합니다.
환경 전반의 운영 일관성.많은 분들이 알고 계실 것입니다.
하지만 그렇지 않은 분들을 위해 말씀드리자면, AWS Outposts는 AWS 서비스를 데이터 센터 또는 콜로 시설로 확장하는 AWS 관리형 인프라입니다. 여기에는 컴퓨팅용 EC2, 스토리지용 S3 및 EBS, 네트워킹용 VPC가 포함됩니다.EKS는 아웃포스트 제너럴 때부터 아웃포스트에서 사용할 수 있었습니다.
2019년에 출시될 예정입니다.EKS가 클라우드에서 사용자를 위해 관리하는 Outpost 및 Kubernetes 컨트롤 플레인에서 이러한 다른 AWS 서비스를 사용할 수 있다는 점을 고려하면 Outpost에서 EKS 노드를 실행하는 것이 가장 큰 이점을 제공할 수 있습니다.
지역에서 EKS 노드를 실행해 본 일관된 경험과 AWS와의 가장 긴밀한 통합.Outpost 고객은 다음과 같은 사용 사례에 EKS를 채택하는 것을 보았습니다.
다음을 필요로 하는 범용 자동화 및 사용 사례
몇 가지 사용 사례를 예로 들자면 뱅킹이나 리얼 머니 게임과 같은 로컬 데이터 처리.고객은 운영 방식을 좋아합니다.
지역에서 EKS를 운영하는 것과 비교하여 Outpost에서 EKS를 실행할 때 얻을 수 있는 일관성이 보장됩니다.이제 어느 시점에서든 많은 사람들이
고객은 기존 제품을 새로 고칠 수 있는 위치에 있지 않습니다.
온프레미스 인프라.따라서 고객이 있는 곳에서 고객을 만나기 위해 2021년에는 Amazon EKS Anywhere를 출시했습니다.EKS Anywhere는 다음을 간소화하는 AWS 지원 쿠버네티스 관리 소프트웨어를 제공합니다.
에서 실행되는 클러스터의 인프라 프로비저닝 및 수명 주기 관리 프로세스
고객 관리형 하드웨어 및 가상화 및
베어메탈 환경.EKSA는 인프라 제공업체가 참여하는 완전 고객 관리형 솔루션입니다.
쿠버네티스의 구성 요소 및 운영 체제
AWS에서 테스트하고 지원합니다.또한 EKSA 서브스크립션도 포함됩니다.
로드 밸런싱, 수신을 위한 핵심 Kubernetes 기능을 확장하는 선별된 애드온 패키지 세트에 대한 AWS 지원이 제공됩니다.
모니터링 등.EKSA는 온프레미스 네트워킹에 대한 요구 사항이 더 엄격하거나 운영 환경이 필요한 고객에게 특히 인기가 있습니다.
연결이 끊기고, 중단되고, 간헐적으로 발생하는 위치 및
제한된 네트워크 연결.이러한 사용 사례에는 베어메탈에서 실행해야 하는 통신 애플리케이션이 포함됩니다.
원거리 네트워크 엣지에서는 더 엄격한 네트워킹 및 규제 요구 사항을 충족하는 금융 서비스 앱과 다음에 의해 실행되는 애플리케이션
인터넷 연결이 불가능할 수 있는 크루즈선을 운영하는 여행 및 숙박업 회사
한 번에 며칠 또는 몇 주.EKS를 개선했습니다.
주요 통신 ISV 솔루션과의 호환성을 위해 어디서나 사용할 수 있습니다.여기 몇 장의 슬라이드에서 Gokul이 우리를 운영할 것입니다.
대형 통신 고객 중 한 명이 EKSA에서 5G O-RAN 워크로드를 실행할 때 사용하는 아키텍처를 살펴보겠습니다.따라서 고객들은 정말 좋아합니다.
자체 하드웨어에서 계속 실행할 수 있다는 것
고객이 EKSA를 선택할 때는 이미 온프레미스에 투자한 이점을 활용하십시오.그리고 고객들은 정말 좋아합니다.
Outpost의 EKS를 사용하면 EKS를 통해 클라우드에서 쿠버네티스 컨트롤 플레인을 관리할 수 있습니다.수십 명과의 대화를 통해
그리고 수십 명의 고객들이 알게 된 사실은
고객이 별도의 작업 없이 기존 하드웨어에서 계속 실행할 수 있는 솔루션이 필요합니다.
컨트롤 플레인 관리.그래서 일요일에 장군 소식을 발표하게 되어 정말 기쁩니다.
EKS 하이브리드 노드의 가용성.쿠버네티스 노드를 실행할 수 있게 해주는 새로운 EKS 기능
기존 하드웨어에서 EKS 컨트롤에 연결합니다.
클라우드에서 실행되는 비행기.EKS 하이브리드 노드는 운영 환경에서 EKS를 실행하는 동안 보다 일관된 운영 경험을 제공합니다.
클라우드 및 온프레미스에서 실행.또한 하이브리드 노드를 통해 Kubernetes 컨트롤 플레인 관리에 대한 운영 책임을 맡는 동시에 이미 투자한 온프레미스 하드웨어 투자를 활용하여 워크로드를 온프레미스에서 계속 실행할 수 있습니다.이제 비용을 절감할 수 있습니다.
온프레미스 용량은 애플리케이션 워크로드에만 적합합니다.클라우드의 EKS와 마찬가지로 용량 확장 및 축소에 대해 걱정할 필요가 없습니다.
쿠버네티스 컨트롤 플레인.이 모든 것이 EKS에서 자동으로 관리됩니다.EKS 하이브리드 노드는
온프레미스 또는 엣지 고객을 위한 최상의 선택입니다.
로케이션은 AWS와 네트워크를 형성할 수 있으며 앞으로도 계속 될 것으로 생각합니다.
최고의 선택이자 최적의 장소가 될 것입니다.
대부분의 하이브리드 고객.우리는 하이브리드를 기대합니다.
노드는 일반 용도뿐만 아니라 미디어 스트리밍 및 제조와 같은 분산 엣지 사용 사례에 특히 많이 사용될 것입니다.
엔터프라이즈 현대화.그리고 동일한 사용 사례 중 상당수가 오늘날 Outpost에서 EKS를 사용하고 있습니다.EKS 하이브리드 노드 또는 하이브리드 노드가 있는 EKS 클러스터도 클라우드 노드를 실행할 수 있습니다.
단일 클러스터에서 온프레미스 및 클라우드에서 GPU를 사용하여 교육 역량을 강화하거나 추론 버스팅을 수행하는 AI 및 ML 사용 사례를 활용할 수 있습니다.EKS 하이브리드 노드에 대해 더 자세히 이야기하게 되어 매우 기쁩니다. 여러분도 기대해주셨으면 좋겠습니다.
세부 정보에 대해 자세히 알아보십시오.하지만 도착하기 전에 저는
고쿨에게 넘겨줄게요. 고쿨은 우리를 위해 EKS on Outposts와 EKS Anywhere에 대해 더 자세히 알아봐줄 거예요. - 고마워요, 에릭.그럼 오늘 AWS Outposts가 어떻게 귀사의 역량을 강화할 수 있는지 이야기해 보겠습니다.
Amazon EKS를 사용한 온프레미스 인프라.따라서 고객은 일반적으로 지연 시간을 줄이고 보안을 강화하기 위해 온프레미스에 Kubernetes 클러스터와 포드를 배포합니다.하이브리드 용량이 요구 사항이 아니라 필수 사항인 다른 사용 사례도 많이 있습니다.따라서 클러스터를 온프레미스로 확장할지 여부도 마찬가지입니다.
클라우드 환경 또는 관리 환경
하이브리드 컴퓨팅 파워 또는 하이브리드 컴퓨팅 플랫폼 설계, AWS Outpost에서 지원
이러한 모든 사용 사례에 적합합니다.여기서는 AWS Outpost에 Amazon EKS 클러스터를 배포할 때 두 가지 배포 옵션을 지원합니다.첫 번째는 지역 기반 클러스터와 동일한 방식으로 EKS 클라우드 기반 컨트롤 플레인을 생성하여 시작할 수 있는 확장 클러스터입니다.그런 다음 실제 워크로드를 호스팅하는 Kubernetes 노드인 클러스터 노드를 배포합니다.
AWS Outpost와 같은 하이브리드 모델 내에서
배송되어 해당 지역에 다시 연결되는 랙
자체 데이터 센터에서이것을 이렇게 부릅니다.
확장된 클러스터 접근법.하지만 이 접근 방식으로는
여러분도 여기서 보실 수 있는 것은 관리자와 동일합니다.
AWS에서 완전히 관리하는 Kubernetes 컨트롤 플레인 및 통합 경험
다음과 같은 다른 서비스 에코시스템과 함께
현재 이 지역에서 이용할 수 있습니다.두 번째 모델은 로컬 클러스터입니다.따라서 이는 고객의 의견을 경청한 특정 사용 사례 (예: 일부 고객) 를 대상으로 합니다.
네트워크 연결이 불안정할 수 있는 환경이나 배포 설정을 마련하십시오.장애가 발생할 수 있다는 의미입니다.
배치 때문에 여러 가지 이유가 있기 때문이죠.
대도시의 마지막 두 번째 지역에 있는 데이터 센터, 심지어 지속적인 네트워크 가용성에 문제가 있는 고립된 환경에 있는 데이터 센터의 경우
EKS를 통한 AWS 아웃포스트 운영.그래서 여기서 로컬 클러스터라는 두 번째 배포 옵션을 도입했습니다. 이를 통해 고객은 연결이 끊기는 동안에도 여전히 Kubernetes 기반 작업을 계속할 수 있습니다.따라서 이 모델에서는 EKS가 하는 일이 로컬 컨트롤을 배포한다는 것입니다.
EKS 컨트롤 플레인인 EKS 컨트롤 플레인은 AWS Outpost 랙 자체에 있습니다.그리고 그 과정에서
EKS 컨트롤 플레인 지역과의 연결을 끊으세요.
우리가 해당 지역에서 관리하고 있지만 고객은 별도의 조치 없이도 Kubernetes 기반 운영을 계속 관리할 수 있습니다.
워크로드 장애.이것이 바로 그 목표입니다.
구체적인 사용 사례는 앞서 말했듯이 로컬 클러스터는 다음을 제공할 수 있습니다.
고객이 여전히 사용할 수 있는 이 확장된 기능
운영 중단 없이 워크로드를 계속 실행할 수 있습니다.첫 번째 옵션인 확장 클러스터는 여전히 권장되는 옵션입니다.
AWS 측에서 제공하는 옵션은 AWS에서 Kubernetes 컨트롤 플레인을 완전히 관리하는 환경에서 고객에게 보다 통합되고 관리되는 환경을 제공하기 때문입니다.또한 여러 가지가 있습니다.
고객이 직접 전체 포트폴리오 또는 전체 워크로드 포트폴리오를 개선하는 데 사용할 수 있는 클라우드 내에서 사용할 수 있는 서비스 에코시스템.그럼 어떻게 되는지 살펴보도록 하겠습니다.
확장된 클러스터를 위한 아키텍처가 설계되어 있습니다.
방금 논의한 내용입니다.그래서 고객들은 먼저
아웃포스트 랙 주문그리고 이 AWS Outpost 랙은 서비스 링크 방식을 사용하여 지역에 다시 연결되는 고객의 자체 데이터 센터로 배송됩니다.그리고 서비스 링크도 차례대로
AWS에서 제공하는 다이렉트 커넥트 서비스를 사용합니다.그리고 이 연결성
Outpost 환경에서 해당 지역으로 돌아오는 높은 처리량의 보안 연결을 제공합니다.그러면 고객이 네트워킹인 VPC를 만들 수 있습니다.네트워킹의 경우와 마찬가지로 네트워크가 생성됩니다.
비슷한 방식으로 오늘날 이들이 사용하는 방식도 마찬가지입니다.
지역 기반 접근법이죠.다음과 같이 VPC를 생성할 수 있습니다.
다양한 가용성에 걸친 다중 서브넷
지역 내 영역.이제 차이점은
AWS Outposts와 마찬가지로 AWS Outposts를 사용자 계정에 등록하고 데이터 센터 내에 배치하면 이전과 동일한 VPC를 사용할 수 있습니다.
지역 내에서 생성한 것을 이 Outpost 랙으로 확장할 수 있습니다.여러 개를 만들 수 있다는 뜻이죠.
동일한 VPC 내 서브넷, 아웃포스트 선택
가용 영역으로.따라서 이를 통해
구조를 사용하여 클라우드에서 자체 데이터 센터로 네트워크를 확장할 수 있습니다.
AWS Outposts를 통해 이를 원활하게 구현할 수 있습니다.일단 이걸 가지고 있으면
네트워킹 레이아웃이 설정되면 EKS를 만들 수 있습니다.
컨트롤 플레인을 사용하는 것과 같은 방식으로 컨트롤 플레인을 사용하십시오.
오늘날의 클라우드 기반 클러스터.여기서 중요한 점은 EKS 컨트롤 플레인이 다음과 같다는 것입니다.
영역에서 생성되고 컨트롤 플레인 앵커가 생성됩니다.
EKS 컨트롤 플레인이 있는 크로스 어카운트 ENI 아키텍처를 사용하여 지역 기반 서브넷에
AWS에서 완전히 관리합니다.따라서 이것은 다음과 같이 고정됩니다.
확장한 동일한 VPC 내의 서브넷
아웃포스트 인프라.통제권을 갖게 되면
다른 비행기와 같은 방식으로 비행기를 배치했습니다.
오늘날 지역 기반 클러스터를 사용하면 모든 것과 마찬가지로 확장된 접근 방식을 사용할 수 있습니다.
이는 클라우드에서 Outpost 환경까지 이어집니다.EKS 컨트롤 플레인과 함께 전체 인프라를 구축한 다음에는 먼저 다음을 생성해야 합니다.
확장한 동일한 Outpost 서브넷 내의 자체 관리형 노드 그룹
포지셔닝된 자체 인프라
데이터 센터 내에서따라서 EKS 컨트롤 플레인은 다음을 사용하여 생성할 수 있다는 점에 유의해야 합니다.
지역 기반 서브넷이지만 실제 Kubernetes 노드는 해당 위치에 있는 서브넷 내에서 실행됩니다.
아웃포스트 환경.따라서 자체 관리형 노드 그룹은 여러 노드를 구성하는 쿠버네티스 노드 그룹입니다. 엄밀히 말하면 이러한 노드 그룹이 EC2 인스턴스라고 할 수 있습니다. 왜냐하면 AWS Outpost 랙이기 때문입니다.
현재 다음과 같이 제공되는 여러 서비스가 있습니다.
쿠버네티스인 EC2 인스턴스를 실행할 수 있는 AWS 포트폴리오의 일부
엄밀히 따지면 자체 환경에 노드가 있습니다.
지역 기반 EC2 서비스에 의존하지 않아도 되는 것과 같습니다.이를 통해 고객은 실행 중인 실제 워크로드를 배포할 수 있습니다.
쿠버네티스 노드는 아웃포스트 랙에 위치하며, 이 노드는 차례로 배치됩니다.
자체 데이터 센터 내에서그래서 보통 다음과 같은 경우
이 Outpost 환경에 애플리케이션을 배포하세요. 분명 그럴 수도 있습니다.
자체 데이터 센터 환경에서 이미 실행하고 있는 전체 애플리케이션 세트를 갖춘 또 다른 환경이나 포트폴리오를 구축하십시오.그래서 우리는 구조를 제공합니다.
로컬 게이트웨이가 게이트웨이에 액세스하여 통신을 가능하게 하는 로컬 게이트웨이라고 합니다.
이 EKS 환경에서 실행되고 있는 응용 프로그램과 통신하여 사용하는 응용 프로그램 간
다른 데이터 센터 인프라에서 실행되는 애플리케이션
이미 가지고 있는 것이죠.그래서 끊김 없는 연결이 가능하기 때문에 스티칭할 수 있습니다.
Outposts에서 실행되는 애플리케이션과 데이터 센터 내에서 실행되는 자체 인프라 구성 요소.지금까지 고객이 AWS Outposts를 어떻게 활용할 수 있는지, 즉 AWS에서 제공하는 방법을 알아보았습니다.
그리고 관리형 하드웨어에 EKS 클러스터를 배포하여 확장할 수 있습니다.
클라우드에서 자체 데이터 센터까지 애플리케이션 포트폴리오하지만 고객이 원한다면 어떨까요?
자체 하드웨어에서 애플리케이션을 실행하고 싶으신가요?엄밀히 따지자면 COTS 기반
그들이 조달한 하드웨어.또는 많은 고객이 만들었습니다.
이미 자체 데이터 센터에 이 하드웨어가 설치되어 있는 경우 데이터 센터 하드웨어에 상당한 투자를 하고 있습니다.두 번째로 중요한 것은
여기서 요구 사항에 대해 논의할 부분은 다음과 같을 수 있습니다. 고객이 원하면 어떻게 될까요?
클러스터를 완전히 격리된 환경에 배포하고 싶으신가요?완전히 격리된 환경이라고 하면 고객은 원하지 않습니다.
지역 기반 연결을 원하는지 아니면 전혀 원하지 않나요?
인터넷 연결이 주변 환경 외부로 유출되고 있습니다.그곳이 바로 EKS Anywhere입니다.
그림으로 들어오죠.그래서 EKS 애니웨어는 가능하죠.
고객은 자신의 서버에 쿠버네티스 클러스터를 배포할 수 있습니다.
자체 COTS 기반 하드웨어 또는 이미 관리하고 있는 기존 가상화 환경
예를 들어 VM웨어, 클라우드스택.따라서 이를 통해 배포할 수 있습니다.
에서 볼 수 있는 것과 동일한 일관성을 가진 클러스터
지역 기반 KS 클러스터.다음은 EKS Anywhere에 관한 내용입니다.이제 EKS Anywhere가 어떻게 작동하는지 살펴보겠습니다.
아키텍처는 어떤 모습일까요?전체 구성 요소를 구성하는 완전한 구성 요소 스택인 셈이죠.
일관된 쿠버네티스로서의 EKS Anywhere의 스택
AWS에서 제공하는 플랫폼.첫 번째는
인프라 제공업체 맞죠?여기까지 가기 전에 EKS Anywhere는 클러스터 API 기반을 기반으로 설계되었다는 사실을 강조해야 합니다.따라서 클러스터 API는 쿠버네티스라고 할 수 있습니다.
클러스터를 표준화하고 간소화하는 하위 프로젝트
라이프사이클 관리.따라서 EKS Anywhere는 다음을 계승합니다.
클러스터 API의 아키텍처 패턴은 매우 다양합니다.
간단히 말해서 커뮤니티 전체에서 CAPI라고 합니다.따라서 인프라 제공업체는 여기에 나와 있는 이러한 모든 옵션에 EKS Anywhere를 배포할 수 있다는 것을 의미합니다.따라서 배포할 수 있습니다.
완전히 가능한 베어메탈 서버에서
베어메탈 서버를 사용하여 EKS Anywhere를 배포하세요
그 위에 클러스터가 있습니다.특히 베어메탈 접근 방식의 경우 클러스터 배포를 지원할 뿐만 아니라
Tinkerbell 구성 요소를 사용하여 이미징과 서비스 관리에 대한 차별화되지 않은 많은 작업을 수행했습니다.따라서 팅커벨은 AWS가 크게 기여한 오픈 소스 프로젝트입니다.
이 특정 프로젝트를 쿠버네티스 네이티브로 만들기 위한 것입니다.
또는 일반적으로 클라우드 네이티브입니다.그리고 두 번째 세트는
인프라 제공자는 가상화된 환경입니다.즉, 이미 가지고 있는 경우
VMware 환경 또는 CloudStack 환경에서는 기존 환경을 사용할 수 있습니다.
가상 머신을 관리하고 EKS를 배포할 수 있는 가상화 계층
상단이면 어디든 가능합니다.원활한 자동화를 통해 고객이 엔드-투-엔드 경험을 할 수 있도록 전체 기능을 제공하는 곳입니다.
가상화된 환경 위에 클러스터를 생성하는 접근 방식.또한 지원도 제공합니다.
Nutanix와 같은 파트너 환경.또한 우리에게는
AWS에서 제공하는 것과 같은 엣지 기반 디바이스인 Snow에 EKS Anywhere 클러스터를 배포할 수 있는 모든 기능을 제공합니다.따라서 EKS Anywhere를 배포할 수 있는 인프라 제공업체는 다음과 같습니다.다음 계층은
쿠버네티스 배포판.따라서 EKS Anywhere와 함께 사용되는 쿠버네티스 배포판을 EKS 배포판이라고 하는데, 이것이 바로 EKS입니다.
쿠버네티스 배포판.그리고 한 가지 중요한 것은
여기서 주목해야 할 점은 이 배포판이 전반적으로 사용되는 것과 동일한 Kubernetes 배포판이라는 것입니다.즉, 현재 수백만 명에게 전력을 공급하고 있다는 뜻입니다.
이미 고객이 있는 지역의 클러스터
프로덕션 규모에서 사용.따라서 이 배포판이 사용자에게 정확히 제공하거나 가능하게 하는 것은
Relly on AWS와 마찬가지로 AWS에서는 보안 패치를 유지 관리하고 배포판 제작을 위한 기본 이미지를 구축하여 바로 사용할 수 있도록 AWS가 담당합니다.
걱정할 필요 없이 이러한 클러스터를 배포할 수 있습니다.
보안 패치, CVE 분석, 취약성 분석 등에 대한 지출 주기에 대해이것이 EKS 배포판인데 EKS 배포판이라고 합니다.다음은 다음 레이어입니다.
클러스터 라이프사이클 관리 및 클러스터 운영, 그리고 컨테이너인 CNI
네트워킹 인터페이스는 Kubernetes 환경에서 실행되는 포드 및 서비스의 기본 연결을 제공합니다.따라서 EKS Anywhere는 패키지로 제공됩니다.
생성, 삭제, 업그레이드를 원활하게 수행할 수 있는 컨트롤러 세트와 함께
노드 업데이트, 추가, 삭제그리고 이 모든 작업들
제공되는 컨트롤러 세트에서 제공됩니다.
EKS Anywhere와 함께 제공됩니다.반면에 패키징된 CNI 또는 기본 CNI, 또는 지원되는 CNI를 의미합니다.
EKS Anywhere와 함께라면 실리움이 있습니다.그래서 아주 큰 것이 있습니다.
여기에 차별화 요소가 있죠.이 지역 사람들이 EKS가 이 지역에서 어떻게 작동하는지 잘 알고 있다면 플랫 네트워킹을 제공하는 AWS VPC CNI를 사용할 수 있습니다.
지역 내 모델.하지만 앞서 말했듯이 EKS Anywhere를 사용하면 자체 데이터 센터 내에서 실행되는 완전하고 격리된 옵션입니다.다른 제품과 마찬가지로 AWS VPC CNI를 사용할 수 없습니다.
방금 논의한 옵션인데, 바로 아웃포스트의 EKS입니다.전초 기지에는 여전히 EKS가 있습니다
VPC 구조를 사용합니다.그래서 쿠버네티스에 VPC CNI를 사용합니다.하지만 EKS Anywhere를 사용하면 AWS의 통제에서 완전히 벗어나고 내부에 위치할 수 있기 때문입니다.
고객의 자체 하드웨어에 자체 데이터 센터를 설치하면 고객은 이를 활용할 수 있습니다.
자체 네트워크가 있기 때문에 EKS Anywhere의 필수 CNI로 Cilium을 패키징합니다.다음은 레이어의 설명입니다.
운영과 툴링 맞죠?보세요, 그냥 EKS 클러스터를 만드는 것뿐이죠.
또는 쿠버네티스 환경만으로는 충분하지 않습니다.
완전한 애플리케이션 포트폴리오를 실행하세요.배포해야 하는 특정 도구 또는 도구 세트가 필요합니다.
여러 작업을 수행하기 위한 쿠버네티스 환경
최종 애플리케이션에 필요한 활동은
최종 사용자가 사용할 수 있어야 합니다.예를 들어, 다음과 같이 할 수 있습니다.
로드 밸런스일 수도 있고, 인그레스일 수도 있고, 이미지 레지스트리일 수도 있습니다.따라서 이러한 모든 도구가 필요합니다.그리고 저희가 들은 얘기는
저희 고객들은, 마치 업스트림 커뮤니티에서 직접 이걸 소비한다면, 다음에 의존해야 한다는 거죠.
커뮤니티 기반 지원.두 번째 모델은
이러한 구성 요소 중 하나라도 파트너 네트워크나 일부 기업 공급업체를 통해 구할 수 있는 경우에는 해당 공급업체로 이동해야 합니다.
지원을 받을 특정 엔터프라이즈 공급업체
이러한 특정 구성 요소.그래서 저희는 큐레이티드 패키지 (Curated Packages) 라는 제품을 고안해냈고, 이를 통해 고객들이
디자인 그대로 사전 큐레이션된 패키지를 사용하세요.
또한 AWS에서 정의한 사항이기도 합니다. 여기서 AWS는 Kubernetes 환경에서도 이러한 구성 요소를 관리할 책임이 있습니다.예를 들어, 다음을 예로 들어 보겠습니다.
Harbor, Emissary, MetalLB 등 모두 잘 알려진 오픈소스 커뮤니티 기반 프로젝트입니다.따라서 큐레이티드 패키지를 사용할 때마다 걱정할 필요가 없습니다.
유지 관리 및 유지 관리에 대해
버전 기능 및 특정 쿠버네티스 버전과의 호환성
에서 실행 중입니다.또한 AWS는 EKS 환경에서 이러한 특정 애드온을 관리할 수 있도록 완전한 지원을 제공합니다.이것이 바로 우리가 큐레이티드 패키지를 통해 제공한 가치입니다.여기서 또 다른 중요한 측면은 보안 관점에서 볼 때 특정 패키지를 사용하는 경우
쿠버네티스의 애드온, 그리고 어떤 종류가 있는 경우
보안에 취약한 점은, 오늘날 오픈 소스나 업스트림에서 직접 사용하는 경우 커뮤니티에서 패치된 버전을 사용할 수 있도록 기다려야 한다는 것입니다.하지만 그렇지 않습니다.
EKS Anywhere와 함께 제공되는 큐레이티드 패키지를 사용하면 AWS가 책임을 지고 포트폴리오에서 사용할 수 있는 이러한 애드온에 대한 완전한 지원도 제공합니다.또한 AWS는 이러한 모든 애드온의 코드 관리도 담당합니다.이것이 바로 EKS Anywhere와 함께 제공되는 큐레이티드 패키지 계층입니다.다음으로, 생성하고,
오늘날 EKS 클러스터를 몇 가지 다른 방법으로 관리할 수 있죠?그래서 첫 번째 모델은 eksctl CLI입니다.그래서 우리는 다음을 제공합니다.
포괄적인 CLI 메커니즘.여기서 주목해야 할 점이 매우 중요합니다. 예를 들어 사람들이 EKS 클러스터 방식에 익숙하다면 말이죠.
이 지역에서 운영되고 있는 지역에는 일관된 API 엔드포인트가 있는데, 이 엔드포인트는 자동 판매기 역할을 합니다.
쿠버네티스 클러스터를 위한 머신.그리고 직접 할 수도 있습니다.
AWS CLI 또는 인프라를 사용하여 이 API 엔드포인트를 호출합니다.
코드 툴링으로, 이를 통해 해당 지역에 EKS 클러스터를 생성할 수 있습니다.하지만 그렇지 않습니다.
EKS 애니웨어와 함께라면, 그렇죠?앉아있기 때문이죠.
자체 데이터 센터에서 운영합니다. 고객이 직접 운영하죠.이것이 바로 우리가 제공하는 곳입니다.
eksctl CLI에서 사용할 수 있는 포괄적인 CLI 옵션 세트를 사용하는 것과 동일한 일관된 경험을 제공합니다.따라서 eksctl CLI는 예전에는 클러스터를 생성하기 위한 접근 방식이었습니다.
시작부터 지역.그리고 eksctl CLI에 다음을 추가했습니다.
Anywhere라는 확장 프로그램으로, 내부에서 클러스터를 운영하고 관리할 수 있는 기능을 제공합니다.
자체 환경.같은 도구 세트를 사용했지만 클러스터를 제어할 수 있도록 접근 방식을 통합하거나 확장했습니다.
자체 하드웨어에서 온프레미스로 클러스터를 관리할 수 있습니다.두 번째 옵션은 테라폼이죠?툴링과 같은 코드로서의 인프라를 좋아하신다면 맞춤형 기능을 제공합니다.
생성 및 관리를 위한 Terraform 운영자 제공업체
EKS 애니웨어 클러스터.세 번째 접근 방식은
EKS Anywhere가 어떻게 상속되는지에 대해 간략하게 설명한 권장 접근 방식입니다.
CAPI와는 매우 다양한 아키텍처 패턴이 있습니다.따라서 다음과 같은 방법을 사용하는 것이 좋습니다.
전체 클러스터 구성을 Git 리포지토리에 저장하여 GitOps 기반 방식으로 클러스터를 관리하세요.그리고 패키지 중 하나인 EKS Anywhere를 사용하면
플럭스 컨트롤러가 포함되어 있습니다.플럭스 컨트롤러는 눈에 띄는 제품입니다.
커뮤니티에서 사용할 수 있는 GitOps 기반 컨트롤러.그리고 지원을 시작했고 Flux Controller에 기여하여 EKS Anywhere와 함께 패키징되고 인프라에 GitOps 기반 접근 방식을 사용할 수 있도록 하고 있습니다.다시 말씀드리지만, 이 점을 다시 한 번 말씀드리지만, 애플리케이션 관리를 위한 GitOps 기반 접근 방식을 말하는 것이 아니라 GitOps를 사용하여 인프라 자체를 관리할 수 있습니다.따라서 다음과 같은 세 가지 방법을 사용할 수 있습니다.
클러스터 생성.다음은 지역 기반 연결입니다.앞서 말씀드렸듯이 여러 가지가 있습니다.
다양한 배포 옵션과 EKS Anywhere가 완전히 다른 점과 시스템에 의존하지 않고도 에어 갭 및 격리가 가능하다는 점에 대해서도 논의했습니다.
지역 기반 연결, 그래도 고객이라면
관리형 제품 중 하나를 사용하는 데 관심이 있음
클라우드 내 서비스는 선택 사항일 수 있습니다.
지역으로의 연결.고객들 사이에서 흔히 볼 수 있는 사용 사례가 있겠죠?예를 들어 고객이 중앙 단일 창 옵저버빌리티를 사용하려는 경우를 예로 들 수 있습니다.
현재 수천 개의 EKS 클러스터에 대한 대시보드 메커니즘으로, 이를 통해 EKS 클러스터가 다음을 사용할 수 있습니다.
아마존 매니지드 프로메테우스, 아마존 매니지드 그라파나
해당 지역에서 사용할 수 있으므로 클라우드 기반 연결 옵션도 계속 사용할 수 있습니다.
EKS Anywhere를 사용하면 됩니다.이제 배포 토폴로지를 살펴보겠습니다.그럼 EKS Anywhere는 두 가지 배포 토폴로지를 지원하죠?그리고 표준화된 바로는
CAPI 절차에는 워크로드가 포함되고
관리 클러스터에서도 동일한 접근 방식은 다음과 같습니다.
EKS Anywhere와 함께 사용할 수 있으며, 하나만 사용할 수 있습니다.
고객이 단일 배포 옵션을 자유롭게 사용하여 싱글톤 클러스터를 관리할 수 있는 클러스터 기반 옵션 (프로비저닝될 예정)
이 클러스터의 최상위에 모든 컨트롤러가 있어 클러스터 자체를 관리할 수 있습니다.예를 들어 제가 이렇게 말할 때
클러스터 자체 관리, 노드를 추가하려면 삭제
노드, 클러스터 업그레이드, 모든 컨트롤러는
동일한 클러스터에서 사용할 수 있습니다.두 번째 접근 방식은
관리 클러스터와 워크로드 클러스터 접근 방식 맞죠?즉, 전체 컨트롤러 세트를 담당하는 중앙 관리 클러스터를 갖게 된다는 것입니다.
라이프사이클 생성, 업데이트 및 관리를 위한 용도
클러스터 또는 배포됨.그리고 이 관리 기능을 활용하면
클러스터를 엔드포인트로 사용하여 클러스터를 생성하고 운영할 수 있습니다.
워크로드 클러스터 플릿.따라서 워크로드 클러스터는 최종 사용자 워크로드가 배포되는 클러스터입니다.보시다시피, 한 가지 명확한 설명이 있습니다.
여기서 관리 클러스터 간의 차이점은 다음과 같습니다.
그리고 워크로드 클러스터를 보면 컨트롤러가
관리 클러스터에 배포된 리소스는 워크로드 클러스터에 없기 때문에 최종 애플리케이션에 필요한 리소스를 제공하며 클러스터 수명 주기 동안 리소스를 소비하지 않습니다.
운영 자체.이렇게 관리할 수 있습니다.
관리 클러스터를 포함하는 워크로드 클러스터 플릿.일반적으로 EKS Anywhere를 3개 이상 보유한 고객에게 권장합니다.
클러스터에는 이러한 접근 방식이 필요합니다.따라서 클러스터를 관리할 때 매우 구체적인 거버넌스를 제공할 뿐만 아니라 데이터 센터 환경 내의 전체 클러스터 포트폴리오를 단일 창에서 확인할 수 있습니다.이제 선언적 옵션과 셀룰러 클러스터 관리는 다음과 같은 경우에 매우 중요합니다.
수백 개의 쿠버네티스 클러스터를 자체 운영 중인 고객
오늘날의 환경 맞죠?따라서 EKS Anywhere 클러스터를 만들 때 사용하는 인터페이스는 매우 간단한 YAML 기반 구성입니다.여기에서 다음을 정의하는 구성 파일입니다.
클러스터 사양에는 이름, 네트워크 이름, 생성해야 하는 컨트롤 플레인 노드의 수, 작업자 노드 구성이 포함됩니다.여기에는 모든 것이 담겨 있습니다.
YAML 기반 구성.방금 논의한 바와 같이
GitOps 기반 접근 방식이 경영과 결합되었습니다.
클러스터 토폴로지, 셀룰러를 사용할 수 있습니다.
사용할 수 있는 관리 접근 방식
GitOps 접근 방식으로 워크로드 클러스터 집합을 운영하기 위한 특정 관리 클러스터. 여기서 관리는
클러스터가 동기화에 액세스한 다음 이를 실현합니다.
사용자가 제공한 모든 구성
Git 소스를 통해 생성 및 운영
다중 워크로드 클러스터.마지막으로 배포 옵션이죠?그래서 저희가 고객들에게 연락을 취했을 때, 각 고객들은 저마다의 것을 가지고 있습니다.
쿠버네티스 클러스터를 만들 때 필요한 고유한 요구 사항.항상 강제할 수는 없습니다.
리소스가 제한된 조건이 있을 수 있기 때문에 다중 노드 클러스터를 만드는 것입니다.그래서 저희가 지원하는 부분이 바로 이것입니다.
다양한 배포 옵션.첫 번째는
각 노드가 위치할 다중 노드 접근 방식
컨트롤 플레인 또는 데이터 플레인 노드 역할을 합니다.또는 두 번째 노드는 함께 배치된 마스터와 작업자 노드로, 여기에는 마스터, 고가용성 마스터, 작업자 노드가 있는 세 개의 노드가 있을 수 있습니다.
동일한 시스템에서 실행되고 있어야 합니다.세 번째 옵션은 전체를 실행할 수 있는 단일 노드 접근 방식입니다.
EKS Anywhere 환경 또는 EKS Anywhere 클러스터를 사용할 수 있습니다.
단일 베어메탈 노드.따라서 현재 EKS Anywhere에서 지원하는 다양한 배포 옵션은 다음과 같습니다.특히 EKS Anywhere를 활성화한 구체적인 사용 사례를 강조하거나 소개하고자 합니다.
전국에 오픈 라디오 액세스 네트워크를 구축하려는 일본 기반 통신 고객
일본 전역의 건축물로 거의 9천만 명의 가입자에게 서비스를 제공하고 있습니다.그리고 이 특별한 것은
EKS Anywhere를 컨테이너로 사용하는 토폴로지
액세스 서비스 옵션은 거의 15,000개에 달합니다.
35,000대 이상의 베어메탈 서버를 갖춘 다양한 셀 사이트 (예: 모든 사이트 포함)
방금 살펴본 내용입니다.따라서 이러한 특별한 접근 방식을 통해 NTT DOCOMO는 확장할 수 있습니다.
지역부터 지역까지 이어지는 클라우드 기반 패턴
셀 타워와 셀 사이트를 포함한 두 번째 영역.그럼 어디에서든 정확히 어떻게 EKS가 가능할까요?
NTT 도코모를 활성화할 수 있을까요?그래서 NTT 도코모는 다른 통신 사업자와 마찬가지로
오늘날 시장에는 확장된 토폴로지가 있습니다.AWS 지역, 지역 데이터 센터, 엣지 사이트, 셀 사이트가 있다는 뜻입니다.그렇다면 차별성은 무엇일까요?
여기도 고려해보세요, 그렇죠?지역, 지역은 클라우드 기반 모델입니다.그리고 지역 사이트로 이동하면 지역 사이트는 충분한 용량을 갖춘 표준 데이터 센터라고 할 수 있습니다.
다중 노드 클러스터를 호스팅하기 위해서입니다.그리고 엣지 사이트는
운영할 수 없는 리소스가 제한된 환경
다음과 같은 다양한 옵션이 있습니다.
하드웨어 세트 보유.셀 사이트에 가면 이런 부분이 가장 유리합니다.
세포 토폴로지 내에서 오직 숙주만 할 수 있는 부위입니다.
셀 사이트가 특정 하드웨어 세트만 호스트할 수 있기 때문에 단일 노드 클러스터가 필요합니다.
그 아래에 있든, 그 안에 있든이것이 바로 일반적으로 볼 수 있는 스트레치 토폴로지입니다.
통신사 고객과 함께 말이죠.그리고 NTT DOCOMO에서는 다이렉트 커넥트를 통해 이러한 특정 토폴로지를 쉽게 연결할 수 있었습니다.
우리가 이미 가지고 있는 접근 방식을 통해 서로 연결할 수 있습니다.
직접 연결 접근 방식 또는 Direct Connect 서비스를 사용하는 경우 셀 사이트까지의 지역까지
우리는 일관된 기능을 제공하는 AWS 포트폴리오를 보유하고 있습니다.
지역부터 다른 지역까지 안정적이고 안전한 연결
엣지 사이트 또는 애플리케이션 및 인프라용.따라서 연결성은 그렇지 않습니다.
인프라 용도로만 사용할 수 있지만 동일한 백본을 사용할 수 있습니다.
애플리케이션에도 사용됩니다.셀룰러 관리도 마찬가지입니다.
앞에서 살펴본 것처럼 EKS Anywhere 클러스터 중 NTT DOCOMO는 관리 클러스터를 사용하여 여러 워크로드 클러스터를 생성하고 관리할 수 있습니다.
지역 사이트에 있습니다.그리고 다른 것도 있습니다.
그들이 사용한 토폴로지는 지역 사이트 때문입니다.
다중 노드 클러스터를 호스트할 수 있는 충분한 용량이 있어야 합니다.워크로드 클러스터를 사용합니다.
지역 사이트에 앉아 생성 및 운영
다중 워크로드 클러스터.그리고 지역 데이터
센터는 관리 클러스터를 호스팅하는 데 사용됩니다.
여러 워크로드 클러스터를 운영 및 배포할 수 있습니다.
엣지 사이트에서따라서 DOCOMO는 이 스트레치 토폴로지와 셀룰러 클러스터 관리를 통해 배포할 수 있었습니다.
이 지역에서 출발한 본격적인 컨테이너 액세스 서비스 플랫폼
엣지 사이트까지이 지역에서는 EKS가
서비스는 항상 이용 가능합니다.NTT 도코모도 그 중 하나입니다.
핵심 및 RAN 공급업체인 NEC와 제휴를 맺은 최초의 고객 중 하나입니다. ISP 공급업체는
워크로드를 인증하기 위해 코어와 RAN을 제공합니다.
이 지역의 중력자가 없습니다.그래서 그들은 5G를 호스팅하고 있습니다.
지역의 코어와 다음을 구성하는 RAN
DU, 분산 단위 및 중앙 집중식 단위
지역에 국한되지 않는 EKS Anywhere 환경
사이트에서 엣지 사이트까지.따라서 이러한 특별한 접근 방식을 통해 NTT DOCOMO는 배포할 수 있었습니다.
클라우드에서 시작하여 지역에 이르기까지 다양한 애플리케이션 세트.예를 들어 엣지 사이트는 분산 단위로 구성됩니다.
그리고 중앙 집중식 장치.RAN 지능형 컨트롤러는 지역 사이트에 배포되며 주요 5G 핵심 구성 요소는
해당 지역에 배포되었습니다.그럼 EKS Anywhere 주제를 몇 가지 모범 사례와 함께 마치겠습니다. 그렇죠?따라서 어떤 배포를 선택하든 다음과 같은 세트를 제공합니다.
배포 모범 사례.따라서 EKS Anywhere에서도 동일하게 적용됩니다. 이는 내부에서 관리되더라도 마찬가지입니다.
자체 데이터 센터.첫 번째는 데이터를 저장할 수 있는 GitOps 기반 클러스터 관리 접근 방식을 사용하는 것입니다.
전체 클러스터 구성을 GitOps 리포지토리의 코드로 제공하며 클러스터를 동기화할 수 있습니다.
관리 및 생성.그리고 두 번째는
사용할 수 있는 큐레이트된 패키지 사용
배포되는 모든 애드온을 관리하기 위해 AWS에서 제공하는 큐레이티드 패키지
EKS Anywhere 클러스터.클러스터는 EKS Anywhere, CLI 및 CLI를 통해 업그레이드됩니다.
GitOps 기반 접근 방식, 다양한 지원
업그레이드 패턴 유형.롤링 업그레이드일 수 있습니다.
아니면 그냥 업그레이드할 수 있는 인플레이스 업그레이드를 할 수도 있습니다.
하드웨어에서 실행되는 Kubernetes 버전 또는 하드웨어에서 실행되는 OS에도 패치를 적용하는 본격적인 롤링 업그레이드.따라서 기존 메커니즘을 사용하여 클러스터를 업그레이드할 수 있습니다.LDAP와 OIDC는 다음과 같습니다.
보안 기반 인증을 통해 EKS Anywhere를 내부에서 사용 가능한 기존 LDAP 인프라와 통합할 수 있습니다.
귀사의 데이터 센터 환경.마지막으로, 실리움은 EKS Anywhere에서 사용할 수 있는 패키지 CNI이므로 함께 제공되는 eBPF 보안을 사용할 수 있습니다.
Cilium에서 제공하는 네트워크 정책은 다음과 같습니다.
다음을 사용할 수 있도록 클러스터 내의 동부/서부 트래픽을 보호합니다.
포트 간 또는 포트 간 워크로드 통신을 보호하기 위해 Cilium에서 제공하는 완전한 기능 또는
서비스 대 포트 통신.이제 에릭에게 다시 넘겨 보겠습니다. 에릭은 에릭을 소개할 예정입니다.
최신 배포 옵션인 EKS 하이브리드 노드입니다. - 고마워요, 고쿨.좋아요, 아웃포스트와 EKS Anywhere에서 수년간 EKS를 운영하고 고객으로부터 배운 덕분에 시스템을 관리할 수 있다는 확신을 갖게 되었습니다.
에서 실행되는 클러스터를 위한 쿠버네티스 컨트롤 플레인
고객이 관리하는 하드웨어는 이러한 문제를 완화하기 위한 의미 있는 단계가 될 것입니다.
Kubernetes를 온프레미스로 실행하는 데에는 차별화되지 않은 과제가 있습니다.EKS 하이브리드 노드를 사용하면 온프레미스에 연결할 수 있습니다.
그리고 사용자 환경에서 실행되는 엣지 인프라를 EKS 컨트롤 플레인에 연결합니다.
클라우드에서 실행되므로 유지할 수 있습니다.
워크로드를 온프레미스로 유지하면서 제어 플레인 관리 책임을 Amazon에 오프로드하십시오.EKS 애드온, EKS 포드 ID, 클러스터 액세스 관리 등과 같은 Amazon EKS 기능을 계속 사용할 수 있습니다.
클러스터 인사이트 및 확장된 쿠버네티스 버전 지원이제 관리, 보안, 확장에 대한 AWS의 전문 지식을 활용할 수 있습니다.
Kubernetes를 호스팅하여 Kubernetes 컨트롤 플레인을 확장하여 운영 오버헤드를 줄이고 온프레미스 용량을 절약하십시오.
클라우드에서 플레인을 제어하고 온프레미스 전반에서 운영 일관성을 확보하세요.
및 클라우드 환경.그럼 어떻게 작동할까요?EKS 하이브리드 노드를 사용하면 EKS 컨트롤 플레인을 계속 사용할 수 있습니다.
익숙한 것과 동일한 API, 도구 및 기능을 사용하여 AWS 지역에서 실행하기
클라우드에서 EKS를 실행할 때.온프레미스 작업자 노드는 물리적 또는 가상입니다.
관리하는 컴퓨터.이 제품을 사용하면 직접 가져가실 수 있습니다.
EKS는 인프라 접근 방식을 요구하지 않습니다.
사용자를 대신하여 노드 용량을 프로비저닝하기 위한 인프라 제공업체 API대신 하이브리드 노드를 사용하면 구축한 도구와 시스템을 재사용할 수 있습니다.
온프레미스에서 용량을 프로비저닝하세요.온프레미스 및 엣지 디바이스를 EKS에 연결할 수 있도록 하려면
클라우드의 컨트롤 플레인, EKS를 초기화하는 데 사용하는 도구를 조정했습니다.
다음과 같은 요구 사항을 충족할 수 있도록 Amazon Linux AMI를 최적화했습니다.
고객 관리 하드웨어에서 실행되는 노드를 EKS 컨트롤 플레인에 연결그 결과 탄생한 하이브리드 노드
nodeam이라는 CLI 유틸리티가 구성 요소를 설치합니다.
온프레미스 호스트가 쿠버네티스 노드로 실행되고 kubelet, 컨테이너 및 AWS IAM Authenticator를 비롯한 EKS 컨트롤 플레인에 연결하고 인증하는 데 필요합니다.nodeadm init 명령을 실행하면 설치된 아티팩트가 EKS 제어에 참여하도록 구성하여 노드를 부트스트랩합니다.
클라우드의 플레인.좋아요, 다시 돌아오기 전에 잠시 돌아가서 nodeam에 대해 좀 더 알아보도록 하겠습니다.
개요를 마치겠습니다.그러면 각각에서 nodeam을 실행할 수 있습니다.
설치를 간소화할 수 있는 온프레미스 호스트
구성, 등록, 업그레이드 및 제거
하이브리드 노드.noadam이 작동하도록 개선했습니다.
임의 인프라 및 일부 운영 체제를 사용합니다.그리고 이를 통합했습니다.
AWS Systems Manager와 AWS IAM Roles Anywhere를 사용하여 EKS 컨트롤 플레인인 쿠버네티스 클러스터에 대한 온프레미스 노드를 인증하는 프로세스를 간소화할 수 있습니다.
클라우드에서 실행.하이브리드 노드를 EKS 클러스터로 자동으로 초기화하려면 ISO, OVA 또는 호스트 시작 시 실행되도록 구성된 골든 운영 체제 이미지에 nodeadm을 포함하는 것이 좋습니다.
기타 이미지 형식.이제 개요로 돌아가서 클러스터에 가입하려면 EKS 하이브리드 노드가 다음과 같이 가정해야 합니다.
AWS 계정에 생성할 EKS 하이브리드 노드 IAM 역할.이는 EKS와 유사합니다.
현재 사용하고 있는 노드 IAM 역할입니다.EKS 하이브리드 노드용
이 역할을 맡으려면 AWS 시스템을 사용하여 임시 자격 증명을 받아야 합니다.
매니저 하이브리드 활성화 또는 AWS IAM 역할 애니웨어.Systems Manager는 더 간단한 솔루션이므로 일반적으로 하이브리드 노드 인증에 사용하는 것이 좋습니다.이미 가지고 있는 경우가 아니라면
프라이빗 키가 있는 퍼블릭 키 인프라
온프레미스에서 설정된 인증 기관 및 인증서 (이 경우 IAM 역할)
어디든 선택하는 것이 좋습니다.또한 일관성도 필요합니다.
온프레미스 또는 엣지에서의 프라이빗 연결
환경을 AWS 리전으로AWS Direct Connect, AWS 사이트 간 VPN 또는 고객 관리형 VPN 솔루션이 고객이 사용하는 가장 일반적인 기술이 될 것으로 예상됩니다.
이 연결을 설정하십시오.지속적으로 높은 경우 직접 연결이 선호되는 경우가 많습니다.
성능 지연이 필요합니다.하지만 AWS 사이트 간
VPN에는 다음 설치가 필요하지 않습니다.
물리적 네트워킹 하드웨어이므로 좋은 선택이 될 수 있습니다.
네트워크 일관성이 많이 필요하지 않은 배포에 적합한 비용 효율적인 선택입니다.그렇다면 AWS와 EKS 간에 책임을 어떻게 분담할 수 있을까요?
하이브리드 노드 고객?물론 AWS는 EKS 컨트롤 플레인, 자격 증명 및 옵저버빌리티 서비스, ECR 컨테이너 레지스트리를 포함하여 해당 지역에서 실행되는 AWS 서비스를 지속적으로 관리합니다.EKS 애드온의 일부
Amazon은 kube-proxy, CoreDNS, ADOT 및 CloudWatch를 비롯한 하이브리드 노드와 호환되도록 지원합니다.
옵저버빌리티 에이전트, 파드 아이덴티티 에이전트, CSI 스냅샷 컨트롤러.귀하는 다음 사항을 담당하게 됩니다.
온-프레미스를 포함하여 사용자 환경에서 온-프레미스로 실행되는 구성 요소 관리
스토리지 솔루션, 네트워킹 및 운영 체제
하이브리드 노드를 실행하는 장치.AWS는 다음과 같은 경우 실리움과 칼리코 CNI 드라이버의 통합을 지원합니다.
하이브리드 노드로 실행할 수 있습니다.또한 AWS는 하이브리드 노드를 통해 오버레이 네트워킹을 비롯한 해당 드라이버의 기본 기능을 지원합니다.
보더 게이트웨이 프로토콜 (BGP) 을 사용한 IP 주소 관리 및 동적 PodIP 광고.AWS는 일부 운영을 지원합니다.
하이브리드 노드가 있고 통합을 지원하는 시스템
이러한 운영 체제에 대해 설명하지만 운영 체제 관리, 패치 적용 및 유지 관리에 대한 책임은 사용자에게 있습니다.EKS 하이브리드 노드는 호환됩니다.
베어메탈용 우분투 및 RHEL과 함께 사용할 수 있으며
가상화 환경, 그리고 가상 환경에만 Amazon Linux 2023을 사용할 수 있습니다.이제 트래픽이 환경 전반으로 라우팅되는 방식을 살펴보겠습니다.
EKS 컨트롤 플레인과 온프레미스 노드 및 포드 사이.EKS를 구성하지 않고
하이브리드 노드용 클러스터를 사용하는 경우 컨트롤 플레인은 그렇지 않습니다.
실행 중인 노드와 PodIP 주소에 도달하는 방법을 알아두세요.
사용자 환경에서.이 점을 감안하기 위해 하이브리드를 만들 때
노드 지원 EKS 클러스터에서는 원격 노드 네트워크 CIDR 범위와 원격 포드 네트워크 CIDR 범위를 전달합니다.원격 노드 네트워크 CIDR은 kubectl exec에 사용됩니다.
로그 및 포트 포워딩, 원격 포드 네트워크 CIDR은 사용자가 제어하는 경우 사용된다.
플레인은 사용자 환경에서 실행 중인 웹훅에 도달해야 합니다.이러한 새 매개변수는 경고합니다.
트래픽을 전달하여 이러한 IP 주소에 도달할 수 있는 EKS 컨트롤 플레인
클러스터 VPC로.이러한 CIDR 범위는 가능하지 않습니다.
서로 겹치므로 서로 겹칠 수 없습니다.
클러스터 VPC CIDR 범위이며 서로 겹칠 수 없습니다.
EKS 서비스 CIDR과 함께현재 신상품만
EKS 클러스터는 이 리모컨을 처리할 수 있습니다.
네트워킹 구성.따라서 오늘날에는 새로운 것일 뿐입니다.
클러스터는 하이브리드 노드를 실행할 수 있지만, 활성화할 계획입니다.
기존 EKS 클러스터를 사용하여 향후 하이브리드 노드를 실행할 수 있습니다.따라서 트래픽은 사용자 측에서 라우팅됩니다.
엘라스틱 네트워크를 통해 VPC로 향하는 컨트롤 플레인
클러스터를 생성할 때 EKS가 서브넷에 생성하는 인터페이스 또는 ENI.이는 EKS가 컨트롤 플레인에서 클라우드로 전환하는 데 사용하는 것과 동일한 메커니즘입니다.
오늘날의 노드 통신.그리고 데이터가
데이터 센터와 환경에 적용하세요.
VPC에 저장한 후에는 규칙을 추가해야 합니다.
생성하려는 게이트웨이를 통해 전송되도록 설정된 노드 및 포드 CIDR로 전송되는 트래픽에 대한 VPC 라우팅 테이블 및
계정에 연결하세요.이는 일반적으로 다음 중 하나입니다.
더 적합한 가상 프라이빗 게이트웨이가 될 수 있습니다.
중소 규모 배포와 단순한 네트워크 유형 또는 일반적으로 크고 복잡한 네트워크에 권장되는 AWS 전송 게이트웨이에 적합합니다.따라서 데이터는 프라이빗 연결 (즉, Direct) 을 통해 게이트웨이 밖으로 흐릅니다.
사이트 간 VPN 연결 또는 사용자 환경에 연결하세요.방화벽 규칙
데이터 센터, 엣지 로케이션을 보호하려면 다음이 필요합니다.
EKS 제어 간의 양방향 통신
클라우드에서 실행되는 플레인과 온프레미스에서 실행되는 하이브리드 노드.또한 다음이 필요합니다.
하이브리드 노드 및 포드 CIDR의 온프레미스 라우팅 테이블에 전달 규칙을 추가하려면포드는 일시적이므로 해당 IP 주소는
상당히 자주 변경됩니다.따라서 다음과 같이 하는 것이 좋습니다.
다음을 만드는 경우 온프레미스 라우터에 PodIP 주소를 동적으로 광고합니다.
지원되는 BGP를 사용하여 포드를 라우팅할 수 있습니다.
실리움과 칼리코 모두.또한 이러한 ENI, 즉 EKS 클러스터 ENI 보안 그룹이 컨트롤 플레인 간의 양방향 통신을 허용하는지 확인해야 합니다.
그리고 온프레미스 환경도 마찬가지죠.어떻게 될지 정말 기대됩니다.
여러분 모두 EKS 하이브리드 노드를 사용하고 있으며, 여기서 가장 큰 가치를 창출할 수 있습니다.베타 고객 중 하나인 Darktrace는 교차 환경에 대해 강조했습니다.
솔루션이 제공하는 운영 일관성.다크트레이스는 AI 기반 솔루션을 제공합니다.
패턴을 학습하는 사이버 보안 플랫폼
각 고객별로 특정하여 강력한 위협을 제공합니다.
보호 및 대응.다크트레이스는 쿠버네티스를 사용합니다.
온프레미스에서 쿠버네티스를 활용하여 팀에 일관된 배포 환경을 제공합니다.
옵저버빌리티, 애플리케이션 스케일링 및 재해 복구를 위한 툴링.그리고 만드는 대신
크로스 사이트 클러스터 및 클러스터 관리
컨트롤 플레인 자체에서 Darktrace는 EKS 하이브리드 노드를 사용하여 쿠버네티스 관리를 EKS와 통합하여 확장성을 향상하기로 결정했습니다.
가용성 및 효율성.이제 몇 가지 EKS에 대해 살펴보겠습니다.
하이브리드 노드 모범 사례노드 부트스트랩을 자동화하려면 nodeam을 파일에 포함시키십시오.
골든 운영 체제 이미지 및 선택적으로 설정
호스트 시작 시 systemd 서비스로 실행합니다.컨트롤 플레인과 사용자 환경 간의 지연 시간을 제한하려면
가장 가까운 지역에 EKS 클러스터를 생성하세요.
하이브리드 위치, 데이터 센터 또는
엣지 로케이션으로.최상의 성능을 위해 당사는
초당 100메가비트의 최소 대역폭과 최대 왕복 전송을 권장합니다.
지연 시간은 200밀리초입니다.하지만 이러한 파라미터는
사용 사례, 하이브리드 노드 사용 방식에 따라 크게 달라집니다.또한 직접 네트워크 테스트를 수행하는 것이 좋습니다.이미지 크기 및 같은 요소
실행 중인 노드의 수는 지연 시간에 큰 영향을 미치므로 다음과 긴밀하게 협력하세요.
네트워킹 팀.다음으로, AWS 서비스를 활용하세요.
호환되는 EKS 애드온을 모니터링에 활용함으로써
로깅 및 ID 관리.그리고 제가 하지 못한 한 가지
nodeam에 대해 언급한 것은 레이블을 만든다는 것입니다.
각 하이브리드 노드에서컴퓨팅 타입은 하이브리드와 같습니다.하이브리드가 모두 포함된 혼합 모드 클러스터를 사용하는 경우 이 레이블을 사용하여 하이브리드 노드 내부 또는 외부의 워크로드를 대상으로 지정할 수 있습니다.
단일 클러스터의 노드와 클라우드 노드.마지막으로, 가장 중요한 것은
아마도 가장 중요한 것은, 얻는 과정 전반에 걸쳐서
하이브리드 노드로 시작하여 다음과 긴밀하게 협력하세요.
방화벽 규칙을 확인하기 위한 네트워킹 및 보안 팀
그리고 보안 그룹은 양방향을 허용합니다.
온프레미스 또는 엣지에서 필요한 커뮤니케이션
컨트롤 플레인을 위한 AWS 지역 내 로케이션
그리고 필요할 수도 있는 기타 AWS 서비스
하이브리드 노드와 통합.좋아요. 시작하기 전에 간단한 의사 결정 트리를 살펴보고 어떻게 결정할 수 있는지 알아보겠습니다.
어떤 EKS 하이브리드 솔루션이 요구 사항에 가장 잘 맞는지
사용 사례에 가장 적합합니다.그러니 스스로에게 물어보셔야 합니다.
몇 가지 질문이 있습니다.먼저, 제가 이미 가지고 있는게 맞나요?
온프레미스에서 실행되는 AWS Outposts를 고려하고 있습니까?
인프라 리프레시?이 질문에 대한 대답이 '예'라면 Outpost에서 EKS를 실행하는 것이 가장 좋은 결과를 얻을 수 있습니다.
클라우드에서 EKS 노드를 실행하는 일관된 경험과 AWS와의 가장 긴밀한 통합.대답이 '아니요'라면 스스로에게 물어보세요. 에어갭 환경이 필요한가요?에어갭 솔루션이 필요한가요?그렇지 않은 경우 EKS Hybrid Nodes는 컨트롤 플레인 관리에 대한 책임을 AWS로 오프로드하는 동시에 기존 하드웨어에서 계속 실행할 수 있도록 함으로써 최대한의 가치를 제공할 것입니다.에어갭 솔루션이 필요하다면 EKS Anywhere가 제격입니다.
당신을 위한 최고의 선택이 되세요.이제 나머지 부분을 통해 EKS에 대해 자세히 알아볼 수 있는 방법은 무엇입니까?
re:Invent와 그 이후는?먼저 가서 이것들에 참석하세요
쿠버네티스 트랙에 있는 다른 멋진 세션들.KUB402 수업에서는 배울 수 있습니다.
구축 및 배포를 위한 다양한 아키텍처에 대해
Amazon ECR 및 자동화를 사용하는 Amazon EKS의 워크로드KUB320 에서는 조직이 페타바이트 규모의 데이터를 구축하는 방법에 초점을 맞출 예정입니다.
EKS의 처리 파이프라인.그리고 KUB201 강의에서는 아마존의 이야기를 들을 수 있을 것입니다.
쿠버네티스 제품 리더십에 관한 최신 정보
Kubernetes로 플랫폼 및 애플리케이션을 더 빠르게 구축하기 위한 혁신과 전략.또한 하이브리드 및 엣지에 관한 세션에 참석하는 것이 좋습니다.
트랙 (예: HYB301).직접 참석할 수 없는 세션에 관심이 있다면 대부분의 세션에 대한 영상을 볼 수 있습니다.
며칠 내로 YouTube에서 시청할 수 있습니다.
진행 중인 세션, 특히 브레이크아웃 세션을 위한 세션입니다.re:Invent 이후에는 계속할 수 있습니다.
EKS 워크숍을 수강하고 EKS를 통해 배우는 여러분의 EKS 학습 여정
모범 사례 가이드.EKS를 한 번 살펴보세요.
하이브리드 노드 문서.팀에서 엄청난 노력을 기울였는데 정말 많은 것이 있습니다.
멋진 콘텐츠가 있어요.AWS re:Invent 세션에 대한 세션 자료를 검토할 수도 있습니다.
여기 QR 코드와 URL이 있습니다.이 세션의 슬라이드 덱 자료는 이 QR 코드와 GitHub URL에서 볼 수 있습니다.잠시만 시간을 내주세요.
원하시면 사진을 찍으세요.좋아요, 정말 고마워요
세션에 참석해 주셔서 감사합니다.많은 것을 얻었으면 좋겠어요. 한두 가지를 배웠으면 좋겠어요.온프레미스 인프라를 현대화하는 여정을 계속하면서 주저하지 말고 다음 사항을 참고하시기 바랍니다.
저나 Gokul에게 연락해 주세요.이메일 주소는 다음과 같습니다.
여기 화면 위에 있어요.그리고 저희도 독려합니다.
에서 세션 설문조사를 완료해 주세요.
모바일 애플리케이션.우리가 어떻게 지내고 있고 어떻게 더 잘할 수 있는지 알 수 있게 해줍니다.
향후 세션에서도 말이죠.