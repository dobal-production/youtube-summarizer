- 좋아요, 모두들 환영합니다.화요일 오후인 거 알아요. 세션에는 선택의 폭이 넓어요.우선, 감사합니다.
이 세션에 와요이스터 에그를 조금 준비해 두셨던 분들을 위해
카탈로그를 보고 있다가 제목을 눈치채셨을 겁니다.
우리 세션이 바뀌었어.그래서 카펜터에 가입하면 카펜터 혜택도 받을 수 있습니다.제 이름은 라지예요.저는 AWS에서 컨테이너 및 서버리스 분야의 수석 솔루션 아키텍트로 일하고 있습니다.저는 AWS에서 6년간 근무하면서 많은 사람들을 도왔습니다.
고객은 쿠버네티스 및 서버리스로 마이그레이션합니다.오늘은 공동 발표를 해보겠습니다.
쉬탈 조시와 함께. - 안녕하세요, 저는 쉬탈 조시예요.저는 뉴욕의 수석 SA입니다.
AWS의 컨테이너는 주로 EKS 및 Kubernetes 고객과 협력하고 있는데 정말 기대가 됩니다.
오늘 이 자리에서 Raj와 공동 발표를 했습니다. - 훌륭합니다.
- 됐어요. - 시작해 볼게요.자, 오늘은 고객이 Amazon EKS를 어떻게 채택하는지에 대해 이야기해 보겠습니다.그리고 물론 이 세션은 카펜터와 EKS 오토 모드 세션입니다.그럼 고객이 애플리케이션을 확장하는 방법에 대해 알아보겠습니다.그리고 나서, 우리는
몇 가지 과제와 해결 방법에 대해 이야기해 보세요.
카펜터 및 그 외 분야와 함께요.그리고 결국에는 우리도
더 자세히 알아보실 수 있도록 몇 가지 자료를 공유해 드리겠습니다.그래서 6년 전으로 거슬러 올라가면 Amazon EKS를 출시했습니다.쿠버네티스는 정말 대단합니다.에서 일해본 적이 있어요.
Kubernetes는 오랫동안 사용되어 왔지만 고객이 직접 제어를 관리한다고 하더군요.
계획은 어렵습니다.이것이 바로 아마존 EKS가 탄생한 이유입니다.따라서 EKS는 안정적이고
쿠버네티스를 안전하게 실행할 수 있는 방법이며 완전히 업스트림 및 인증된 호환 쿠버네티스를 실행합니다.좋아요, 그럼 이 시점에서는
당신은 EKS가 좋은 것 같아요.EKS부터 시작하고 싶어요.그럼 오늘은 어떻게 할 수 있을까요?먼저 클러스터를 만들고 그 역할을 하는 것은 확장 가능하고 가용성이 높으며 안전한 AWS 계정에 제어 계획을 생성하는 것입니다.다음으로, 워크로드를 배포하고 싶지만 그렇게 빠르지는 않을 것입니다.워크로드를 배포하기 전에 먼저 일부 워크로드도 설치해야 합니다.
애드온과 컨트롤러 맞죠?따라서 일반적으로 다음과 같이 제작합니다.
관리형 노드 그룹, 두 개 이상의 EC2 인스턴스, 그리고 인그레스 컨트롤러와 같은 애드온을 설치합니다.
또는 스토리지 컨트롤러와 일부 다른 컨트롤러.자, 이제 애드온과 컨트롤러를 모두 설치한 다음 애플리케이션을 배포했습니다.따라서 관리형 노드를 하나 만드세요.
그룹을 만든 다음 배포하면 포드가 거기에 배포됩니다.물론 이것은 스케일링 세션이므로 오토스케일링에 대해 이야기해야 합니다.그래서, 우리는 마치, 그거 알아?저희가 만든 이 앱은 잘 되고 있어요.이 시점에서 설치하시면 됩니다.
클러스터 오토스케일러와 포드 스케일링 같은 것
여러 인스턴스에 걸쳐.클러스터 오토스케일러는 훌륭하지만 클러스터 오토스케일러는
몇 가지 문제가 있습니다.클러스터 오토스케일러를 사용하면 관리형 또는 자체 관리형 노드 그룹을 만들어야 합니다.그리고 이러한 노드 그룹에서 사용할 인스턴스 패밀리를 지정해야 합니다.
우선 순위도 마찬가지입니다.또한 클러스터 오토스케일러를 사용하면 오토스케일링 그룹을 생성해야 합니다.이제 오토스케일링 그룹이 생겼습니다. 오토스케일링 그룹은 훌륭하지만 몇 가지 문제가 있습니다.따라서 각 노드 그룹마다 별도의 오토스케일링 그룹이 있어야 합니다.워크로드를 전체에 분산시키려는 경우
가용 영역을 여러 개 만들려면 가용 영역을 여러 개 만들어야 합니다.
오토스케일링 그룹 등마지막으로 AMI 선택입니다.
그리고 새로 고침은 번거롭습니다.프로덕션 환경에서 클러스터 오토스케일러를 실행하는 사용자는 다음을 수행해야 한다는 것을 알고 계실 것입니다.
AMI가 변경될 때마다 시작 템플릿을 관리할 수 있습니다.
가서 변경하고 재활용 명령을 실행해야 합니다.그래서 우리는 카펜터를 만들었습니다.그럼 카펜터는 어떻게 작동할까요?먼저, 포드는 다음을 사용하여 크기를 조절합니다.
수평형 포드 오토스케일러.그러면 포드가 보류 상태가 되고 클러스터 오토스케일러가 실행됩니다.
클러스터 오토스케일러 오토스케일러 오토스케일링 그룹이 있지만, Karpenter는 이 모든 그룹을 우회하여 EC2 플릿과 직접 상호작용합니다.모든 홉을 우회하기 때문입니다.카펜터가 더 빠릅니다.또한 카펜터를 만들 때 쿠버네티스 고유의 쿠버네티스로 만들고 싶었죠.
애호가 여러분, 우리는 YAML을 좋아합니다.따라서 두 개의 YAML 파일인 노드풀과 EC2NodeClass를 사용하여 카펜터의 동작을 제어할 수 있습니다.자, 이제 프로세스로 돌아가 보겠습니다.따라서 클러스터 오토스케일러 대신 Karpenter 애드온을 설치해야 합니다.좋아, 그럼 애플리케이션 스케일링.이제 그럴 필요가 없습니다.
관리되는 노드 그룹이 하나라도 있어야 합니다.인스턴스가 더 빠르게 올라오고 있고, 상황이 좋습니다.스케일링이 중요하긴 하지만
카펜터의 빵과 버터.카펜터는 스케일링 이상의 기능을 합니다.카펜터는 비용이 많이 듭니다.
최적화는 바로 사용 가능합니다.Karpenter는 머신 러닝을 비롯한 다양한 워크로드를 지원합니다.
그리고 제너레이티브 AI.그리고 카펜터도 도움이 됩니다.
업그레이드 및 패치 포함.이러한 이유로 Karpenter는 토탈 데이터 플랜 구현입니다.카펜터는 AWS에서 애정을 담아 만들었지만, 저희는 AWS에 기부했습니다.
오픈 소스 커뮤니티이며 현재 SIG 오토스케일링 적용 중인 CNC 프로젝트 중 하나입니다.그리고 우리는 이를 매우 자랑스럽게 생각합니다.
Karpenter가 어떻게 성장하고 있으며 여러분과 같은 고객이 Karpenter에 어떻게 기여하고 있는지 확인해 보십시오.자, 그럼 여기서부터 시작하겠습니다.자, 라즈, 카펜터는 훌륭해요. 이걸 어떻게 시작하죠?자, 이제 여정이 시작됩니다.
저희 고객들은 이런 점을 좋아합니다.먼저, 평가해 보세요
Karpenter의 기능을 구현한 다음 2일차 작업을 수행하고 마지막으로
약간의 진화가 있었습니다.이 강연 내내 우리는 같은 과정을 따를 것입니다.좋아요, 그럼 시작해 볼까요?
평가 단계부터.컨테이너를 실행하려면
CPU, 메모리, 스토리지 등 다양한 요소가 필요합니다.그리고 어떻게 매핑되나요?
다양한 EC2 인스턴스가 있나요?다양한 EC2가 있습니다.
당사에서 제공하는 인스턴스.크기가 클수록
CPU가 커질수록 인스턴스 패밀리가
CPU 대 메모리 비율을 결정합니다.또한 많은 유연성을 제공합니다.저희는 800가지가 넘는 다양한 제품을 보유하고 있습니다.
선택할 수 있는 인스턴스 유형 (예: P4d와 같은 GPU 또는 최신 세대)
INF2 또는 TRN과 같은 커스텀 실리콘 인스턴스따라서 첫 번째 질문은 어떤 EC2를 어떻게 제어할 수 있는가입니다.
카펜터가 스핀업되나요?우리 얘기 나눈 거 기억나?
노드 풀 YAML에 대해?이것이 샘플 노드 풀 YAML입니다.이 노드 풀 YAML을 사용하여 Karpenter의 동작 방식을 제어할 수 있습니다.예를 들어 맨 위에서 말씀드린 것처럼 인스턴스 패밀리는
c5, m5, r5 내에 있어야 합니다.여기서 조금 보여드릴게요. in 연산자를 사용할 수 있을 뿐만 아니라 not in도 사용할 수 있습니다.그럼 넌 괜찮아, 이렇게 말하는구나
이러한 인스턴스 유형을 사용하되 아무 것도 스핀업하지 마세요.
나노, 마이크로, 소형, 중형 등 무엇이든 상관 없습니다.
워크로드에 따라 다릅니다.그리고 800개 중에서 선택하기가 쉽지 않다는 것도 잘 알고 있습니다.
다양한 인스턴스 유형.이 모든 필드는 다음과 같습니다. 만약
라고 생각해요, 라즈, 멋지긴 한데 정말 많아요.따라서 이 모든 것을 비워 두면 AWS에서 배포에 따라 적절한 인스턴스 유형을 자동으로 선택합니다.
포드 리소스 요청.그리고 우리는 항상 이런 것들을 가지고 있습니다.
저와 같은 교활한 SRE 팀이나 저처럼 교활한 앱 개발자들 말이에요.정말 많은 것이 필요한 것 같아요.
CPU와 메모리가 많기 때문에 EC2 인스턴스의 수를 제한할 수도 있습니다.
노드 풀이 프로비전할 수 있습니다.아래쪽에 보시면 다음과 같은 내용이 있습니다.
CPU 한도는 100개입니다.따라서 이 노드 풀은 그대로 유지됩니다.
총 금액까지 EC2 인스턴스를 프로비저닝할 때
CPU의 양은 100개입니다.그냥 CPU를 보여드릴 뿐인데
이것은 메모리에서도 작동합니다.사물을 제어할 수도 있습니다.
가용 영역 처럼요.예를 들어, 이봐, 스플릿이라고 말할 수 있죠.
미국 2a, 2b 또는 특정 AZ 내에서 말이죠.오토스케일링 그룹과 달리, 이를 위해 다른 노드 풀을 생성할 필요가 없습니다.또한 제어할 수 있습니다.
아키텍처 유형에서는 워크로드에 따라 Graviton과 같은 x86 또는 Arm을 사용할 수 있습니다.마지막으로, 많은 분들이
스팟 인스턴스에서 믹스하고 싶어요.하단에는 해당 용량 유형이 나와 있습니다.
필요에 따라 쉼표를 찾아보세요.스팟과 온디맨드를 모두 지정하면 Karpenter는 항상 스팟의 우선 순위를 지정하지만 스팟 용량이 적을 때를 알 수 있을 정도로 지능적이므로 자동으로 대체하여 온디맨드 인스턴스를 생성합니다.우리 모두 알고 있습니다. 솔루션스 아키텍트 어소시에이트 (Solutions Architect Associate) 를 맡긴 경험이 있는
자격증 시험에는 항상 문제가 따르기 마련입니다. 한 가지 필요한 것은 무엇일까요?
스팟을 염두에 두고 싶으신가요?그냥 사라져버릴 수도 있어요
2분 경고, 맞죠?2분 짜리 경고는 카펜터가 처리하므로 굳이 그럴 필요가 없습니다.
무엇이든 직접 해보세요.백업이 가동될 거예요
스팟 인스턴스가 자동으로 생성되고 차단과 드레인이 완료됩니다.
인스턴스를 종료하고 롤링 디플로이먼트 방식으로 포드를 이동합니다.노드 종료 핸들러를 설치 및 관리할 필요가 없습니다.스팟 인터럽션 핸들러가 내장되어 있습니다.자, 그럼 이제 실제 제작물을 사용해 보신 분들을 위해 말씀드리자면
쿠버네티스의 워크로드 또한 다음이 필요합니다.
스케줄링 제약.카펜터를 사용하면 다음을 사용할 수 있습니다.
노드 셀렉터, 노드 어피니티, 테인트 및 톨러레이션, 토폴로지 스프레드와 같은 다양한 스케줄링 제약.물론 이 방법도 사용됩니다.
프로젝트에 많이 포함되어 있습니다.그럼 좀 더 자세히 살펴보죠.자, 왼쪽을 예로 들어보죠.
노드 풀을 보여주고 있는데 이 노드 풀이 가동됩니다.
용량 유형의 스팟 인스턴스와 아키텍처 유형 AMD64 중 어느 경우이든
노드 풀 규정, Karpenter는 첨부할 것입니다
이러한 모든 키 값 쌍은 노드에 레이블로 사용됩니다.예를 들어, 카펜터는
용량 유형, 콜론 스팟, 쿠버네티스.io를 넣을 것입니다.
슬래시 아키텍처, 콜론, AMD64 등그게 무슨 뜻인가요?오른쪽은 샘플을 보여드릴게요.
포드 스펙 파일에서는 이러한 키 값 쌍을 사용하여 특정 인스턴스에서 포드를 스케줄링할 수 있습니다.따라서 이 경우 EC2가 이미 실행 중이었다면 이를 배포하면 해당 포드가 해당 위치에 스케줄링됩니다.실행 중인 EC2가 없는 경우 Karpenter는 일정 요구 사항을 충족하기 위해 스팟 인스턴스를 가동합니다.카펜터도 연결할 예정입니다.
노드에 잘 알려진 라벨이 붙어 있습니다.특별한 작업을 수행할 필요는 없습니다.영역, 인스턴스 유형, 운영 체제 등을 예로 들 수 있습니다.따라서 포드 사양에서 이 모든 필드를 사용할 수 있습니다.
스케줄링을 위한 파일.그래, 그런 사람들에게 물어볼 수도 있겠지만,
좋은 시작이죠. 사용자 정의 라벨은 어떨까요?카펜터도 이를 지원합니다.왼쪽의 이 예제에서는 사용 방법을 보여드리겠습니다.
노드 풀의 사용자 정의 어노테이션, 테인트, 라벨.그리고 오른쪽은
라벨, 테인트, 주석을 재사용할 수 있습니다.
포드 스케줄을 지정하기 위해서요.이건 정말, 아주 인기가 많아요
다양한 용도에 맞게 부품을 스케줄링할 수 있는 방법이죠?다른 노드를 사용할 수 있습니다.
서로 다른 레이블을 가진 풀과 다른 팀이 다음을 수행할 수 있습니다.
이러한 다양한 레이블을 사용하여 워크로드를 스케줄링하세요.그러면 좋은 질문이 떠오릅니다.얼마나 많은 다른 노드가 있나요?
풀을 정의해야 할까요?글쎄요, 다양한 옵션이 있습니다.가장 쉬운 방법은 단일 노드 풀입니다.그래서 모든 것을 집어넣는 거죠.
단일 노드 풀 YAML을 만들고 각 팀은 필요한 것이 무엇이든 해당 필드를 사용하여 해당 포드를 지정하고 일정을 잡습니다.가장 인기 있는 것은
제 고객들은 여러 개의 노드 풀을 볼 수 있는데, 각 팀마다 고유한 노드 풀을 가지고 있습니다.
별도의 노드 풀을 소유하고 있습니다.가장 큰 이유 중 하나는 아마도 한 팀이 운영되고 있을 수도 있기 때문입니다.
비싼 GPU EC2, 그리고 제한 필드를 기억하세요
해당 노드 풀의 경우 특정 노드로 제한할 수 있습니다.
CPU 또는 메모리의 양.시끄러운 이웃이 있을 수 있습니다. 다른 이웃보다 더 많은 CPU와 메모리가 필요합니다.서로 다른 유형의 인스턴스가 필요합니다.따라서 팀을 분리할 수 있습니다.
별도의 노드 풀 사용.또 다른 고급 전략
우선 순위를 지정할 수 있는 가중치 기반 노드 풀입니다.
하나의 노드 풀이 다른 노드 풀보다 우선합니다.언제 사용할 예정인가요?우선순위를 정하고 싶다면
예약 인스턴스 또는 저축 플랜을 미리 계획하세요
다른 인스턴스 유형보다.이 부분은 확실해요
좀 헷갈리네요.예를 하나 들어보죠.이 예제에서 저는
두 개의 노드 풀을 보여줍니다.맨 위에는
하단에 가중치가 60이고 인스턴스 유형이 c와 r인 것을 볼 수 있습니다. 저는 다음과 같이 가정하겠습니다.
이 두 인스턴스 유형에 대한 예약 인스턴스 계약입니다.따라서 포드가 보류 상태가 되면 첫 번째 노드 풀을 사용하고 한도에 도달할 때까지 인스턴스를 계속 가동합니다. 그렇죠?다음과 같이 가정해 봅시다.
특정 수의 EC2에 대한 예약 인스턴스 계약.따라서 CPU 또는 메모리가 천 개에 도달한 다음 다른 노드에 도달할 때까지 EC2 인스턴스를 계속 가동할 것입니다.
풀이 그 역할을 대신할 것입니다.죄송합니다. 다시 가볼게요.그러면 다른 노드 풀이 그 자리를 이어받아 계속해서 다른 인스턴스 유형을 프로비저닝하게 됩니다.좋아요, Karpenter가 최적화를 할 수 있다고 말씀드린 것 기억하세요.
비용은 바로 사용할 수 있습니다.자, 이 시점에서 클러스터는
카펜터와 함께 실행되고 있습니다.적절한 인스턴스 유형이 선택되지만 시간이 지남에 따라 클러스터가 선택될 수 있습니다.
결국 이렇게 보일 것입니다.워커 노드의 경우 빠른 워커 노드는 활용도가 좋고 빈팩이 많지만 마지막 세 개는 그다지 많지 않습니다.Karpenter를 사용하면 비어 있거나 활용도가 낮은 경우 통합 정책을 지정할 수 있습니다. 그러면 Karpenter가 자동으로 통합 정책을 지정합니다.
포드를 빈 패킹하고 불필요한 인스턴스를 종료하여 많은 비용을 절약할 수 있습니다.하지만 한 가지 피드백이 있습니다.
고객으로부터 받은 것은 이 제품이 훌륭하다는 것입니다. 하지만 Karpenter는
이 시뮬레이션과 통합을 실행합니다.
10초 정도마다 말이죠.따라서 노드가 많을 수 있습니다.
올라오고 내려오고 있어요.그런 이유로 우리는
이 동작을 제어할 수 있는 또 다른 노브를 도입했습니다.이 기능은 카펜터 버전 1에 포함되어 있습니다.필드는 이후에 통합됩니다.아래쪽을 보시면 한 시간 후에 통합된 것으로 표시되죠.따라서 EC2를 사용하더라도
이와 같은 인스턴스는 한 시간 더 기다려야 합니다.
워크로드를 가장 잘 알고 있기 때문에 통합되기 전에새로 알게 된 것이 있다면
5분 후에 워크로드가 들어올 거예요그래서 당신은 Karpenter에게 이 EC2 인스턴스를 건드리지 말고 아직 통합하지 말라고 말하고 있는 것입니다.잠시만 기다려 보겠습니다.한 시간이 지나도 새 포드가 추가되거나 제거되지 않는다고 가정해 보겠습니다. 그 후에야 Karpenter가 사용하지 않는 인스턴스를 통합하고 종료합니다.Karpenter는 기존 인스턴스에 통합할 수 있을 뿐만 아니라 기존 인스턴스로도 통합할 수 있습니다.
그리고 적절한 크기의 인스턴스.따라서 이 경우에는
두 번째와 세 번째 인스턴스인 m5.xlarge는 빈팩을 하더라도
하나의 m5.xlarge에 두 개의 포드가 있지만 여전히 비효율적입니다.카펜터는 충분히 똑똑합니다. 이 경우에는
m5.xlarge를 둘 다 종료하고 m5.large를 스핀업하세요.
따라서 인스턴스 크기를 절반으로 줄이고 비용을 크게 절감할 수 있습니다.이 모든 것이 바로 가능합니다.이제 한 가지 질문이 생겼습니다.
라즈 씨, 훌륭하네요. 하지만 중요한 워크로드가 한낮에 실행되고 있다는 것을 알고 계실 겁니다. 저는 Karpenter가 이 모든 EC2 인스턴스를 방해하는 것을 원하지 않습니다.이러한 이유로 우리는
카펜터 버전 1과 함께 혁신 예산을 공개했습니다.이 중단 예산을 사용하여 이러한 중단의 행동을 구체적으로 통제할 수 있습니다.그럼 이제 이 내용을 살펴보죠.이 YAML에서는 이것이 노드 풀 YAML의 일부입니다. 첫 번째 블록은 노드 0이라고 되어 있습니다.즉, 월요일 일정 중에 노드 0개가 중단될 수 있습니다.
총 8시간 동안 금요일 9시부터 금요일까지그 이유 때문에 9시에서 5시 사이가 표류하고 활용도가 낮았죠.그러니까 카펜터가 할 수 있다고 해도
해당 노드를 통합하면 월요일에는 영향을 미치지 않을 것입니다.
근무시간은 금요일까지빈 공간이 있으면 어떡하죠?넌 마치, 빈 노드 같아. 난 상관없어. 아무 것도 방해할 수 없잖아.그러니까 그 중 100퍼센트는
노드가 중단될 수 있습니다.그게 맞든 상관 없어요.
근무 시간이든 주말이든마지막으로 말씀드리자면, 해당 근무 시간 외에는 노드의 10% 가 운영 중단으로 인해 이동이 중단되거나 활용되지 않을 수 있습니다.이 모든 것이 누적된다는 점을 기억하세요.이 모든 것을 종합하면 노드의 0% 가 근무 시간 중에 중단될 수 있다는 뜻입니다.그 중 백 퍼센트는
노드가 비어 있을 때 (근무 시간 중에도) 노드가 중단될 수 있으며, 외부 노드의 경우 노드가 중단될 수 있습니다.
이러한 이유로 인해 근무 시간이 크게 줄었습니다.
그리고 활용도가 낮아 노드 중 10% 만이 가능했습니다.
한 번에 중단될 수 있습니다.그래서 드리프트에 대해 얘기했어요.드리프트란 무엇일까요?따라서 카펜터는 쿠버네티스 네이티브이며, 쿠버네티스의 핵심 원칙은 원하는 상태와 현재 상태를 조정하는 것입니다.그리고 카펜터도 다르지 않습니다.이 경우 노드 풀에 다음이 있다고 가정해 보겠습니다.
예약 인스턴스 계약입니다. m5.large를 사용하고 있습니다.그래서 이런 모든 EC2는
스핀업된 노드 풀은 m5.large입니다.가서 이 m5.large를 c5.large로 변경한다고 가정해 봅시다.그래서 이 경우에는 원하는 것이
노드 풀의 구성은 실행 중인 인스턴스 (m5.large) 와 다를 수 있습니다.따라서 카펜터는 실행 중인 m5.large를 자동으로 차단하고 배수시킵니다.
c5.large 인스턴스를 스핀업하고 포드 위로 이동하세요.좋아요, 그럼 이 시점에서
NodePool에 대해 배웠습니다.NodePool은 인스턴스 패밀리, 가용 영역,
예산, 그 모든 것.하지만 AMI 서브넷 보안 그룹은 어떨까요?이것이 바로 EC2NodeClass가 하는 일입니다.따라서 예를 들어 EC2를 시작할 수 있는 서브넷을 선택할 수 있습니다.특정 항목을 연결할 수 있습니다.
EC2의 보안 그룹 (이 경우 이름은 내 보안 그룹) 입니다.EC2용 AMI를 선택할 수 있고 다른 AMI를 선택할 수 있습니다.
사용자 데이터, 태그 연결, EBS 정의 등따라서 AMI가 중요합니다.그럼 한 번 살펴보죠.따라서 AMI 셀렉터를 사용할 수 있습니다.
다양한 AMI 중에서 선택할 수 있습니다.아마존은 EKS를 제공합니다.
AMI를 바로 사용할 수 있습니다.따라서 EC2NodeClass에서는 늦어도 보틀 로켓의 별칭과 같은 것을 사용할 수 있습니다.따라서 이 카펜터가 제공하는 모든 EC2는 EKS가 최적화된 상태로 실행됩니다.
최신 버전의 AMI 또는 보틀 로켓.마찬가지로 또 다른 예도 있습니다.
아마 늦어도 아마존 리눅스 2가 될 수도 있겠네요.지원되는 제품군 값
별칭으로는 al2, al2023, 보틀 로켓, 윈도우가 있습니다.
2019년과 윈도우 2022.최신 버전이 좋다고 할 수도 있겠지만 작업 노드를 특정 버전에 고정하고 새 버전을 테스트하고 싶다면 최신 버전만 사용하면 어떨까요?여러분도 그렇게 할 수 있습니다.따라서 Karpenter V1의 일부로 작업 노드를 다음과 같은 특정 AMI 버전에 고정할 수 있습니다.그래서 여기서는 v1.20.5 속도의 별칭 보틀 로켓이라고 하겠습니다.그래서 이 모든 EC2들은
노드 클래스는 이 버전의 보틀 로켓이 제공될 것입니다.마찬가지로 아마존 리눅스 2도 마찬가지입니다.
2024 버전에서는 7월 29일에 출시되었습니다.커스텀 AMI는 어떨까요?카펜터는 커스텀 AMI도 지원합니다.많은 고객이 커스텀 AMI를 사용합니다.태그, 이름, 소유자, ID를 사용하여 사용자 지정 AMI를 선택할 수 있습니다.AMI가 여러 개 있는 경우
이러한 조건을 만족하면 Karpenter는 최신 버전을 사용합니다.AMI가 발견되지 않으면 노드가 프로비저닝되지 않겠죠?그래서 이 부분이 좀 무섭네요.그렇게 하고 싶지는 않지만 피하고 싶을 것입니다. 일단 EC2NodeClass를 배포하고 나면 상태를 확인할 수 있습니다.
이 AMI 필드의 필드를 입력하면 다음과 같은 사항이 표시됩니다.
모든 AMI를 선택하는 것이 조건입니다.알겠어요?따라서 이 주제를 계속 따랐다면 AWS는 고객에 집착하는 것입니다.그래서 저희는 무난한 상태에서 출발했습니다.
제어 계획을 고객이 직접 관리합니다.그래서 우리는 EKS를 만들었고, EKS는 좋은데 어떻게 하면 여러분의 삶을 더 좋게 만들 수 있을까 하는 생각이 들었습니다.좋아요, 그래서 카펜터를 만들었죠.자, 그럼 카펜터 이후는 어떨까요?그 얘기 좀 하기 위해 제 친구를 초대할게요
공동 발표자 쉬탈이 무대에 섰어요. - 고마워요, 라즈.카펜터에 대해 깊이 파고들 수 있었던 시간이었고 정말 멋진 모습을 볼 수 있었습니다.
실제로 통합과 최적화가 어떻게 이루어졌는지 알고 계신 분들은
작업, 정말 멋졌어요.그래서 일을 많이 하시는군요
고객이 많죠?카펜터는 없고 카펜터는 없어요.그렇다면 실제로 운영 중인 고객으로부터 들은 문제점으로는 어떤 것들이 있을까요?
카펜터 아니면 클러스터 오토스케일러?- 네, 제가 들은 한 가지 문제는, 라즈 카펜터 (Raj Karpenter) 도 훌륭하지만 YAML 파일에 필드가 너무 많다는 거예요. 어떻게 해야 하나요?
그 필드들을 고르세요, 그렇죠?예를 들어, EC2 인스턴스를 만들려면 무엇을 선택해야 할까요?
최적화되고 크기가 적절한가요?마찬가지로, 쉬탈, 당신도
많은 고객과 함께 일하는데 어떤 어려움을 겪고 계신가요?
대화에서 보이시나요?- 음, 이 애플리케이션들은
외로운 늑대는 아니죠?그래서 그들은 실제로 의존하고 있어요.
우리가 애드온이라고 부르는 것과 같은 핵심 클러스터 기능.부품 네트워킹인지 여부
또는 서비스 검색 또는 로드 밸런싱 기능.이와 함께 다음 중 어떤 것도
고객이 비즈니스를 수행하는 데 꼭 필요한 사용자 정의 애드온
아시다시피 요구 사항, 그리고 가장 중요한 것은 여기의 마지막 항목입니다.
클러스터를 업그레이드하고 Kubernetes 클러스터를 안전하게 유지하는 것이 가장 크고 가장 큰 일입니다.
제 생각에는 실제로 이런 분들 대부분이 당면한 과제일 것 같아요.
이 세션에 참석하는 거 맞죠?실제로 필요한 것은
헌신적인 전문 지식과 지속적인 시간 투자는 고객이 진정으로 찾고 있는 혁신의 속도를 늦춥니다.정말 대단한 일이죠.이미 생각하고 계신 분들도 있을 것 같은데요.
라즈 (Raj가 목수) 의 모든 세부 사항에 대해 이야기했고 방금 이야기한 문제들을 해결하는 것 같지만, 카펜터 이외의 과제는 무엇이라고 생각하세요, 라즈 씨?- 네, 애드온, 컨트롤러 등을 실행할 수 있는 모범 사례 권장 사항이 있으면 좋을 것 같아요.
마치 빌트인 것 같아요.넌 어때, 쉬탈?- 네, 제 생각엔 이런 것 같아요.
애드온과 해당 버전의 관리, 컨트롤러의 수명 주기 또한 큰 도전이죠?Karpenter는 이 문제를 해결하지 못했습니다.
이러한 요구 사항은 하나도 없고 그 자체로도 컨트롤러입니다.따라서 모든 모범 사례를 바탕으로 Karpenter를 관리하는 것은 고객에게 큰 도전이며, 다시 한 번 말씀드리지만, 다시 한 번 말씀드리지만,
이미 말씀하셨지만, 사용 편의성은 물론이고
바로 사용할 수 있는 기능인데 어떻게 하면 빨리 시작할 수 있을까요?이것이 고객이 항상 묻는 주요 질문 중 하나라고 생각합니다. - 좋아요.당신 같네요
이에 대한 답이 있고 소매에 뭔가가 있으니 무대에 올려 놓을게요. - 정말 고마워요, 라즈.그럼 더 이상 할 일 없이 소개해 드릴게요
아마존 EKS 자동 모드.그럼 이게 뭐죠?Amazon EKS Auto Mode는 뉴스, AWS 뉴스, 블로그 게시물을 팔로우하고 계신다면 어디에나 있는 것 같아요.엄밀히 따지자면, 아마존 EKS는
모드를 사용하면 쿠버네티스 클러스터를 간소화할 수 있습니다.
인프라 관리.이제 20분 동안 EKS 자동 모드가 실제로 무엇이고 어떻게 단순화되는지 자세히 살펴보겠습니다.
쿠버네티스 클러스터에 애플리케이션 배포.따라서 첫 번째로,
Amazon EKS 자동 모드를 사용하면, 일종의 효과를 볼 수 있습니다.
클러스터 작업을 AWS로 오프로드하여 민첩성이 향상되고 혁신이 가속화되었습니다.어떻게 해야 할까요?의 도입과 함께
Amazon EKS 자동 모드인 EKS는 공동 책임 모델에 따라 우리가 항상 관리해왔던 쿠버네티스 컨트롤 플레인을 넘어 쿠버네티스 데이터 플레인까지 더 많은 책임을 맡게 되었습니다.다음으로 말씀드리자면, 동적 확장을 통해 기본적으로 성능을 개선하고 애플리케이션 가용성을 유지합니다.
애플리케이션이 의존하는 컴퓨팅 리소스.그리고 이와 함께
기본적으로 안전합니다.그렇다면 기본적으로 보안이란 무엇을 의미할까요?EKS 자동 모드는 작업자 메모를 자동으로 업데이트하고 작업자 메모도 적용합니다.
보안 수정 사항이 자동으로 수정됩니다.마지막으로, 이건
자동 용량을 통해 비용을 지속적으로 최적화합니다.
계획 및 동적 규모 조정.그럼 어떻게 할 수 있을까요?여기 보시는 것처럼
클러스터를 생성해도 여전히 동일한 API입니다.
변함이 없습니다. 여전히 Amazon EKS이고 클러스터를 생성하면 프로덕션에 바로 사용할 수 있는 클러스터에 기본적으로 필요한 모든 핵심 기능이 포함됩니다. 그렇죠?따라서 클러스터를 생성하면 관리형 컨트롤 플레인, API 서버 및 HCD 인스턴스가 생깁니다.이와 함께 이 모든 것들이
핵심 기능이 함께 포함되어 있습니다.그리고 그 다음에는
애플리케이션을 배포하면 자동으로 프로비전됩니다.
클러스터 인프라.그럼 어떻게 되는 거죠?Amazon EKS 자동 모드는 카펜터의 원칙을 기반으로 구축되었습니다.따라서 애플리케이션을 계속 감시하고 애플리케이션을 배포하면 노드를 시작합니다.
내에 지정된 요구 사항을 살펴보겠습니다.
애플리케이션 매니페스트는 애플리케이션 규모 변화에 따라 리소스가 동적으로 확장되며 지속적으로 비용을 최적화합니다.보시다시피, 모든
Raj가 말한 최적화 원칙과 통합 원칙은 여기에도 여전히 적용됩니다.마지막으로 말씀드리자면
메모와 코어 클러스터 기능을 자동으로 업데이트합니다.몇 초 전에 Raj가 이야기했던 이 슬라이드로 돌아가 보겠습니다.자, 그럼 어떻게 배포하셨나요?
오늘 이전의 애플리케이션은?그렇죠?저기 보시는 것처럼
여러 단계가 필요합니다.첫 번째 단계는 컨트롤 플레인을 프로비저닝하고 컴퓨팅을 프로비저닝한 다음 추가 기능을 설치하는 것입니다. 그렇죠?그리고 클러스터를 모니터링합니다.
리소스 사용량을 확인한 다음 수동으로 최적화하고 업데이트합니다.그리고 오늘부터 EKS 자동 모드를 통해 애플리케이션을 배포할 수 있습니다.
이 모든 단계가 훨씬 더 간단해집니다.
획기적으로 줄어들었죠.먼저 클러스터를 생성하고 컨트롤 플레인을 프로비저닝한 다음 여기에서 볼 수 있듯이 EKS Auto Mode를 실행하면 관리형 제어가 제공됩니다.
그 옆에 비행기가 있습니다.제공하는 컨트롤러
컴퓨팅, 네트워크, 스토리지와 같은 관리형 기능을 자동으로 사용할 수 있습니다.여기에서 볼 수 있듯이 이제 이러한 컨트롤러는 모두 Amazon EKS 관리형 VPC의 Amazon EKS 계정에서 실행되므로 컴퓨팅 프로비저닝과 컨트롤러 실행에 대해 걱정할 필요가 없습니다.자동으로 다음을 수행합니다.
컨트롤러를 업데이트할 때 컨트롤러의 수명 주기를 관리하세요.
컨트롤 플레인도 마찬가지입니다.이제 다음 단계로, 이제 애플리케이션을 배포할 수 있는 클러스터가 준비되었습니다.이제 진행해 보겠습니다.
일부 애플리케이션을 실행해 보세요.여기서 볼 수 있듯이 기본적으로 EKS 자동 모드입니다.
노드를 자동으로 실행하면 다음과 같은 내용도 확인할 수 있습니다.
노드는 기본적으로 모든 노드 에이전트, 즉 쿠버네티스 에이전트와 함께 제공됩니다.
이러한 애플리케이션 포드가 작동하려면 정말 필요합니다.한 가지 중요한 차이점이 있습니다.그래서 우리는 이것을 쉬운 방법이라고 부릅니다.
여기서 인스턴스를 관리하죠?그래서 이것은 특별한 기능입니다.
Auto Mode 자체의 출시와 함께 실제로 발표하고 있는 내용인데, 바로 사용할 수 있습니다.
내부적으로는 Amazon EKS와 같은 서비스를 사용하기 위한 것입니다.또한 이러한 인스턴스는 여전히 고객 계정 내에서 실행되는 EC2 인스턴스라는 것도 알 수 있습니다.따라서 클러스터를 생성할 때 다음과 같은 특수 AIM 정책과 다음과 같은 권한을 제공하게 됩니다.
계정에서 실행 중인 인스턴스의 라이프사이클을 관리하세요.이제 두 번 클릭하여 어떻게 보이는지 살펴보겠습니다. 이게 무슨 뜻일까요?
Amazon EC2 관리형 인스턴스.따라서 자동 기능을 갖춘 아마존 EKS입니다.
모드에서는 여전히 이러한 기능을 계속 제공할 예정입니다.
특수 군대죠, 그렇죠?그리고 자동 모드를 사용하면
실제로 새로운 자동 모드 관리 부대와 자동 모드 지원 기능을 출시했습니다.
보틀 로켓 OS가 기본값입니다.그리고 여기 보시는 군대는 로켓의 변종입니다.
업스트림 보틀 로켓 군대를 사용할 수 있습니다.그리고 오른쪽에는 EC2 인스턴스가 있습니다.
이제 Amazon EC2 인스턴스이므로 다음과 같은 구성 요소를 이해해야 합니다.
내부, 그렇죠?의 출시와 함께
Amazon EKS 자동 모드, 우리는 일종의 변화를 꾀하고 있습니다.
운영 모델을 조금 설명해 드리겠습니다.보시다시피 코어 DNS인지, Q 프록시인지, CNI인지 여부와 같은 모든 노드 에이전트와 쿠버네티스 에이전트, 포드 아이덴티티, 노드 모니터링
그리고 CSI 노드 에이전트는 모두 다음과 같이 실행될 것입니다.
프로세스 시스템.클러스터를 생성할 때 cubecut을 실행하면 포드 (pod) 또는 노드가 생성되지만 아무 것도 보이지 않습니다.
클러스터 내부는 그냥 빈 클러스터일 뿐입니다.다음으로 넘어가서 EKS 자동 모드를 이해하는 또 다른 방법은 공유를 이해하는 것입니다.
책임 모델이라든가.
공동 책임 모델.이것이 바로 공유 개념입니다.
책임 모델은 예전의 모습이었죠.보시다시피
AWS는 기반 서비스와 함께 모든 글로벌 인프라를 책임지고 있으며 EKS는 다음을 담당했습니다.
쿠버네티스 컨트롤 플레인, API 서버, HCD 인스턴스 및 고객은 여전히 책임을 맡았습니다.
애플리케이션, 애플리케이션 가용성, 보안 모니터링 및 VPC 인프라에 대한 사항
및 클러스터 구성.그리고 이와 함께
라이프사이클 관리에 대한 책임은 변함이 없습니다.
이러한 모든 인스턴스와
클러스터 기능.그리고 이제 EKS 오토와 함께라면
보시다시피, Amazon EKS는 기존 방식을 변경했습니다.
책임이 크게 변하기 때문에 책임이 크게 바뀝니다.
EKS 컨트롤 플레인을 넘어 이러한 클러스터 EC2 인스턴스와 클러스터 기능에 대한 완전한 관리도 제공합니다.애플리케이션 컨테이너, 컨테이너 가용성 및 모니터링에 대한 책임은 고객으로서 여러분에게 있습니다. 따라서 고객은 혁신에만 집중할 수 있습니다.
클러스터 인프라에 대해 걱정하지 마세요.그걸로 당신은 여전히
자체 VPC 인프라 또는 클러스터 구성을 도입할 수 있는 유연성을 확보할 수 있습니다.
제공하도록 구성한 RBA 등
멀티 테넌시 요구 사항 및 이와 유사한 CNC의 추가 기능은 다음과 같습니다.
알다시피, 사용할 수 있는 애드온이 너무 많습니다.따라서 이러한 기능 중 하나를 사용하더라도 여전히 사용할 수 있습니다.
EKS 자동 모드를 실행하세요.이를 통해 더 많은 작업을 수행할 수 있습니다.
기본 EC2 인스턴스의 패치 적용, 모니터링, 상태 및 복구를 포함하여 차별화되지 않은 과제에 대해 알아보십시오.그럼 이제 좀 더 자세히 살펴보도록 하겠습니다.
여기서는 클러스터 기능을 분류하기만 하면 됩니다.첫 번째는 컴퓨팅입니다.앞서 말했듯이 EKS 오토 모드는 카펜터의 원리를 기반으로 만들어졌습니다.따라서 오픈 소스 카펜터에서 얻을 수 있는 모든 이점을 EKS 자동 모드에서도 얻을 수 있습니다.의 패치 버전을 실행하고 있습니다.
이 카펜터 컨트롤러는 클러스터를 프로비저닝할 때마다 카펜터 컨트롤러는
이미 설치되어 있죠?그래서 이런 혜택은
컴퓨팅 오토스케일링과 지속적 적정 규모 조정 기능을 자동으로 이용할 수 있습니다.보틀 로켓 OS가 지원되며, 보틀 로켓 OS는 다음과 같은 경우에 지원됩니다.
모르시는 분들은 모르시겠지만, 컨테이너에 최적화된 OS이며 기본적으로 보안이 설정되어 있습니다.
읽기 전용 파일 시스템 사용.여기서 주목해야 할 한 가지 중요한 점은 세 번째입니다. 바로 건강입니다.
모니터링, 자동 수리.그래서 제가 실제로 강조한 것은
에서 실행 중인 노드 복구 에이전트는
Amazon EC2 인스턴스, 지금은 관리형 EC2 인스턴스죠?그래서 실제로 그렇게 보이고 있습니다.
건강 상태 확인 및 신호 전송
다음과 같은 경우 자동 모드 및 자동 모드 노드로 돌아갑니다.
노드가 비정상 상태이므로 이를 대체할 것입니다.
정상 노드가 있는 노드.클러스터를 생성할 때 스토리지로 이동합니다.
자동 모드를 활성화하면 이미 설치된 블록 스토어 컨트롤러를 사용할 수 있습니다.
기본값도 마찬가지입니다.그리고 마지막은 네트워킹입니다.제 생각에 네트워킹이란,
아시다시피, 여기 계신 여러분 대부분에게는 큰 도전입니다. EKS Auto Mode의 출시를 통해 우리는 이를 단순화할 것입니다.
그런 것들이 많죠.이 모든 컨트롤러는 독자적인 기본 설정에 모범 사례가 포함되어 있습니다.첫 번째 포드 네트워킹
완전히 관리될 예정인데, 기본적으로 VPC CNI입니다.그래서 우리는 많은 변화를 꾀하고 있습니다.아시다시피 자동 모드를 통해 오늘날 VPC CNI는 많은 기능을 지원합니다.
구성 옵션이 많은데, 어느 쪽이 좀 어렵죠?고객이 우리를 찾아오고
무엇을 구성해야 하는지 알려주세요.이해가 안 돼요.따라서 기본적으로 VPC CNI를 프리픽스 위임 모드로 구성하는데, 전염성이 있는 IP 블록이 보이지 않으면 이를 대체할 것입니다.
보조 IP 모드로 넘어가죠.부품 네트워킹과 함께 네트워크 정책도 기본적으로 지원될 예정입니다.완벽하게 관리될 수 있습니다.
클러스터 서비스에서는 쿠버네티스의 로드 밸런싱을 수행합니다.
서비스 로드 밸런싱, 그리고 원하는 경우
이러한 애플리케이션을 클러스터 외부에 노출시키십시오.
그렇게 할 수 있을 거예요.그리고 마지막은
클러스터 DNS입니다. 여러분이 알아주셨으면 하는 몇 가지 차이점이 있습니다.EKS 자동 모드가 출시되면서 이제 코어 DNS가 모든 노드에서 실행됩니다.따라서 자동으로 제공되기 때문입니다.
이 제품의 자동 크기 조정 기능을 사용할 수 있습니다.
코어 ENS는 바로 사용할 수 있습니다.궁금하신 점이 있으시다면
자동 모드를 사용해야 하는 이유 또는 자동 모드를 만들어야 하는 이유
이점을 요약하자면 자동 모드가 활성화된 클러스터입니다.먼저, 더 쉽고 빠르게 시작할 수 있습니다. 또한 완전 관리형 클러스터 기능도 제공하며, OS 패치를 바로 사용할 수 있어 기본적으로 안전합니다.
자동으로 업그레이드됩니다.그럼 여기서 말하는 게 무슨 뜻일까요?이 세션이 끝날 무렵, 컨트롤 플레인을 업데이트할 때마다 모든 Kubernetes 데이터 플레인 노드와 코어 클러스터 기능이 업그레이드된다는 점에 대해 자세히 설명하겠습니다.
자동으로도 가능합니다.워크로드가 Kubernetes에서 실행되는 경우 자동 모드에서 실행되어야 합니다.그리고 가장 중요한 것은 EC2 인스턴스를 추상화하지 않을 것이라는 점입니다.
기능을 마음대로 사용할 수 없습니다.여전히 거의 모든 EC2 인스턴스 유형에 액세스할 수 있습니다.
오늘날에는 익숙한 방식입니다.다른 카테고리를 사용하는 경우 GPU와 함께 사용할 수 있습니다.
인스턴스 기능, 그리고 해당 인스턴스에도 액세스할 수 있습니다.
Nitro이든 AWS Graviton이든, 가격 대비 성능과 에너지 효율성까지 모두 제공하는 AWS에서 일어나고 있는 실리콘 혁신에 대해 알아보십시오.온디맨드 인스턴스든, 저축 플랜을 사용하든 관계없이 현재 구매한 EC2 인스턴스 유형을 계속 구매할 수 있습니다. 자동 모드에서도 EC2 인스턴스 유형을 사용할 수 있습니다.그리고 만약 여러분이 비용에 매우 민감하다면, 아시다시피 비용에 매우 민감하고
SPOT이 제공하는 비용 효율성을 감안하면
자동 모드에서도 이 작업을 수행할 수 있습니다.궁금하시다면,
어떻게 시작하죠?자동 모드를 출시하면서 AWS EKS 콘솔을 약간 개조했습니다.
클러스터 생성도 마찬가지입니다.이제 빠르게 할 수 있습니다.
구성 옵션을 사용하여 이제 EKS를 시작할 수 있습니다.
클릭 한 번으로 클러스터를 만들 수 있습니다.자동 모드는 129 이상에서 사용할 수 있으며, 콘솔로 이동하면 자동 모드 사용 여부를 선택할 수 있는 간편한 토글 옵션도 있습니다.모든 기능과 함께 제공됩니다.
모범 사례를 기반으로 합니다.그렇다면 우리가 실제로 의미하는 바는 무엇일까요?
기본으로 제공되는 모범 사례를 통해서일까요?를 만들 때
기본적으로 모드가 활성화된 클러스터에서는 범용 및 시스템이라는 두 개의 내장 노드 풀을 실제로 설치하거나 배포합니다.이 역시 Karpenter API입니다. Raj가 이야기한 모든 구조도 지원합니다.그리고 만약 당신이 그것을 사용하고 있다면
API이든 콘솔이든 관계없이 기존 클러스터를 생성할 수 있습니다.
해당 모드도 사용할 수 있습니다.아니면, 궁금하시다면 해 보세요.
테라폼이 지원되나요?네, 출시와 함께 여러분은
자동 모드로 Terraform을 만들거나 사용할 수도 있습니다. eksctl을 시작하기만 하면 시작할 수도 있습니다.그리고 자동 모드의 중요한 차이점 중 하나는 다음과 같이 자동 모드를 활성화할 수 있다는 것입니다.
기존 클러스터도 마찬가지입니다.예를 들어, 가져올 수 있습니다.
보시다시피 기존 클러스터를 사용하고 Auto Mode를 활성화하는 것은 간단한 토글 옵션이며 이를 오프로드하기 시작할 수 있습니다.
운영 책임은 EKS에 있습니다.그럼 본론으로 들어가 보겠습니다.
관리 측면의 컴퓨팅 부분에 대한 세부 정보.여기서 볼 수 있는 것은 기본적으로 제공되는 내장형 노드 풀입니다.첫 번째는 범용입니다.그럼 범용의 사용 사례는 무엇이고 우리가 이걸 실제로 한 이유는 무엇일까요?여러분께 제공하고 싶었습니다.
간소화된 시작 경험.이와 함께 우리가 원했던 것은
다음 중 하나를 출시할 수 있도록 지원해 주세요
범용 워크로드이며 여러 가지가 함께 제공됩니다.
온디맨드 인스턴스 유형과 Graviton 및 x86에 대한 지원그럼 이런 모습이겠네요.여기서 볼 수 있듯이 통합이 이루어졌습니다.
기본적으로 켜져 있으며 용량 유형은 온디맨드로 제공되며 다양한 용량도 함께 제공됩니다.
CMR 인스턴스 카테고리와 4세대 이후 인스턴스 생성 (기본 노드 만료)
336시간, 즉 14일로 설정됩니다.이와 함께
AMD64 지원도 마찬가지입니다.다음은 시스템 노드 풀인데 왜 시스템 노드 풀일까요?범용 워크로드도 훌륭하지만 저희도 그 점을 잘 이해하고 있습니다.
애플리케이션에서 사용하는 다른 애드온 중 실행하려는 애드온이 많이 있습니다.그래서 시스템 노드풀이 등장합니다.
중요한 애드온을 사용하면 일정만 있는 것이 아니라 다른 모든 기능을 활용하고 사용할 수 있습니다.
시스템 NodePool을 활용하여 EKS 자동 모드에서 실행할 수 있는 AWS 기존 애드온 제품군AMD와 ARM을 모두 지원합니다.보시다시피
시스템 노드 풀에 추가된 특별한 얼룩이 있습니다.글쎄요, 이런 베스트 프랙티스는 훌륭한 의견이고, 디폴트는 사실 고무적입니다. 하지만 유연성은 어떨까요?이미 실행 중이라면
자체 관리형 Karpenter 또는 다음과 같은 다양한 사용 사례를 고려하고 있는 경우
유연성이 필요합니다. 이를 위해서는 사용자 정의를 직접 정의할 수 있어야 합니다.
노드 풀도 마찬가지입니다.따라서 이러한 사용자 정의 노드 풀을 정의하는 몇 가지 일반적인 사용 사례입니다.다시 말씀드리지만, 액셀러레이티드 인스턴스는
GPU이든 뉴로 패밀리이든 사용하려는 경우 사용자 정의 노드 풀을 사용하여 해당 노드를 정의할 수 있으며, 열광적인 애호가라면
자체 노드 풀을 생성하여 스팟 인스턴스를 사용할 수도 있습니다.그리고 격리하고 싶을 수도 있습니다.
다양한 목적과 팀, 운영, 테넌트 격리를 위한 컴퓨팅
시끄러운 이웃에게도 마찬가지죠.이것들은 고전적인 것들 중 일부입니다.
사용자 정의를 생성하려는 경우의 사용 사례
노드 풀도 마찬가지입니다.여기서 중요한 차이점 중 하나는 범용 노드 풀입니다.
그리고 시스템 노드 풀은 편집할 수 없습니다.편집해 주셔도 저희가 제공하는 기본값으로 즉시 다시 조정해 드리겠습니다.예를 들어, 여기서는 ai-ml 팀을 위해 별도의 노드 풀을 만들고 있습니다.보시다시피,
inf2 값을 제공하면 EKS Auto Mode가 충분히 지능적입니다. inf2 제품군이라고 하면 실제로 모든 기능이 포함된 노드를 프로비저닝하게 됩니다.그게 정말 무슨 뜻일까요?드라이버, 쿠버네티스
플러그인이 내장될 예정입니다.이와 함께, 여러분은
여전히 모든 장애 제어 기능을 이용할 수 있으며, 예산, 이유, 만료 등을 구성할 수 있습니다.
제한, 그리고 Rajdeep이 말한 무게.EKS 노드 클래스.Rajdeep은 여러분에게 EC2NodeClass를 소개했으며, 자동 모드 출시와 함께 EKSnodeClass라는 새로운 종류의 클래스를 도입하게 되었습니다.이 노드 클래스가 뭐죠?그럼 노드 클래스에서는
기본적으로 보안 그룹과 서브넷을 기본적으로 제공합니다.노드 풀을 가져오는 것처럼 실제로 기본값인 기본 노드 클래스도 하나 제공됩니다.
클러스터 서브넷과 노드 보안 그룹에
클러스터를 생성할 때 제공한 정보입니다.그리고 이것은 다음에 의해 참조됩니다.
범용 노드 풀과 시스템 노드 풀 모두
클래스 참조를 통해여기서 중요한 차이점 중 하나는 EKSnodeClass가 매우 단순해진다는 것입니다.AMI 셀렉터는 없습니다. 우리가 이 EC2의 라이프사이클을 관리할 것이기 때문입니다.
인스턴스를 완전히 대신해 드리며, 더 이상 필요하지 않은 인스턴스도 저희가 소유하게 됩니다.
임의의 AMI를 지정하기 위해서요다시 말씀드리지만, 보틀 로켓 OS가 지원하므로 보안을 강화할 수 있습니다.반입을 원하신다면
사용자 정의 EKSnodeClass를 생성하면 자체 보안 그룹과 서브넷을 만들 수 있습니다.여기에는 네트워크가 포함됩니다.
구성 (예: 소스 NAT 설정 및
네트워크 정책도 마찬가지입니다.사용할 공식 스토리지를 지정할 수도 있습니다.
이러한 EC2 인스턴스에서따라서 정의하는 방법은 다음과 같습니다.
사용자 정의 노드 클래스.여기서는 다음을 정의하고 있습니다.
team-ai-ml이라는 사용자 정의 노드 클래스는 이전에 만든 노드 풀에서 사용할 것입니다.다시 말씀드리지만, 다음과 같은 전략은
다중 노드 풀을 정의하는 것은 여전히 EKS 자동 노드에도 적용됩니다.빠르게 시작하고 싶고 단순화된 방법을 찾고 있다면
시작하기 전에 범용 노드 풀 또는 시스템 노드 풀을 사용할 수 있습니다. 일반적인 노드 풀과 함께 여러 노드 풀을 사용할 수도 있습니다.
목적 노드 풀.의 일반 용도
시스템 노드 풀의 기본 가중치는 0입니다.그리고 만약 원하신다면
자체 노드 풀에서 처리할 워크로드의 우선 순위를 지정하고 그에 따라 가중치를 구성할 수 있습니다.정말 좋아요.제 생각에 자동 모드를 사용할 때 얻을 수 있는 중요한 이점 중 하나는
둘째 날 작업을 간소화하고 작업도 줄였습니다.
운영 오버헤드 맞죠?그럼 EKS 자동 모드가 어떻게 작동하는지 이해해 봅시다.
핵심 기능의 자동 업데이트를 다음과 같이 처리하십시오.
데이터 플레인 노드도 마찬가지인가요?공동 책임을 이해하는 것이 중요합니다.
여기 모범을 보여주세요, 그렇죠?제 생각엔 어제부터
질문이 너무 많아요.그럼 자동 모드가 컨트롤 플레인을 자동으로 업그레이드한다는 뜻인가요?저한테는 좀 무섭게 느껴지네요.아니에요.컨트롤 플레인을 업데이트하기 전에 컨트롤 플레인과 모든 모범 사례를 업데이트하는 것은 여전히 여러분의 책임입니다.
컨트롤 플레인은 여전히 적용됩니다.에서 테스트해 볼 것을 적극 권장합니다.
하위 환경, 업그레이드 인사이트를 실행하세요
애플리케이션이 제대로 작동하는지 확인합니다.
최신 버전의 쿠버네티스에서도 여전히 작동할 것입니다.그래서 우리가 새 버전을 출시할 때
쿠버네티스 버전에는 권장 버전도 게시되어 있습니다.
각 버전에 맞게 보틀 로켓 AMI를 최적화했습니다.그리고 최신 AMI가
사실, 기본적으로 출시되었으니 바로 그 때 액션이 일어날 거예요.어떻게 하는지 알아보기 전에
노드 업데이트가 제대로 작동하는지 살펴보겠습니다.
또 다른 차이점은 자동 업데이트입니다.
EKS 자동 모드를 통한 클러스터 기능여기, 맞죠?보시다시피 카펜터 v1.0이 실행 중이고 EBS 스토리지도 실행 중입니다.
컨트롤러, 즉 1.34입니다.그리고 아마존 EKS 검사
컨트롤러 버전과 이 컨트롤러 중 업데이트가 필요한지 여부가 결정됩니다.여기서 다른 두 컨트롤러는 업데이트가 필요 없었지만 네트워크 컨트롤러는 새 버전을 출시했습니다.Amazon EKS 자동 모드에서는 필요한 컨트롤러만 업데이트합니다.모든 컨트롤러가 그런 것은 아닙니다.
업데이트는 항상 필요하며 이러한 컨트롤러를 업데이트할 때는 해당 컨트롤러를 주의하는 것이 중요합니다.
업데이트는 차단되지 않습니다.그게 정말 무슨 뜻인가요?오늘처럼, 업데이트를 할 때, 관리하죠.
컨트롤 플레인, API 서버, HCD의 업데이트, 애플리케이션은 계속 실행됩니다.마찬가지로, 저희는
이러한 컨트롤러를 업데이트하면 애플리케이션이 업데이트해야 합니다.
또한 계속 실행하세요.그럼 다음은 어떻게 해야할까요?
데이터 플레인 업데이트는 작동할까요?완전 제로 터치입니다.아무것도 할 필요가 없습니다.아마존 EKS 모드 존중
중단 예산.통제력이 있는 것 같네요
이제 비행기가 업데이트되고 1.31로 업데이트되었습니다.그래서 계속 진행되죠.기존 작업자를 대체합니다.
최신 AMI가 있는 노드.여기에서 이전 버전도 1.31 AMI로 대체된 것을 볼 수 있습니다.그리고 이 모든 것을 존중함으로써 그렇게 할 수 있습니다.
운영 중단 예산은 노드이든 상관 없습니다.
풀 중단 예산 또는 귀사의 예산인지 여부
구성한 매니페스트 PO 중단 예산은 롤링 배포 방식으로 이루어집니다.한 가지 알아두어야 할 점은 기본적으로 범용 노드 풀입니다.
만료 기간은 14일입니다.하지만 다음과 같이 구성할 수 있습니다.
사용자 정의 노드 풀은 최대 21일까지 만료됩니다.따라서 아직 업데이트하지 않은 경우 21일에도 강제 업데이트됩니다.마지막으로, 보안 업데이트는 어떻게 이루어지나요?
자동 모드로 직접 조작할 수 있나요?여기서도 비슷한 개념으로, 카펜터 드리프트 디텍션이 등장합니다.Amazon EKS는 폐기물 패치가 포함된 최신 AMI를 게시합니다.여기에는 포함될 수도 있습니다.
노드에서 실행되는 이러한 에이전트의 패치도 마찬가지입니다.IT 부서는 다시 한 번 존중합니다.
혁신 예산.계속해서 이러한 작업자 노드를 대체합니다.
배포 방식.보시다시피, 21일간의 강제 업데이트에 대비하여 이전 버전도 최신 AMI 버전으로 교체되었습니다.
여기에도 여전히 적용됩니다.아직 안 하셨다면
자동 모드를 사용하기 시작했거나 아직 자동 모드를 만들지 않은 경우
자동 모드가 있는 클러스터의 경우, 다음을 강력히 권장합니다.
자동 모드 사용을 시작해 보세요.쿠버네티스 또는 EKS를 처음 사용하든 가속화하려는 사용자든 상관 없습니다.
현대화 여정인 EKS Auto Mode는 여러분에게 적합합니다. 아니면 이러한 과정을 오프로드하고 싶으신가요?
EKS에 대한 운영 오버헤드다시 말씀드리지만, 기다리지 말고 프로덕션 환경에서 EKS 자동 모드를 사용해 보십시오.자동 모드는 일반적으로 모든 상업 지역에서 사용할 수 있습니다.곧 출시할 예정입니다.
클로드 2뿐만 아니라 중국에 대한 지원도 마찬가지죠.이걸로 환영할게
마지막으로 생각을 마치기 위해 Raj를 다시 무대로 데려오세요. - 좋아요, EKS Auto Mode는 여러분 모두가 더 빨리 시작할 수 있게 도와주는 것 같지만, 한 사람으로서
카펜터에 열광하고 있어요, 무슨 일이에요?
오픈 소스 카펜터, 쉬탈?- 우리는 카펜터를 좋아해요.AWS에서는 이를 애정을 담아 개발합니다.우리는 개발하기 위해 최선을 다하고 있습니다.
카펜터 인 더 오픈아무데도 안 갈 거예요B가 반복해서 말씀하셨듯이, Amazon EKS 자동 모드는 카펜터의 원칙을 기반으로 구축되었습니다.그래서 만들어진 어떤 기능이든
카펜터에서 사용할 수 있습니다. 곧 사용할 수 있게 될 예정입니다.
자동 모드에서도 마찬가지예요. - 들어서 반가워요.보시다시피, 정말 많은 것들이 있습니다.
융통성 있는 동시에, 만약 여러분이 이런 사람이라면 어떻게 EKS를 시작할 수 있을까요?더 빠르고 간단합니다.EKS
자동 모드가 정답입니다.클러스터를 만들 수 있습니다. 많은 것을 얻을 수 있습니다.
기능은 바로 사용할 수 있습니다.Karpenter 스토리지, Ingress와 같은 애드온과 기타 여러 기능을 관리하고 업그레이드합니다.
Sheetal이 이야기한 내용이죠.늘 그렇듯, 둘 중 하나를 사용하시든
EKS, EKS Auto 또는 Karpenter는 완전히 업스트림으로 실행되고 있습니다.
쿠버네티스 호환 버전.이것으로 저는 이 점을 잘 압니다.
정말 많은 정보이고 이건 시작에 불과합니다.여러 세션을 통해 더 많은 정보를 얻을 수 있습니다.여기 Sheetal이 실행 중입니다.
빌더 세션이 두 개 있는데, 하나는 내일, 하루는 지난 후에요.또한 배울 수 있는 내용도 있습니다.
EKS 자동 모드에 대한 자세한 내용은 출시 블로그를 참조하십시오.그녀는 방금 출시를 발표했습니다.
이 강연 직전에 블로그에 글을 남기세요.뿐만 아니라 현재 클러스터 오토스케일러를 사용하고 있다면 Karpenter v1으로 마이그레이션하는 방법에 대한 지침도 있습니다.이것으로 우리가 여기 있을 수 있습니다.
질문과 답변이 필요하시면, Q와 A를 시작하기 전에 한 가지 더 앞으로 나아가세요, Sheetal.완료하는 것을 잊지 마세요
세션 설문조사, 이 세션이 마음에 드시거나 만족하지 못하셨다면 피드백을 주시면 진지하게 받아들이겠습니다. - 정말 고마워요
이 세션에 참석해 주세요. - 감사합니다.
(청중들의 박수 소리)