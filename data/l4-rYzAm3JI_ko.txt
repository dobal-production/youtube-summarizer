- 맞아요.좋은 아침이에요.모두가 들을 수 있었으면 좋겠어요. 여러분의 헤드폰이 되었으면 좋겠어요.
주황색으로 되어 있어요.헤드폰이 그렇지 않은 경우
다른 세션을 듣고 계실 수도 있습니다.경험이 될 수도 있겠죠.
다른 세션을 듣고 있는데 우리가 여기 있는 거니까 내 말 안 들리면
손을 들어주세요. 하지만 그렇지 않으면 엄지손가락을 크게 들어주세요.멋져 보여요.멋지네요.이번 세션은 조금 색다르네요. 여러분도 참여하셨으면 좋겠습니다.
전에도 조용한 세션 중 하나였는데 우린 여기서 할게요
자연스러운 목소리로 말해요우리 말 안 들리면, 제발
모션이나 뭐 좀 해봐우린 통과하고 싶지 않아요
프레젠테이션의 절반은 듣지 않아도 됐어요제가 하고 싶은 또 다른 일은
좀 인터랙티브하게 만드세요.맘에 드는 게 있으면
라고 말하거나, 박수를 치고 싶거나, 자신의 모습을 보여주고 싶을 때
제품에 대한 기대감이나 우리가 말하는 것에 대한 흥분, 우리 모두 함께 이 사인을 실천할 거예요.그냥 좀 괜찮을 거예요
두 손가락 위로 흥분해서 너무 느리게 가는 것 같으면 속도를 높여주세요
너무 빨리 갈 거면 신호를 좀 주세요
속도를 늦추기 위해서죠, 그렇죠?그래서 우리는 당신이 하길 바랄 뿐이에요
최대한 활용하세요.이 자리에 오게 되어 정말 기쁩니다.제 이름은 존이에요. 제가 이끌고 있어요
App Studio의 제품 팀과 이야기를 나눌 수 있어서 정말 기쁩니다.
오늘 이 제품에 대해 말씀드리자면, 최근에 두 번째로 큰 성과를 거두었습니다.
몇 주 전, 11월 중순.7월에 프리뷰를 발표했는데 이야기를 나눌 수 있어서 정말 기쁩니다.
몇 가지 새로운 기능에 대해 알아보겠습니다.다음에 대해 이야기해 볼게요
일부 고객 사용 사례.그리고 오늘 저와 함께 제품 팀에 소속된 프랑수아 (Francois) 씨도 함께했습니다.그리고 우린 정말
NFL과 함께 훌륭한 고객 사용 사례와 고객 스토리에 대해 이야기하게 되어 기쁩니다.정말 기쁘게 생각합니다.
오늘은 Shawn과 함께해요.걔가 얘기할 거예요
왜 App Studio를 선택했는지, NFL에서 App Studio를 사용하여 어떤 사용 사례를 개선하고 있는지 말씀해 주시겠어요?그리고 그 파헤쳐볼 수 있어서 정말 기쁩니다.그럼 오늘은 어떤 내용을 다루게 될까요?액션이 가득한 아젠다가 있어요.App Studio에 대해, 그리고 어떻게 여기까지 왔는지 자세히 알려드리겠습니다.고객들이 우리에게 뭐라고 말했나요?여러분 모두 뭐라고 하셨나요?
마찰 지점, 문제점, AWS를 사용해야 하는 이유에 대해
앱 스튜디오를 구축하기로 결정했습니다.몇 가지 새로운 기능에 대해 이야기해 보겠습니다.에 대한 개요를 제공하겠습니다.
이 제품은 아주 짧습니다. 지출하고 싶기 때문이죠.
NFL 사용 사례와 Shawn이 만든 훌륭한 앱에 대해 더 자세히 이야기하면 실제로 몇 가지를 보게 될 것입니다.
실제 앱의 스크린샷.어떻게 되는지 보시게 될 거예요
NFL은 실제로 오늘날 실제로 App Studio를 사용하고 있습니다. 정말 신나는 일이죠.그리고 데모도 있습니다.
아젠다 슬라이드에는 없습니다.우리가 어떻게 놓쳤는지 잘 모르겠어요
하지만 오늘은 데모로 많은 시간을 할애하고 생성해 보겠습니다.
실시간 앱.완전히 라이브이며 사전 녹화된 것도 없습니다.제품을 보실 수 있도록 함께 살펴보도록 할게요.
그 경험을 보시면 저희가 따라갈게요.
로드맵 개요를 통해 어떤 기능이 추가되고, 최근에 어떤 기능이 출시되었는지를 확인할 수 있으며, 이를 통해 더 많은 피드백을 제공하고 다음 기능에 영향을 미칠 수 있는 기회도 얻을 수 있습니다.
결국 우리가 만들게 되는 거죠.그리고 마지막으로, 다음 단계가 몇 가지 있습니다.이 세션을 중간에 마치셨을 때 정말 기대가 되신다면
여기 re:Invent에서 할 수 있는 다른 세션들도 있습니다.
카탈로그에 북마크하세요.오늘 오후에 자세히 알아보겠습니다.다음 링크도 몇 개 있습니다.
시작 튜토리얼 및 다음 단계 가이드는 에서 확인할 수 있습니다.
마지막은 스캔하고 시작할 수 있는 QR 코드로 끝입니다.정말 기대됩니다.
나와줘서 고마워요.프랑수아즈한테 넘겨줄게그가 당신에게 조금 알려줄 거예요
우리가 어떻게 여기까지 왔는지 좀 더 자세히 알아보고 바로 시작할게요. - 고마워요, 존.음, 고마워요
오늘 와줘서 고마워요앱 스튜디오를 만든 이유는 무엇인가요?제 생각에 우리는 정말 그랬던 것 같아요.
오늘 많은 고객들과 이야기를 나누면서 이러한 문제점들에 대해 조금이나마 공감하실 수 있길 바랍니다. 하지만 이 자리에 계신 분들 중 누가 완전히 숙지하고 계신가요?
현업 부서에서 요청한 애플리케이션 백로그가 필요하신가요?아마 아무도 없을 거예요.어디선가 손을 봤어요. 얘기해 봐야겠네요
세션이 끝난 후, 제 생각엔하지만 그게 요점이에요
오늘은 좀 답답하죠?하지만 그게 본성이에요.
우리가 살고 있는 이 세상은 끊임없이 진화하고 있습니다.
항상 더 잘하려고 노력하고, 다른 일을 하고, 가끔은
새로운 도전에 도전하세요.이를 위해서는 새로운 도구가 필요합니다.
항상 그래요.당연히 IT 부서는
여러분의 조직은 아마도 다음과 같은 상황에 처할 것입니다.
그걸 손에 넣으면 끝날 수도 있겠죠.
구축해야 하는 애플리케이션의 병목 현상이 발생합니다.두 번째로 들었던 요점은
많은 부분이 개발자 부족입니다.개발자는 매우 귀중한 자원입니다.항상 쉽게 찾아오는 것은 아니며 종종 배정되기도 합니다.
조직에서 가장 가치가 높은 프로젝트 중 일부에 맡기세요.이들은 대부분 고객 대상 콘텐츠 및 솔루션을 연구하게 됩니다.다른 문제죠, 그렇죠?그래서 만약 노력하고 있다면
내부용 응용 프로그램을 개발하려면
이러한 리소스를 확보하기 위해 싸워야 할 것입니다. 그리고 이것이 바로 그 일부죠.
우리가 들은 문제죠.고객들의 이야기도 들을 수 있었습니다.
레거시 앱에 집착하는 느낌이 어떤지 이야기해 주셨습니다.이러한 애플리케이션은 리팩토링하기 어렵고, 때로는 거대하기도 하고,
한참 전부터 있었으니까 그런 느낌이 안 들어요.
이러한 응용 프로그램을 처음부터 다시 잘라내야 한다면 쉽게 리팩토링할 수 있을 것입니다.그들은 소유 비용을 분담합니다.아시다시피 애플리케이션 구축은 단순한 문제가 아닙니다.
구축에 드는 노력.아마 비용의 절반일 거예요. 하지만 어떻게 하는지도 중요하죠.
이러한 애플리케이션을 유지하세요.아시다시피, 보안 패치는
코드 라이브러리 업데이트.이 모든 것이 합쳐지면 많은 것을 얻을 수 있습니다.누군가와 대화하고 있다면
엔터프라이즈 조직.그들은 둘 중 어느 곳에나 있습니다.
모든 부서에 5,000~20,000개의 애플리케이션이 있습니다.제가 말하자면, 합산하는 것은 정말 시간이 많이 걸리는 일입니다.마지막으로, 저희도 들은 바가 있습니다.
현재 많은 리더들이 정말로 더 많은 성과를 기대하고 있다는 얘기인가요?
더 빠르게, 더 빨리 더 많은 가치를 창출하세요.혁신은 더 이상 6개월이 걸리지 않는 목표입니다.사람은 할 수 있어야 합니다.
개념 증명을 구축하고, 혁신하고, 무엇을 보여주어야 할까요?
내일은 6주, 3개월이 걸릴 수 있습니다.우리가 들은 게 그거예요.
그래서 그들은 팀이 이러한 가치를 훨씬 더 빨리 제공할 수 있도록 지원하는 도구를 원하고 있습니다.
기존 코드를 사용해서 가능하죠.자, 그러면 어떻게 되나요?
팀들이 해결책을 모색하고 있나요?첫 번째는 로우코드 (low-code) 로의 전환입니다. 당연하게도
개발 작업의 많은 부분을 가속화하려는 경우 로우코드는 팀의 성과를 크게 가속화할 수 있는 추상화를 제공합니다.하지만 이제는 고객으로부터 다음과 같은 의견도 듣게 되었습니다.
이러한 도구 중 일부는 내장되어 있지만 일부는 매우 뛰어난 기능을 갖추고 있습니다.
가파른 학습 곡선이죠.이들은 다양한 페르소나를 대상으로 하는 다양한 수준의 추상화를 가지고 있으며, 그 중 일부는 추상화를 필요로 합니다.
그들이 배워야 하는 고유 언어를 알고 있어야 합니다.
기존 언어일 수도 있지만 꼭 그렇지는 않습니다.
그런 전문 지식을 사내에 두세요.우리가 들은 게 하나 있어요.또 다른 하나는 이러한 애플리케이션의 확장성과 성능입니다.여러분 모두 알고 계시겠지만
대부분의 애플리케이션은 원래 원하는 크기로 시작하지 않습니다.그래서 그들이 자주 보게 되는 것은
소규모 팀이 만든 애플리케이션과 그 애플리케이션
성공할 수 있겠죠?그리고 6개월 후
150명이 여러 팀을 이루어 사용하고 있는 앱에 대해 들어보셨을 텐데요.그리고 지금은 중요한 부분이 되었죠.
비즈니스 프로세스의 한 부분이죠.어떤 스프레드시트로 뒷받침되는 것으로 밝혀졌는데, 데이터 모델은
순식간에 통제 불능 상태였죠.그래서 많은 리팩토링이 필요하죠.
예정에 없는 경우도 있고요.따라서 앱을 처음부터 바로 구축하는 데 따르는 어려움도 많이 들어보셨을 겁니다.대규모 조직의 경우 거버넌스에 대해서도 많이 들었습니다.이를 통해 여러분은
로컬 도구를 사용하는 조직은 때때로 이에 대한 대응책으로 작용합니다.
우리가 Shadow 80이라고 부르는 것에 대해서요.이러한 로컬 툴은 말 그대로
스스로 섀도우 80이 되세요.이를 가능하게 할 거예요. 특히
만약 여러분이 기술 산업이나 에너지 분야에 종사하는 조직이라면
직원 중에는 박사 학위를 가진 직원도 있고, 일부는 실제로 매우 교활하고 앱을 직접 만들 수 있습니다.문제는 이것입니다.
여러분의 데이터는 어디로 가고 있나요?사람들이 어떻게 앱에 액세스하나요?어떤 가시성을 갖고 계신가요?
조직의 모든 애플리케이션을 관리하고 계신가요?이러한 문제들은 결국 문제가 됩니다.
그 대규모 조직은 정말 어려움을 겪고 있습니다.마지막으로, 다음 소식도 들었습니다.
고객들은 이러한 플랫폼을 확장하는 데 드는 비용을 알고 있습니다.
예를 들어 수천 명의 사용자를 지원하려면
시간이 지날수록 막막해지죠.구독이 있습니다
대부분의 경우 최종 사용자를 다른 티어에 등록해야 하는 모델입니다.이 모델은 대규모로 봤을 때 제대로 작동하는 것으로 입증된 것은 아닙니다.존, 말씀해 주실 수 있나요?
잠깐 말씀드리자면, 우리가 이 일을 시작했을 때의 비전은 무엇이었을까요?- 네, 진짜 비전은
App Studio를 처음 시작했을 때는 이러한 문제점을 해결하고 문제를 해결하는 것이었습니다.
포인트, 고객이 안고 있는 문제를 해결하세요
단순히 구축하는 것이 아니라 기존 솔루션을 사용하여
또 다른 로우코드 제품이지만 실제로 활용도가 높습니다.
제너레이티브 AI는 애플리케이션 구축 방식을 혁신합니다.이것이 바로 우리가 해낸 일입니다.우리는 처음부터 제너레이티브 AI를 중심으로 App Studio를 구축했습니다.이것이 바로 우리가 믿고 있는 방식입니다.
전문 개발자 전문 지식 없이도 엔터프라이즈급 애플리케이션을 구축할 수 있는 정말 빠른 방법을 달성했습니다.따라서 전문 개발자라면 훌륭하지만 아마도 가지고 계실 것입니다.
많은 애플리케이션은 필요하지 않습니다.
코드 베이스를 완전히 제어하거나 CICD 파이프라인을 설정하거나 여러 파이프라인을 설정할 수 있습니다.
배포 단계는 해당 작업을 유지하기 위한 것입니다.
패널 또는 해당 관리 도구 또는 해당 고객 지원
사람들을 막는 토글 스위치 패널
SSH에서 제품으로의 전환완전한 통제력을 유지하고 싶으시죠?
클라이언트와 소비자가 사용하고 상호작용하는 앱과 앱 스토어에 출시하는 앱 (회사 내부 전체)
비즈니스 프로세스 앱, 운영 부담을 없애고 싶고 가속화하고 싶으신가요?
혁신, 딜리버리의 우선순위를 정할 수 있어야 합니다.
그 애플리케이션들 말이에요.이것이 바로 우리가 App Studio를 만든 이유입니다.1위는 주로 초점을 맞췄습니다.
제너레이티브 AI 어시스턴트는 단지 앱을 만들고 아이디어에서 실행에 옮길 수 있게 해줍니다.
60초 이내에 앱으로 전환할 수 있지만, 이제 GA 출시를 통해 어시스턴트와 채팅하고 애플리케이션을 수정할 수 있습니다.
이미 있습니다.우리의 직관적인 기능을 사용할 수 있게 되죠.
시각적 드래그 앤 드롭 도구를 사용하거나 어시스턴트에게 문의할 수 있습니다.
앱을 직접 수정하기 위해 모든 클릭이나 작은 조작을 직접 할 필요는 없습니다.둘째, AWS의 지원을 받는 것입니다.
App Studio로 구축한 모든 앱은 백그라운드에서 완전히 코드가 생성됩니다.현대적인 풀스택입니다.
표준 AWS 기술 및 서비스에 배포된 웹 애플리케이션.클라우드프론트와 같은 것들
람다, S3, DynamoDB 등 모든 앱이 서버리스이지만 배포도 가능합니다.
독립 앱으로.따라서 배포되지 않습니다.
멀티 테넌트 런타임은 해석되지 않고 마치 앱과 같습니다.
프로 개발자가 직접 작성하겠지만, 저희는 별도의 작업 없이도 앱을 배포, 확장, 유지 관리 및 운영합니다.
기존에는 이와 관련된 운영 오버헤드가
이러한 애플리케이션과 관련해서요.셋째, 이러한 애플리케이션은 사용자와 연결됩니다.
기존 비즈니스 데이터, 가장 중요한 데이터
회사가 보유한 데이터.보안과 거버넌스도 마찬가지입니다.
타협의 대상이 아니죠.관리자용
App Studio 인스턴스에서 누가, 무엇을 세분화할지 정확히 정의할 수 있습니다.
AWS 데이터 소스에 연결할 때의 액세스 제어 정책
또는 다른 시스템.또한 다음과 같은 경우
타사 시스템에 연결, 최종 사용자 인증
OAuth를 본인처럼 사용.그래서 제가 만들고 있는 앱으로
세일즈포스나 HubSpot, Twilio에 요청을 하면
최종 사용자로서 그렇게 하는 거죠.저는 권한 있는 사용자, 통합 사용자 또는 이와 유사한 사용자로서 이 작업을 수행하는 것이 아닙니다.그래서 저는 오직 다음과 같은 내용만 볼 수 있습니다.
타사 앱 애플리케이션에 직접 로그인하면 확인할 수 있는 앱 스튜디오 앱의 데이터입니다.또한 다음과 같은 것들이 있습니다.
관리자 여러분, 조직에서 빌드된 모든 앱을 보고, 해당 앱을 모니터링할 수 있고, 해당 앱에 앱 수준의 역할을 정의할 수 있는 빌더가 있어야 합니다.
실제로 보안에 대한 광범위한 제어 기능을 제공하며
이러한 요구 사항과 요구 사항을 충족하기 위한 거버넌스
엔터프라이즈 앱에는 다음이 필요합니다.그리고 나서 Francois는 이러한 솔루션 중 일부의 비용에 대해 언급했습니다.
그리고 AWS를 따르고 있다는 사실이 정말 기쁩니다.
사용량 기반 요금 및 청구의 전통적인 요금 모델.이것이 의미하는 바는
빌드는 완전히 무료입니다. 저희 빌드 환경에 로그인해서 App Studio를 활성화할 수 있습니다.
로그인만 하면 앱을 무료로 빌드할 수 있습니다.
제너레이티브 AI를 사용하여 앱을 생성하여 앱을 수정하기 위해서입니다.그리고 당신이 할 수 있는 유일한 것은
비용은 최종 사용자가 소비하는 사용 시간입니다.
게시된 애플리케이션.따라서 해당 사용자가 사용하는 경우
이 앱을 한 달에 한 시간 동안 사용하면 25센트를 지불하게 됩니다.당신은 10달러를 지불하지 않을 거예요
월간 사용자 라이선스.해당 사용자가 로그인하지 않았거나 사용자가 없는 경우
한 달 안에 앱에 로그인하면 비용을 지불하지 않아도 됩니다.이 앱들은 서버리스입니다. 사용한 만큼만 비용을 지불하면 되죠.
비용이 많이 드는 이러한 제품을 장기간 유지할 필요가 없습니다.
월간 계약 및 사용자 라이선스.앞서 말씀드린 것처럼 GA를 체결하고 일반 내용을 발표했습니다.
2주 전, 11월 중순에 출시되기 전에 미리 보기를 진행했습니다.고객이 구축한 제품
정말 놀라운 앱들이 몇 개 있습니다.다음 중 하나에 대해 들어보실 수 있을 겁니다.
잠시만 기다려 주세요.하지만 사용 범위는
케이스가 정말 넓어서 한 슬라이드에 담기가 힘듭니다.한 가지 예를 들자면, Amazon 내부의 몇 가지 사용 사례에 대해 말씀드리겠습니다. 그러면 Francois는
그가 가장 좋아하는 몇 가지에 대해 좀 더 자세히 설명해 드리겠습니다.하지만 아마존에서는
완전히 배포한 25개 정도의 내부 팀
프로덕션화된 미션 크리티컬 비즈니스 애플리케이션
이미 App Studio를 기반으로 구축되었으며, 현재 개발 중인 앱은 수백 개는 아니더라도 수십 개가 넘습니다.아마존을 예로 들 수 있습니다.
운송 서비스.저희 미들 마일 항공사입니다.기본적으로 그게 전부예요.
도로에서 볼 수 있는 18개의 휠러 중에서
커다란 프라임 트레일러들, 크고 파란 트레일러들은
고속도로에 있어요. 저건 움직이는 상자들이에요.
주문 처리 센터에서 분류 센터까지.따라서 주문 처리 센터는
이 거대한 창고에서는 모든 선적 컨테이너가 들어오고 모든 상자가 그곳에서 하역된 후 유통됩니다.
분류 센터로.그리고 마침내 도착하게 되죠.
노드나 작은 엔드포인트에 분산되기 때문에
24시간 전송 또는 2시간 전송을 받을 수 있습니다.하지만 기본적으로 이 트럭들은
이러한 패키지를 옮기고 주문 처리에서 패키지와 재고를 재조정하고 있습니다.
센터에서 분류 센터로.그리고 이전에는 모든
직원들이 트럭을 적재하고, 트럭을 관리하고, 매뉴얼을 만들고 있었습니다.
예외 절차.박스가 너무 많이 들어갔을 때
트럭이 나타나지 않았거나 잠시만 기다려야 할 수도 있습니다.
블랙 프라이데이나 사이버 먼데이에는 트럭이 필요하죠.그 전체 과정은
용량 할당 변경은 완전히 수동으로 이루어졌습니다.그들은 앱으로 앱을 만들었습니다.
Studio는 한 두 주 만에 배포했고
규모를 늘렸어요.그리고 지금은 3만 9천 명 정도입니다.
아마존 주문 처리 센터에서는 이 앱을 이용할 수 있습니다.
새 트럭을 요청하거나 패키지 밸런싱을 조정하려면
아마존에 도착할 수 있도록 사이트 간 패키지 이동을 보다 효율적으로 진행하세요.
패키지가 훨씬 더 빨라졌습니다.그리고 아마존의 경우 최적화와 비용 최적화가 정말 뛰어납니다. 이제 그 부분들을 옮기고 있기 때문이죠.
패키징이 더 효율적이죠.다른 내부 공간도 있어요
내부 규정 준수를 관리하는 팀 및
인증서 순환.승인을 받았습니다.
모든 종류의 미디어 자산 및 이미지 프로세스
다양한 사용 사례.프랑수아, 조금 더 자세히 말씀해 주세요. 그러면 NFL에 대해 듣게 되어 기쁩니다. - 네, 네, 고마워요.방금 알아차렸는데 모든
우리가 말할 때마다 모든 것이 저기에 기록되고 있어요.악센트와 잘 어울리는 건 아니에요.그러니 여기가 너무 혼란스러우면 마지막에 우리를 만나러 오세요.
한두 가지만 명확히 설명해 드릴게요. 하지만 네, 그럼 이제
플랫폼을 설계한 것은 정말 다양한 사용 사례를 지원하기 위한 것입니다.다음에서 확인할 수 있을 겁니다.
Shawn의 솔루션을 잠시 살펴보겠습니다.하지만 여러분이 유용하게 사용할 수 있는 가장 고전적인 해결책처럼
내부 요구 사항, 클레임 처리, 필요한 모든 솔루션에 대해
광범위한 형식 지정, 데이터 수집, 처리
자동화, 문서에 적합한 데이터 저장소 또는 저장소에 데이터를 안전하게 저장하는 것은 항상 이와 같습니다.
App Studio의 탄탄한 사용 사례.인벤토리 및 장비를 관리하는 당사는 여러 고객을 보유하고 있습니다.
실제로 누가 이런 솔루션을 만들었는지,
다시 말씀드리지만, 몇 분 안에 재빨리 넣을 수 있게 해주세요
종합해보면, 여기 있는 우리 회사 중 한 곳의 경우가 그렇죠.
저희를 지원하고 있는 코스트코 배송 (저장소 구축)
그들의 IT 자산을 위해서요.그래서 우리는 정말 다양한 유형의 제품을 보았습니다.
맞춤 설정이 가능하기 때문에 구축된 솔루션입니다.
로직을 아주 쉽게 만들고 핵심 기능을 확장할 수 있습니다.
필요한 경우 코드를 사용하세요.더 많은 비용을 수용할 수 있습니다
복잡한 승인 절차.따라서 구축해야 하는 승인 유형이 있다면
여러분의 조직에서는 당연히 이에 적합할 것입니다.저희 회사도 지금 하고 있습니다.
바레인, 싱가포르 및 남부에서 검사
App Studio를 사용하는 아프리카.그래서 저희는 이러한 작업을 수행하고 있습니다.
데이터 센터를 검사하고 그 안에 있는 모든 데이터를 검사합니다.
Redshift에 취합되어 QuickSight에서 실시간으로 보고합니다.그래서 데이터가 저장되는 시스템에서 전환할 수 있었습니다.
며칠에 걸쳐 중앙 저장소로 조금씩 내려갑니다.
현황에 대한 실시간 보고서로
당사의 검사 규정 준수.그 팀은 또한 다음을 구축합니다.
공급업체 관리 시스템.아시다시피, 다음과 같은 것이 있습니다.
우리가 만들 수 있는 아주 다양한 애플리케이션처럼요.개인적으로 가장 좋아하는 것은 중앙 집중식 사례 정보라는 개념입니다.저는 이를 사례 관리라고 부릅니다.
하지만 근본적으로 다른 것으로부터 데이터를 가져오는 것이 아이디어죠.
쉽게 탐색하여 모든 정보를 수집할 수 있는 단일 인터페이스에 데이터 소스를 제공합니다.
비즈니스 프로세스가 무엇이든 간에 결정을 내려야 합니다.따라서 이러한 사용 사례는 가까운 시일 내에 제공될 것으로 예상할 수 있습니다.
어떻게 하면 더 큰 영향을 미치고 훨씬 더 단순화할 수 있을까요?
이러한 솔루션들은 굳건합니다.하지만 그건 좀 비슷하죠.
이런 종류의 것들에 대한 고가용성 개요는
우리는 App Studio로 구축했습니다.숀, 네가 처음으로 만들었잖아
App Studio를 통한 솔루션.조금 말씀해 주실 수 있나요?
당신에 대해 조금 더 알아볼까요?어떻게, NFL에서 무엇을 하고 있고 어떤 배경을 가지고 계신가요?- 네, 그래서 네트워크가 시작된 2003년에 NFL에 입사했어요.이제 21년 정도 됐는데 저는 아티스트, 방송 디자이너, 애니메이터로 NFL에 왔어요. 그래서 당신의 말로 표현하자면, 저는 좀 더 교활한 쪽에 가까울 것 같아요
박사 과정보다는 캠프였지만, 그 코드에 정말 흥미를 느꼈고 금방 찾을 수 있었습니다.
코드를 조금 짜면 할 수 있을 것 같아요.
제 디자인을 인터랙티브하게 만드세요.그러다가 자동화의 힘을 발견했어요.그 후로 몇 년이 지났죠.
저는 정말 많은 자동화를 만들고 있는 중이에요.
NFL 곳곳에 다양한 그룹과 부서가 많아요. - 좋아요.그럼 어쩌죠?
지금 부서에서 일하고 계세요?예를 들어, 여러분이 구축한 솔루션이 어디에 가장 도움이 되나요?- 음, 저희가 새로 만들었네요
헤드샷 프로세스의 워크플로 말이에요.
적어도 서너 개의 다른 그룹을 면밀히 다루고 있어요. 네. - 됐어요. 그리고 역사적으로 어떻게 됐는지 좀 말씀해 주실 수 있나요?
NFL이 그 선수들의 헤드샷을 처리하고 있었나요?자, 보시는 사진들은
TV나 잡지에서 이런 과정이 어떻게 진행되고 있나요?
플레이어들이 들어오고 나간다는 점을 고려하면
항상 새 시즌이고 이적 같은 것도 있고요.이에 대해 더 자세히 말씀해 주실 수 있나요?- 네, 전통적으로
NFL은 32팀 모두에 포토그래퍼를 파견합니다.
미국 전역.그리고 2~3일 만에 3,200개나 가져갑니다.
이 선수들의 사진.사진이 준비되면 좋아요를 눌러서
우리가 사용하는 클라우드 리포지토리죠.그리고 그 시점에서
사진 부서에서는 모든 파트너에게 접근 권한을 부여합니다.
ABC, NBC, CBS 등그리고 그들은 또한 기부합니다.
내부적으로 우리에게 연락할 수 있습니다.그 당시엔 한 무리가
NFL 내의 여러 그룹이 해당 이미지에 액세스하고, 다운로드하고, 다른 공급업체에 보내고, 프로세스별로 처리하게 됩니다.제 말은, 그들이 잘라냈다는 뜻이에요.
머리 부분을 제거하고, 배경을 제거하고, 헤드 샷의 크기를 조절한 다음, 사진을 기준으로 잘라냅니다.
각 그룹의 사양에 따라. - 수동 프로세스가 많이 필요한 것 같네요. 어디서 봤나요?
자동화가 가능하죠. 아주 정확하기 때문이죠, 그렇죠?미디어에 대해 말씀하시는 거잖아요, 그런 매체들은 그렇지 않아요.
문서나 데이터 포인트.그 과정을 살펴보면서 어떤 생각을 했었는지, 어떤 생각이 들었는지 같은
개선할 수 있는 기회가 있나요?- 네, 그래서 중복되는 부분이 많다는 걸 금방 깨달았어요.중복된 부분이 있었습니다.
처리 과정 어디에서든 여러 그룹이 서로 다른 공급업체를 통해 다운로드 및 처리했는데 모두 동일합니다.
얼굴 사진 맞죠?하지만 다들 처리 중이야
독립적으로 말이죠.로컬 스토리지에도 리던던시가 있었는데 정말 지루한 일이었어요.
시간이 많이 걸리는 프로세스예요. - 네, 그런 것 같네요
정보가 매우 고립되어 있었습니다.그렇게 말할 수 있을까요?
해결하려고 했던 문제점이 몇 가지 있었나요?- 네, 물론이죠.우린 덩치가 큰 것 같아요, 정말 많아요
대기업의 경우 NFL도 다르지 않습니다.우리는 매우 사일로화되어 있어요.그러니까 이 문제를 해결하는 거죠.
좀 어려웠어요. 달라지려고 했거든요.
서로 다른 지역에 있는 그룹들이 함께 대화하고 좀 더 중앙화된 프로세스를 만들었죠.왜냐하면 그 당시에는
아주 탈중앙화됐어요. - 그럼 어떻게 시작하게 됐는지 좀 말씀해 주실 수 있나요?기회를 보고 나서 만들고 싶었던 것 처럼요.
조직에 미치는 영향.첫 발걸음은 무엇이었나요?- 그래서 첫 번째 단계는
이 문제를 해결하기 위해 저희가 취한 것은 커스텀 코딩된 React 앱을 만드는 것이었습니다.웹 앱이었는데 이건
우리 아티스트인 유저들이 기본적으로
어떤 저장소에서든 이 이미지들을 가져올 수 있습니다.
클라우드 리포지토리를 사용하거나 로컬 서버에서 이미지를 가져온 다음 해당 이미지를 백엔드로 전송할 수 있습니다. 예를 들어 S3 버킷, 그리고 그곳에서 많은 처리가 이루어지는 AWS로 전송할 수 있습니다.
헤드샷은 Adobe Photoshop API처럼 잘라내서 잘라내는데, 기본적으로 이미지를 사용합니다.
인식해서 플레이어의 얼굴 사진 크기를 조절한 다음 잘라내세요.그러면 아티스트가
그런 다음 웹 앱을 사용하여 해당 이미지에 액세스하고 다운로드할 수 있습니다.
그런 다음 필요한 사람에게 배포할 거예요. - 잡았어요.그리고 얼마나 걸리는지,
이러한 요구 사항의 범위를 정하는 것부터 맞춤형 커리어 지원서의 첫 번째 프로토타입을 만드는 것까지
시간이 얼마나 걸렸나요?- 아마 모든 걸 다 썼을 거예요
이 모든 걸 다 해내려면 아마 6개월 정도 걸릴지도 몰라요
세트를 만들고 제작에 들어갔어요. - 그래서 만났던 것 같아요.
9월, 몇 달 전에 App Studio를 소개해 드렸죠.잠깐 말씀해 주실 수 있나요?
어떤 점이 마음에 드셨는지 아세요?전환하게 된 계기는 무엇인가요?어떤 점이 흥미로웠나요?- 네, 제 생각엔
그게 제일 흥미로웠고 관심을 끌었죠.
코드를 거의 사용하지 않고도 할 수 있는 기능이었죠.
응용 프로그램을 매우 빠르게 실행하고 이러한 연결을 얻을 수 있어야 합니다.
하드 코딩보다 수고를 덜 들여서 이 백엔드 서비스에 접속할 수 있어요. - 네.보안팀은 여러분이 App Studio를 사용하는 것에 대해 어떻게 생각했나요?마치 그들이 걱정했던 것처럼
그들이 가지고 있던 몇 가지 요구 사항이 있었나요? 어떻게 됐나요?- 제 생각엔 아름다운 것 같아요
앱 스튜디오와 오리지널 앱의 차이점은 무엇인가요?
우리가 시작한 것은 App Studio가 처리하는 것이었습니다.
우리가 검토해야 할 많은 증권과 많은 규정 준수
앱을 실행하고 모든 자격 증명을 관리할 수 있는 것만으로도 보안 부서와 함께 검토해야 한다는 것입니다.
비밀 관리자를 예로 들어보죠.좋았어요. - 네.자, 한 번 봅시다.자, 이것이 어플리케이션입니다.안내해 주실 수 있나요?
여기 무슨 일이에요?뭘 쓰고 있는 거지?
이 인터페이스 용도요?- 네, 그럼요.따라서 인제스트에는 기본적으로 두 개의 다른 섹션이 있습니다.포토쉘터가 있는데 이게 바로 이것입니다.
포토 리포지토리에 있는 모든 컬렉션을 보여줍니다.컬렉션을 선택하고 나면
그런 다음 팀을 선택하고 다음 팀으로 이동하면 해당 팀의 모든 선수를 볼 수 있습니다.이 시점에서 일회성 경기를 할 경우 한 명의 선수를 선택할 수 있지만, 초반에는
비슷한 프리시즌이 다가오고 있는 시즌에는
팀 전체를 선택하세요.말 그대로 100명의 플레이어를 선택하여 S3 버킷으로 푸시하고 바로 시작할 수 있습니다.
자동으로 처리되죠.여기서 우리가 할 수 있는 일이죠.
현지에서 먹으러 가세요.다시 말씀드리지만, 만약 우리가 한다면
액션 샷이라도, 잘라내고 싶은 건 뭐든
이걸 실제로 사용할 수 있고, 뭔가를 해낼 수 있어요.
서버든, 데스크톱에서든, 우리가 다운로드한 것이든 말이에요.그리고 우리는 무언가를 푸시할 수 있습니다.
여기서부터 S3로. - 그러니까 이건 벌크 프로세싱과 다른 프로세싱의 차이였어요. - 네, 이게 더 좋을 것 같아요.
아마 공연 지원만 하는 시즌에 쓰일 거예요. - 알겠어요. - 그리고 이건
포스트 프로세싱 섹션.따라서 모든 처리가 완료되면
백엔드에서 이루어졌는데, 여기서 할 일은 하나뿐입니다.
그리고 그 직업에 한 명의 선수도 있죠.하지만 이론적으로는
프리시즌 기간에는 각각 100명의 플레이어가 있는 32개의 다양한 직업이 있습니다. - 정말 흥미로워요.자, 잠깐 얘기해 보죠.
애플리케이션이 어떻게 설계되었는지에 대해서요. - 슬라이드가 두 개 있습니다.
동시에 그런 것 같아요. - 알겠어요. - 아, 그렇군요.잠시만요.네, 말씀드린 것처럼
Okta, 통합 같은 건 우리 보안 부서와 좀 더 비슷할 것 같은데요
여기서 우리는 이 애플리케이션에 대한 인증을 받을 수 있어야 합니다.App Studio의 멋진 점은 다음과 같다는 것입니다.
기업으로서 우리는 모든 것을 잘 챙겨주었기 때문에
Okta를 사용하여 AWS에 로그인하면, 우리가 구축하는 앱에 대한 연결이 자동으로 이루어집니다.그리고 우리가 사용하고 있는 백엔드 서비스 (예: S3 버킷, DynamoDB) 에 관한 한, DynamoDB는
실행 속도도 매우 빠릅니다.그리고 S3는 처리되는 동안 모든 이미지를 저장하죠. - 네, 여기까진
간단히 말씀드리자면, App Studio를 배포할 때 함께 배포합니다.
아이덴티티 센터 사용.Identity Center가 없거나 이미 Identity Center가 있는 경우 해당 인스턴스에 연결하기만 하면 됩니다. 따라서 사용 중인 IDP와 통합할 수 있습니다.또한 DynamoDB 인스턴스를 배포합니다.따라서 저장하려는 데이터가 있으면 해당 데이터가 모두 계정에 유입됩니다.이것이 바로 우리가 하고 있는 일의 핵심 요소 중 하나라고 할 수 있습니다.
모든 데이터, 이미지 문서 등등, 이 모든 것이 여전히 필요하단 말이에요.
NFL 계좌로 들어오세요.서비스가 관리되고 인프라가 관리되지만 서비스에 대한 액세스가 관건입니다.
NFL 계정과 데이터 흐름에서
Adobe와 Photoshelter에서도 매우 안전한 방식으로 이러한 계정에 액세스할 수 있습니다.당사는 이러한 자격 증명을 보관합니다.
Secret Manager에서는 다음과 같은 AWS 리소스의 리소스에 액세스할 수 있습니다.
IM 역할 및 정책.따라서 범위를 지정할 수 있습니다.
정확히 필요한 것을 찾아내고 완벽하게 제어할 수 있습니다.
무엇을 공개하기로 결정했는지요.그럼 조금 요약해 보죠.숀이 겪은 일
자신의 계정에 있는 S3와 같은 AWS 서비스에 액세스한 결과
그는 Adobe와 Photoshelter 간의 API를 조정하면서 이 모든 작업을 단일 빌더 인터페이스에서 수행할 수 있었고, 이를 통해 연결이 가능했습니다.
해당 서비스의 보안, 테스트 환경에서 변경 사항 테스트, 변경 사항 수행
개발 환경에서 테스트로 푸시한 다음 결과를 프로덕션으로 승격하십시오.그래서 이 모든 것이 즉시 사용 가능했죠.그가 공개 사양에서 얻을 수 있는 API에 액세스하는 것 외에는 설정할 것이 없었습니다. 그리고 SSO 및 IDD 공급자와의 통합은
그의 보안팀이 요구하는 사항 중 하나죠.오늘날 Shawn이 구축할 모든 앱은 기본적으로 개발될 것입니다.
해당 설정과 통합되었습니다.다음에 대한 계획이 있으신가요?
앱 스튜디오와 함께하는 미래?이번이 첫 애플리케이션인 것 같아요. 기대되세요?
다른 걸 만들고 싶으세요?- 네, 정말 그냥
우리에게 문을 열어주죠, 그렇죠?다음 번엔 그럴 것 같아요
우리가 시도하고 해결하려는 것은 일종의
저지 스왑을 하는 곳에서는 현재 생산 문제가 지속되고 있습니다.그래서 선수들은 시즌 중에 트레이드를 받을 때 카우보이 져지를 입고 사진을 찍었다가 트레이드했을 수도 있습니다.
시호크스라던가.Photoshop에서 이 모든 작업을 수동으로 수행하지만 현재 검토 중입니다.
Firefly API를 사용하면 신체 부위와 져지를 식별할 수 있고
대대적으로 져지를 가져와 져지를 교체하세요. - 네, 그래서 Adobe는
Firefly라는 새로운 API를 출시했습니다.아주 핵심적인 부분이죠.
이 해결책이 여기 있는 이유는
그 플레이어들, 배경 제거, 이 모든 게 방금 출시한 이 API로 이루어졌어요.숀, 이전에 그 API를 사용했다고 말씀해 주실 수 있나요? 그냥
몇 가지 공지를 가져왔어요.진행 상황을 좀 설명해 주실 수 있나요?
해당 API를 사용해 보셨나요?- 네, 정말 밤낮이 지났어요. 우리가 사용하던 API들은
첫 번째 솔루션에서는 훌륭한 성과를 거두었습니다.그들은 이미지를 꽤 잘 잘라냈지만 저희가 직접 해보는 것도 많았습니다.
사후에 해야 했던 작업, 수정 작업
가장자리 같은 것들 말이에요.그리고 지금 제가 찾고 있는 건
그 결과 70% 가 될 수 있다면, 새로운
API는 실제로 파일에 있는 모든 추가 픽셀을 제거하고 있습니다.
이런 플레이어 컷아웃의 가장자리가 우리를 사로잡았어요
지금은 아마 98% 정도 됐을 거예요. - 네, 멋지네요.세부 정보를 공유해 주신 Shawn에게 정말 감사합니다.한 가지 예시인데요,
라이브 소프트웨어와 John이 포함된 데모를 제공하겠다고 약속했습니다. 만약 여러분이 직접 사용하고 싶다면 인터넷으로 이 소프트웨어를 사용할 필요가 없기를 바랍니다.(웃음) 원하시면 리모콘을 드릴게요. - 감사합니다.그리고 숀, 고마워요.골프장에서 박수를 쳐줄게
모두에게 방해가 되는 건 아니지만 정말 대단한 일이죠.알아요, 제 생각엔 그들이 결국 누군가를 거래할 수 있는 앱을 만들게 될 거라는 건 정말 놀라운 일인 것 같아요.
일요일 오후에는 다른 팀으로 가서 먼데이 나이트 풋볼을 했어요.
모든 텔레비전, 모든 웹 사이트가 들어옵니다.
뉴저지에서는 모든 것이 업데이트될 거예요
사진을 찍으러 사진사를 보낼 필요도 없으니까요.정말 멋지네요.그래서 로그인을 하고 있는 김에 제 정보를 확인하고 있는 중이에요.
세션 제한 시간이 초과되지 않았어요.손을 들어주세요. 지금까지 App Studio를 활성화하고 사용해 본 사람은 누구인가요?아무도 없어요.정말 놀라워요.정말 좋아요, 그렇죠?대단한 일이죠. 왜냐하면
제품을 보시고 직접 만져보고 계실 겁니다.실제 코드를 보여드릴 수도 있고 아닐 수도 있습니다. 환경을 여기에 끌어다 놓기만 하면 됩니다.그리고 보자, 난 그냥 할게
어색하게 직감하세요.자 이제 여기로 넘어가겠습니다. 프레젠테이션을 바꿔서 App Studio에 바로 로그인하겠습니다.좋아요, 그럼 이제 시작하겠습니다.
App Studio에 로그인했습니다.콘솔을 사용하지 않고도 경험할 수 있는 경험입니다.그래서, 우리의 사명에 충실하게
더 많은 사람들이 애플리케이션을 구축할 수 있도록 지원하는 것이 AWS에서 가능해졌습니다.
AWS 콘솔의 계정.하지만 활성화되면 자격 증명 시나리오와 통합됩니다.
ID 공급자를 사용하고 App Studio에 게시된 앱을 관리, 빌드 및 액세스하려면 다음을 사용합니다.
기업 자격 증명, 그리고 이것은 완전합니다.
오프 콘솔 경험.그래서 그렇지 않은 사람들도
AWS 콘솔에 대한 액세스는 관리자일 수도 있고, 빌더일 수도 있고, 앱에 액세스할 수도 있습니다.
여기에 게시되어 있습니다.그래서 로그인해서 빌더 허브에 도착했습니다.
여기에서 제가 만든 앱이나 만든 앱을 모두 볼 수 있습니다.
공유가 되었으니 새 앱도 만들 수 있어요.
제품에 대해 배울 수 있고 튜토리얼을 찾을 수 있습니다.
그러면 시작할 수 있어요.잠깐 우회해서
상단을 보시면 관리 허브가 있습니다.그래서 만약 여러분이 관리자라면
사무실이나 사무실로 돌아오면 App Studio 인스턴스를 설정합니다.
홈, 사용자는 인스턴스 또는 사용자 인스턴스의 관리자일 수 있습니다.
관리자는 이 뷰를 보게 될 것입니다.자, 이건 사람들에게 말하고 있는 건데요.
App Studio가 제공하는 보안 및 거버넌스 제어.역할과 커넥터를 설정하여 빌더가 다음을 수행할 수 있습니다.
조직은 제품 자체 내에서 정의된 액세스 권한과 정의된 기능을 가지고 있습니다.따라서 역할의 경우 다음을 확인할 수 있습니다.
앱 사용자, 관리자, 빌더가 있고 IDP와 통합되어 있기 때문에 이들이 여러분의 모든 것을 사용하고 있다는 것을 알 수 있습니다.
기존 LDAP 및 AD 그룹.따라서 App Studio 팀은 관리자가 될 수 있고 App Studio 엔지니어는 빌더가 될 수 있고 App Studio XYZ는 앱 사용자가 될 수 있습니다.따라서 관리 관점에서 누가 무엇을 할 수 있는지 실제로 제어할 수 있습니다.
이 제품과 관련해서 두 번째로 중요한 것은
커넥터를 설정할 수 있습니다.그러니까 이게 근본적으로
커넥터를 사전 승인하고 설정하는 프로세스입니다.
기존 비즈니스 데이터.Shawn으로부터 들은 얘기는
그들이 이미 S3를 가지고 있는건지 모르겠어요. 이미 Dynamo를 가지고 계셨나요, 아니면 Dynamo가 작업을 추적하는 데 새로 온 건가요?- [Shawn] 새 제품이에요. - [John] 새 제품이라 연결 상태를 보여줍니다.
S3의 기존 데이터에 연결하여 기존 리소스에 연결하고 완전히 새로운 데이터를 저장합니다.
그렇게 할 수 있습니다.가장 인기 있는 모든 AWS 서비스를 위한 내장 커넥터를 제공합니다.일반 AWS 커넥터는 200개 이상의 AWS 서비스 모두에 연결할 수 있습니다. 바로 Bedrock과 Lambda입니다.
추출과 인식, 그 밖의 모든 기능
오늘 발표된 바와 같이, 베드락 에이전트는
여기에서 사용할 수 있으므로 네트워크에 통합하는 방법으로 연결할 수 있습니다.
앱 스튜디오 애플리케이션.또한, 저희처럼
앞서 말씀드렸듯이, 어도비 API와 포토쉘터 API에 연결하면 REST API 커넥터를 사용할 수 있고, 오픈 API 사양을 업로드할 수 있고, 내장된 기능을 갖추고 있습니다.
세일즈포스용 커넥터와 다른 타사의 커넥터
보다 기본적인 커넥터 환경을 갖춘 애플리케이션이 곧 출시될 예정입니다.이들은 다양한 기능을 지원합니다.
인증 메커니즘 (사용자가 애플리케이션 및 해당 세 번째 애플리케이션의 데이터에 액세스할 수 있도록 하는 사용자별 인증 포함)
타사 애플리케이션 자체좋아요, 그럼 정말 빠르게 돌아가서 빌더 허브로 돌아가서 빌드를 시작하겠습니다.그래서 앱 만들기를 누른 다음, 여기로 볼게요.
우리가 시작 플로우라고 부르는 것을 시작하거나
콜드 스타트 경험은 이번이 처음입니다.
제품 내부의 제너레이티브 AI와 실제로 상호 작용하고 있는 셈이죠.그리고 건축가로서 이것은
일종의 첫 걸음이죠.오른쪽에는 전체 카탈로그가 있습니다. 50~75개의 예제 프롬프트가 있는 것 같아요. 고객이 공유한 가장 일반적인 사용 사례 중 일부입니다.시작하는 데 도움이 되도록 몇 문장으로 요약해 보았습니다. 사용자 지정을 클릭하면 채워지는 프롬프트의 예시를 보여드리겠습니다.
원하는 경우 go를 누르세요. 원하는 경우 아무 것도 입력할 필요가 없습니다. 또는 왼쪽 하단에서 빌드하려는 앱을 입력할 수 있습니다.그래서 기존에는 마이크와 라이브 어빌리티가 있다면 물어보곤 했죠.
자원 봉사자의 의견을 구하겠지만, 프랑수아가 대신 해줄게요이제 완전히 살아있다는 걸 보여드리고 프랑수아에게 물어볼게요
그가 만들고 싶은 앱이 뭔지.라이브로 빌드해서 어떤 결과가 나오는지 볼 수 있을 거고 얼마나 빠른지도 알게 될 거예요
그냥 아이디어를 떠올려서 제대로 작동하는 앱을 만들려는 거죠.
App Studio에서 미리 보고, 테스트를 시작하고, 반복 작업을 시작하세요. 시간이 정말 빨라집니다.
아이디어에서 실제 앱으로. - [프랑수아] 좋아요, 뭐,
지난 번에 발표했을 때는 HR 같은 부서를 구했는데
채용 워크플로 솔루션.그럼 여기서 다른 것을 해봅시다.사람들이 요청하기만 하면 되는 헬프데스크 유형의 앱과 같은 IT 티켓팅 시스템을 만들어 보겠습니다.
고객이 제품에 문제가 생겼을 때 도와주세요. - [John] 좋아요. 그래서 저는 IT 헬프데스크를 운영하고 있는데 사용자가 수리 요청을 제출할 수 있는 앱과 요청을 승인하거나 거부할 수 있는 기능을 갖춘 요청을 검토할 수 있는 대시보드가 필요해요.더 추가하고 싶은 내용이 있으신가요?- [프랑수아] 자, 여기까지요.저희 빌더가 뭔지 보세요
도움을 받으면 우리가 돌려받을 수 있는 것에 따라 변화를 줄 수 있을지도 몰라요. - [존] 좋아요, 그럼 그냥
프랑수아가 한 말을 설명해 주셨어요.지금 벌어지고 있는 일은 우리
AI 에이전트가 그 프롬프트를 분석할 거고 우리는
App Studio에 대한 지식을 활용할 거예요.
다른 사용 사례에 대한 지식을 사용할 거예요.
이미 개발된 다른 앱들을 저희가 정제해서
더 많은 것을 구축할 수 있는 일련의 사용 사례, 요구 사항 및 데이터 모델
찾고 있는 앱을 정확하게 표현했습니다.이것은 기본적으로 여러분의 PRD입니다.
생성하려는 제품 요구 사항 문서
또는 완전히 새로운 프로젝트를 시작할 때 작성하게 될 프로젝트 계획.그래서 이걸 좀 더 확장해 볼게요.
잠깐 살펴보도록 하죠.그럼, 사용부터 시작해보죠.
헬프데스크 사용자를 위한 사례: 수리 요청을 쉽게 제출하고 싶은데 알림을 받고 싶어요
승인되거나 거부된 경우, 헬프데스크, 관리자 여러분, 보류 중인 모든 수리를 확인하고 싶습니다.
요청, 검토, 승인, 선택적으로 알림 전송, 수리 요청 제출을 위한 사용자 흐름
요청을 검토하기 위한 사용자 플로우와 데이터 소스그런데 흥미로운 점이 하나 있습니다.
제가 기존의 어떤 데이터에도 연결하지 않았다는 겁니다. 수리 요청에 대한 이 데이터 모델은 근본적으로 시사하는 바는
새 데이터베이스 테이블.그래서 이것은 다음을 제안하는 것입니다.
수리 요청을 저장할 수 있는 새 데이터베이스 테이블입니다.그리고 여기에는 필드도 포함됩니다.
그리고 필드 유형.흥미롭네요. 필요한 상태 열이 있는데 여기에 기본적으로 상태를 나타내는 열거형이 있다는 것도요.
수리 요청에 대해서요.이게 정말 놀랍네요
아주 간단한 한 문장 프롬프트에서 세부 사항이 생성되었는데, 이는 훌륭한 출발점입니다.프랑수아, 아무거나
여기 맘에 안 드는 것이나 뭐 그런 거
추가하고 싶은 부분이 빠졌나요?왜냐하면 이제 우리가 할 수 있는 일은
왼쪽 하단에서 변경 사항을 다시 설명해 드릴 수 있습니다. 그리고 이 부분에 대해 좀 더 자세히 설명해 보겠습니다.
결국 우리가 실제로 원하는 것에 더 가까이 다가갈 수 있도록 개요를 작성하세요. - [Francois] 네, 그래서 저는 여기서 데이터 모델을 살펴봤을 뿐이에요.데이터를 하나만 추가할 수 있을까요?
요청을 처리하는 사람처럼 담당자를 가리키면 추적할 수 있을까요?- [존] 그럼요.그럼 제가 말할게요
RepairRequest에 필드를 하나 더 추가해서 담당자를 추적하세요. 아니면 소유자라고 해야겠네요. - [프랑수아] 네.
- [John] 요청의 소유자.그리고 저는 여기서 끝낼게요.그래서 이걸 보내고 이제 이 AI 세트를 보내볼게요
에이전트는 개선 프롬프트를 받아 요구 사항을 살펴볼 것입니다.
생성되어 결합하고 수정하려고 시도하는 것이죠.이제 이 데이터 소스를 볼 수 있고 소유자 필드가 추가된 것을 볼 수 있습니다.아주 간단한 예시입니다.시간이 더 있었으면 이렇게 물어볼 수 있겠네요. 상태나 승인 객체를 분리하고 싶었을지도 모르죠.
RepairRequest에서 가져온 것인데 아마도 2단계 승인일 수도 있으니까요.생성해 달라고 부탁할 수도 있겠네요
완전히 새로운 데이터베이스 테이블 또는 실제 수리 자체와 관련된 승인 요청을 나타내는 새로운 데이터베이스 모델.그래서 많이 다릅니다.
개선으로 할 수 있는 일들, 일단 만족하면, 프랑수아- - [프랑수아] 정말 만족해요. - [존] 정말 행복해요.
와, 저 미소 좀 보세요.또한, 여러분은 할 수 있습니다.
앱 개요를 볼 수 있습니다.이 앱을 Read-me 앱으로 생각해 보세요. 정말 많은 부분이 없어집니다.
문서화 작업은, 원한다면 이것을 복사해서 붙여넣고 read-me 파일에 넣을 수 있습니다.
이 내용을 팀원들과 공유하세요. 그러면 이 앱에 포함될 주요 기능을 알 수 있고, 사용법도 알 수 있고, 정말 놀라운 순간이 될 거예요.앱 생성을 누르겠습니다.이게 뭘 할 건지, 그리고 난
이걸 먼저 설명할게요. 너무 빠르기 때문이죠.
우리의 AI 지원은 우리가 메타모델이라고 부르는 것을 만들었습니다. 기본적으로 메타모델은 다음을 지원합니다.
이러한 요구사항.메타모델을 다음과 같이 생각해 보십시오.
완전한 애플리케이션을 제외하면 거의 모든 CDK 정의에 가깝습니다.그리고 그 메타모델은
인간이 복습하고 검토할 수 있도록 자연어로 반영되었습니다.하지만 그 메타모델은
비주얼 빌더로 변환되어 실제 앱으로 표현되었습니다.일단 빌더에 넣으면
경험에 비추어 볼 때, 우리는 코드를 생성해서 실제로 할 수 있도록 합니다.
앱을 실행하고 실행하세요.이제 Generate 키를 누르면 몇 초 후에 이 세트를 볼 수 있을 겁니다.
요구 사항을 비주얼 빌더 내부의 앱으로 변환했습니다.그래서 앱을 바로 미리 볼 수도 있고 바로 편집할 수도 있죠.그래서 이건 실시간이에요.속도는 빨라지지 않았습니다.
이 데모를 보셨잖아요. 제가 프랑수아와 이야기를 나누지 않았다면, 프랑수아가 뭘 원하는지 알았더라면 더 빨리 할 수 있었을 거예요.하지만 꽤 놀라웠어요.그래도 예뻐요
놀랍습니다. 우리가 제공할 수 있는 기능들은
제품 내에서 말이죠.미리보기 버튼을 눌렀습니다.미리보기가 하는 일은
그 메타모델을 가져와서 앱을 근본적으로 컴파일한 다음 보여주는 거죠.
브라우저 탭이 게시되었을 때와 똑같이 실행됩니다.여기서 주의할 점은
완벽하진 않죠?픽셀 단위까지 완벽하고 완벽한 앱을 만드는 게 목표가 아닌 것처럼
어떤 변경도 필요하지 않습니다. 커스터마이징을 해야 한다는 기대는 여전히 남아 있습니다.
이거 필요에 맞죠?예를 들어, 홈페이지는
수리 요청 제출입니다.다음을 원할 수도 있습니다.
홈페이지를 대시보드로 설정하세요.따라서 약간의 수정을 가할 수 있습니다.AI는 아직 당신의 마음을 제대로 읽을 수 없기 때문에, 여전히 사용자가 직접 조작하고 업데이트해야 합니다.하지만 60초도 안 걸린다는 건 정말 놀랍습니다.
제출 양식이 있는 완전한 CRUT 앱이 생겼습니다. 이 앱에는 이러한 주요 세부 정보가 많이 담겨 있습니다.이미 다음과 같이 연결되어 있습니다.
이 앱을 게시하면 백엔드의 DynamoDB 테이블이 계정으로 푸시됩니다.그리고 모든 것을 보여주는 대시보드가 생겼습니다.
이런 수리 요청들.그럼 언제 또 무슨 일이 벌어졌을까요?
우리가 만든 응용 프로그램은 다른 에이전트가 샘플 데이터를 생성해서 제가 이 앱을 테스트하고 실제로 어떻게 작동하는지 볼 수 있도록 하기 위한 것이었습니다.
실제로 대표적인 데이터로 작업을 수행할 것입니다.그래서 저는 잘 모르겠어요.
당신, 테스트를 하는 건 꽤 고통스러워요, 정말 예뻐요
샘플 데이터를 생성하는 것은 고통스러워요. 만약 가지고 있다면 정말 고통스러워요.
데이터를 DynamoDB로 가져와서 프로덕션 및 테스트에 배포한 다음 데이터를 삭제하는 것입니다.그래서 이런 종류의 샘플 데이터 에이전트를 사용하면 이 작업을 훨씬 쉽게 수행할 수 있습니다.처음 출시한 제품 중 하나이기도 하지만, 동시에 출시한 것 중 하나이기도 합니다.
그게 가장 도움이 됐어요.여기 보시면 정말 놀라울 따름입니다.
이러한 요청의 목록입니다.일부는 이미 처리되어 승인되었으며 일부는 거부된 것으로 보입니다.저한테는 역량이 있어요.
전체 세부 정보 보기가 있는 테이블을 볼 수 있습니다. 여기로 돌아가서 스크롤을 하면 여기에서 편집으로 이동할 수도 있습니다. 오늘 승인됨, 처리됨, 오늘 언제인가요?11:00 이라고 할게요. 이걸 제출하면 전체 상호작용을 볼 수 있을 거예요. 미안해요, 컴퓨터예요.
조금 거꾸로 되돌아가 보셨을 텐데요, 이제 이걸 보실 수 있습니다.
이제 맨 윗줄이 승인되었습니다.프로세스 시간을 설정했는데 이 앱을 테스트하고 계신가요?
브라우저에서 즉시 완전히 켜지고, 보이는 그대로입니다.
경험으로 얻을 수 있는 것.다시 저희 앱으로 돌아가 볼게요.
제가 알아차린 것은 우리의 지표 카드가 그다지 좋지 않다는 것입니다.
알맞은 데이터를 보여준다면, 어쩌면 AI가 이걸 연결하는 걸 잊었을지도 몰라요. 그래서 그냥 확인해 볼게요.
약간의 불일치가 있긴 하지만 제가 바꿔보니
우리의 시각적 경험, 비주얼 빌더, 다른 탭에 실시간으로 변경 사항이 반영되는 것을 볼 수 있습니다.그래서 건물을 만들 때는 보통 화면이 더 크고 창도 두 개, 창 한 개가 있죠.
어떤 창은 제 빌더 화면이고, 다른 창은 실제 앱이고, 그냥 앞뒤로 이동할 수 있죠?마치 누군가가 사용한 것과 거의 같습니다.
예전에는 드림위버를 만들었죠. 하지만 제작하는 대신
지금은 그냥 정적인 웹 사이트일 뿐이고, 완전한 앱을 만들고 있는 거죠?이 앱은 풀스택 앱입니다.타입스크립트를 사용하고 있습니다.
그리고 SJS는 그 메타모델로부터 완전히 코드 생성되었습니다.
앞서 설명했던 내용이죠.여기 빌더 안에서
모두에게 방향을 알려드리기 위해 세 가지 주요 모드를 준비했습니다.상단을 보시면
페이지, 자동화, 데이터가 있습니다.페이지는 UI 페이지이고, 앱의 시각적 경험이고, 가운데 탭은 자동화입니다.이는 애플리케이션의 모든 비즈니스 로직 또는 API를 나타냅니다.그래서 제가 만들고자 하는 것이 바로 이것입니다.
레코드를 업데이트하거나 생성하기 위해 데이터베이스를 호출하는 것입니다.여기서 이메일을 보낼 수도 있고, API를 호출할 수도 있고, 포토쉘터에 전화할 수도 있습니다.
이미지를 가져와서 내 앱 내에 표시할 수 있는 API입니다.데이터 탭은 제 데이터 모델을 나타냅니다.이것이 전부를 나타냅니다.
필자의 필드, 데이터 유형, 데이터가 서로 연관되는 방식, 데이터 쿼리를 정의할 수 있는 방법은 다음과 같습니다.
이 세 가지 모드.왼쪽은
앱 내 모든 페이지를 볼 수 있어요.예를 들어, 다음을 볼 수 있습니다.
수리 요청 보기.내 네비게이션 메뉴에는 없는데, 왜냐면 넌 그렇지 않거든
내비게이션의 세부 정보 페이지인 보기 페이지를 보고 싶어요.AI가 이를 이해하고 화면에서 삭제했습니다.
내비게이션 바는 다음과 같은 예를 들자면 자동으로
여기서 무슨 일이 벌어지고 있는 건지.그래서 우리가 원했던 건
이 대시보드에서 메트릭스 카드를 확인해 보려고 했었죠.보류 중인 요청이 있는데 여기에서 볼 수 있습니다.
꽤 흥미로워요.그래서 이게 무슨 짓을 했냐면
이런 지표 카드를 추가한 다음 오른쪽에
참고로, 이것은 모든 다양한 구성 요소에 대한 구성입니다.보시다시피 다음과 같습니다.
보류 중인 요청은 데이터베이스 테이블인 엔티티에 연결되어 쿼리를 생성했지만 마치 그런 것 같습니다.
예상한 대로 상태를 제대로 매핑하지 못했겠죠?자, 입력이 하나 있습니다.
이 데이터 쿼리의 매개 변수이므로 보류 중입니다.그래서 저는 그냥 할게요.
AI를 좀 도와주세요.이 상태를 추가할게요
여기서는 보류 중이고, 승인된 경우 승인됨과 거부됨을 추가하겠습니다.그냥 확인해 볼게
이것도 거기에 추가되었습니다.그래서 제가 그걸 할 때
이제 자동으로 실행될 거예요.
다른 탭, 다시 컴파일해서 업데이트된 버전을 보여주세요.이 대시보드를 열면 이제
정확한 아이템 개수그리고 넣는 걸 잊어버렸다는 게 조금 아이러니합니다.
상태 파라미터에 대해서 말하자면, 이 데이터 쿼리를 다시 열면 이 모든 것이 AI 어시스턴트에 의해 생성된 것입니다. 그렇죠?그래서 AI 어시스턴트는 제가 이 메트릭 카드를 사야 한다는 걸 알았죠.
상태를 기반으로 필터링된 쿼리를 생성하여 특정 카드 내의 상태 수를 표시하려는 것이죠.그래서 이 데이터를 만들었죠.
제 데이터베이스 테이블에 쿼리를 해보니 wear 절이 설정되었어요. 이제 제가 전달해볼게요.
승인됨, 거부됨, 보류 중일 때, 여기에 매핑되고 나면
제 메트릭 카드에 적절한 계좌가 반환됐어요정말 놀라웠어요.
인공지능의 능력을 생각해 보세요. 하지만 비주얼 빌더 내에서의 매우 직관적인 경험이기도 하죠.자, 이제 이 앱이 저희 앱이라는 것을 알 수 있습니다.어쩌면 아주 간단할 수도 있겠지만,
오른쪽에서 제 앱에 다른 구성 요소를 추가할 수 있는 것을 볼 수 있습니다.데이터 구성 요소도 다르고, 생성형 AI 구성 요소도 있고,
날짜 구성 요소, 버튼, 텍스트 등 원하는 모든 것
앱에 추가하고 싶은 경우, 앱에서 드래그할 수 있습니다.
오른쪽 컴포넌트 팔레트를 앱으로 옮길 수 있습니다.한 행만 추가하고 싶었는데 드래그 앤 드롭을 하기로 했다고 가정해 봅시다.
행, 행이 추가되면 여기에 새 구성 요소를 추가할 수 있습니다.레이아웃도 디자인할 수 있고 디자인도 할 수 있고 테마도 지정할 수 있어요.내 헤더와 내비게이션 바.바꾸고 싶으면 만들어
대시보드 내 홈페이지에서 구성을 클릭하기만 하면 됩니다.
제 홈페이지로 만들기 위해서요.앱이 다시 로드됩니다.대시보드의
이제 제 홈페이지가 될 거예요.제 메트릭스 카드가 정말 멋져요.행이 하나 있어요.
컴포넌트를 추가할 수 있어요.아마도 그 다음은
이 앱이 어떻게 보이는지 커스터마이징하고 싶어요.제 색상 팔레트에 맞추고 싶어서 기분이 정말 좋으면 다크 모드를 선택할 수도 있어요.
약간 가장자리에 있거나 헤더 색상을 선택할 수도 있습니다.그럼 제 기억이 나는지 봅시다.
아마존 오렌지 색상이죠.헤더 색상을 설정하면 제 앱에서 바로 확인할 수 있습니다.
보조 색상의 테마 설정과 스타일링을 도와주세요.그건 제가 선택할 수 있어요.그러면 내비게이션 색상과 버튼 색상 등이 바뀝니다.이거 정말 만들 수 있어요
앱은 우리 회사에서 만든 앱처럼 생겼어요.로고도 추가할 수 있고 배너도 추가할 수 있어요.아주 쉽게 만들 수 있어요.
제 앱처럼 생겼어요.그럼 다음으로 하고 싶은 건
우리가 정말 흥분한다는 걸 보여줘요. 잠깐 얘기했었죠
제너레이티브 AI를 사용하여 앱을 추가하고 수정할 수 있다는 것이죠.이제 ViewRepairRequest 페이지에 왔는데 이것이 바로 세부 정보 뷰입니다.이제 세부 사항을 볼 수 있습니다.
특정 요청에 대해 추가하고 싶을 수도 있습니다.
수리 기록을 업로드할 수 있는 기능
이 특정 요청과 관련된 내용은 다음과 같습니다.
서비스 기술자.수리 기록에 있는 내용을 요약해서 좀 더 빠르게 확인하고 싶을 수도 있습니다.
요약 보고서를 다시 받아 상태를 업데이트하고 해결 방법을 추적하세요.
이러한 문제가 보고되었습니다.자, 왼쪽 아래가
AI를 이용한 빌드를 볼 수 있습니다.이것은 우리의 AI 어시스턴트입니다.
몇 가지 추가 프롬프트가 있습니다.이 중 하나를 클릭해서 실행하거나 직접 설명해 볼 수 있습니다.간단한 일도 할 수 있어요.버튼을 추가할 수 있어요.
버튼 이름을 변경하세요.구성 요소에 아이콘을 추가하거나 전체 기능을 추가하는 등 꽤 복잡한 작업을 수행할 수 있습니다.이제 수리 노트를 위한 업로더를 추가하고 요약해 보겠습니다.따라서 수리 노트 업로드를 추가해 S3에 저장하겠습니다.
그런 다음 이를 요약하고 간결한 결과를 생성하십시오.
주요 문제 및 결과를 설명합니다.그럼 이걸 다시 보낼게요, 우리처럼
시작 경험 또는 콜드 스타트 경험, 프롬프트를 분석할 거예요.
페이지를 분석하고, 내 앱을 분석하고 방법을 알아낼 거예요.
제가 설명한 변경 사항을 앱에 연결해서 이 모든 문제를 해결하러 갈 필요가 없는 곳이나 직접 많은 작업을 하지 않고도 제대로 작동하도록 만들죠.그럼 AI 에이전트는 어떨까요?
도대체 어떻게 그런 일을 할 수 있는지 알아내는 거죠.그래서 프로세싱이 필요하죠.
인터넷 속도가 약간 느리기 때문에 처리될 때까지 기다려야 할 것 같습니다.하지만 보시다시피
계획을 가지고 돌아옵니다.그러니까 그냥 그런 게 아니에요.
앱을 즉시 수정하세요. 그러면 앱이 사용자를 확인하고 확인할 거예요.그래서 물어볼 거예요, 헤이,
업로드하고 요약할 수 있는 새 섹션을 추가할게요. 수리 노트에는
파일 업로드 구성 요소, 트리거 버튼 추가
요약, 수리 노트 요약을 표시하는 마크다운 포함정말 훌륭하게 들리네요.
그럼 확인을 눌러볼게요.그리고 이게 추가된 걸 볼 수 있죠.그래서 행이 하나 추가되었죠.
파일 업로더와 요약 버튼을 추가했습니다.좀 더 자세히 들여다보면
자세한 내용을 보시면 알 수 있을 겁니다.
버튼은 이 자동화에 연결되어 있습니다.그리고 이 자동화는
S3 파일의 세부 정보를 전달합니다.S3에 전달될 거예요
업로드된 파일, 파일 이름, 버킷, 그리고 자동화 자체에서는 이것이 비즈니스 로직입니다.
아니면 제가 설명했던 그 API 말이에요.이 제품은 이 용도에 맞게 생성되었습니다.
나.라이브 데모를 보셨잖아요.이로 인해 흐름이 생성되었는데
S3 객체를 가져온 다음 Bedrock을 호출할 것입니다.
LLM 호출 단계를 통해 다음과 같이 요약할 수 있습니다.
방금 업로드한 파일입니다.보시다시피 제가 입력한 내용이 있고 간단한 사용자도 있습니다.
프롬프트, 이걸 커스터마이즈할 수 있어요.AI가 저를 위해 이 사용자 프롬프트를 생성했어요.수리 노트의 전문 분석기가 간결한 요약을 제공하므로 매우 유용했습니다.멋져 보이네요. - [Francois] 할 수 있을까요?
사용할 수 있는 모델 같은 옵션을 몇 가지 더 보여주세요. - [존] 네.Invoke LLM에는 다양한 모델이 있습니다.제 요청에 따라 할 수 있습니다.
온도, 최대 P를 설정하면 모의 출력을 설정할 수 있습니다.여부도 선택할 수 있어요.
이 모델들이 클로드 모델인지 아니면 타이탄 모델인지 아닌지.ANOVA 모델은 다음과 같습니다.
곧 출시될 예정입니다.그럼 그렇게 될 거예요.
여기에서도 사용할 수 있습니다.하지만 게시된 앱에서 어떻게 보이는지 살펴보도록 하겠습니다.자, 이 앱은 사이트 앱입니다.이거 어젯밤에 해본 것 같은데
처음부터 끝까지 보여드리고 실제로 요약을 수행할 수 있는 자료가 있는지 확인하기 위해서입니다.이제 완전히 배포되었습니다.요청이 있는 것을 볼 수 있습니다.
그리고 보류 중인 요청.이건 약간 다릅니다.정확히는 아니에요.
프랑수아의 앱이긴 하지만 비슷하죠.파일을 선택하고 수리 메모를 선택하면 S3가 업로드됩니다. S3에 업로드하면 됩니다.요약해 볼게요, 이거
같은 구성품이에요.우리가 다른 것을 추가한 것처럼 AI 어시스턴트가 이걸 추가했어요.자, 여기서 볼 수 있는 게 있어요.
간결한 요약이 있습니다.이제 이 요약을 복사하여 붙여넣을 수 있습니다. 전체 내용이 분석되었습니다.
수리 노트 문서를 작성하면 이 문서를 기록에 저장하거나, 다른 시스템을 업데이트하거나, 클릭 한 번으로 또는 내 행을 자동으로 업데이트할 수 있습니다.
이 결과를 바탕으로 말이죠.다른 콘솔을 사용할 필요도 없었고, 직접 프롬프트를 작성할 필요도 없었고, 와이어링을 할 필요도 없었죠.정말 놀라웠어요.그럼 다시 갈아타야겠어요
파워포인트로 넘어가서 아주 빠르게 마무리하세요.2분 정도 시간이 남았으니 이 로드맵을 자세히 살펴보도록 하겠습니다. 몇 가지 주요 내용은 여기서 다루었습니다.우리는 퍼블리싱된 앱에서의 세대 AI에 대해 보여줬습니다.이것이 바로 우리가 방금 시연한 내용입니다. 테마 설정과 스타일링, 앱을 수정하는 세대 AI에 대해서도 설명했고, 관계형 데이터 모델링에서 이를 간단히 살펴보았습니다.
곧 엔터프라이즈용으로 출시될 예정입니다. 배포 시간 단축, 커넥터 구성,
제어 및 조직 전체 공유.오류 모니터링도 로드맵에 포함되어 있습니다.곧 출시할 예정입니다.
더 많은 네이티브 통합 SaaS 및 3P 액션 커넥터.세일즈포스도 있고 API도 있지만 도입할 예정입니다.
기본 커넥터가 더 많아져서 훨씬 더 쉽게
해당 엔드포인트에 연결하세요.또한 호출
자동화를 위한 API, 이제
기본적으로 헤드리스 앱이나 다른 앱을 사용할 수 있습니다.
기업 내 앱은 방금 이 데모에서 살펴본 것처럼 시각적으로 정의된 비즈니스 로직을 호출합니다.또한 통합도 있습니다.
Q 비즈니스를 통해 제너레이티브 AI를 통합할 수 있게 되면
RAG, 엔터프라이즈 검색 및 일부 새로운 기능
상담원, 워크플로, 작업 등의 기능을 통해 이러한 작업을 수행할 수 있습니다.
App Studio 앱에 통합할 수 있습니다.여러분 모두에게 감사하고 싶어요
오늘 나와줘서 고마워요.또한 고객 여러분께 진심으로 감사드립니다.이 고객들은
저희와 함께 비공개 베타 테스트를 진행했고, 이제 GA로 넘어갑니다.정말 도움이 되었어요.
우리가 제품을 다듬어요.정말 멋진 여정이었어요.숀, NFL, 딜로이트, 어도비는 훌륭한 파트너였으며 다른 고객들도
우리가 여기까지 올 수 있도록 도와준 수백 명의 다른 사람들과 함께 말이죠.다음은 몇 가지 QR 코드입니다.이걸 화면에 그대로 두겠습니다.하나는 시작 자습서이고 다른 하나는 단계별 자습서입니다.
앱 구축 안내.자세히 알아보겠습니다.
오늘 오후에 세션이요초크 토크예요.더 자세히 알아볼게요
자바스크립트 익스텐션 포인트와 람다 통합
App Studio 내에서 프로 개발자 또는 이미 존재하는 Lambda에 연결할 수 있으며, 우리가 제공하지 않는 경우 조직 내 개발자들이 앱을 실제로 사용자 지정하는 데 도움을 줄 수 있습니다.
기능을 바로 사용할 수 있게 되면 2시 30분에 앱을 검색할 수 있을 것 같지만, 그 덕에 저는 정말 고마워요. 여기서는 질문을 받을 수 없네요. 하지만 프랑수아 저, 저,
Shawn이 맨 뒤에 와서 질문이 있으면 물어볼게요. 강당에서 나가세요.
헤드폰은 여기 두고 오시면 어떤 질문이든 답변해 드릴 수 있을 거예요.
스타디움 뒤편에서요.정말 고마워요.멋진 리인벤트 되세요.오늘 와주셔서 감사합니다.(관중들의 박수)